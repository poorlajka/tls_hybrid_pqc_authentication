#include <array>

#include "polynomials.hpp"
#include "test.hpp"

#include <catch2/catch_test_macros.hpp>

const size_t TEST_VEC_LEN = 16;

// clang-format off

const std::array<uint8_t, 8 * TEST_VEC_LEN> enc_poly64_vec_xs = {
    0x3c, 0x7e, 0x08, 0x15, 0x7b, 0x5b, 0xad, 0x5b, 0xc8, 0x3b, 0xc0, 0x21, 0x35, 0x17, 0x11, 0x11,
    0xb8, 0x75, 0xed, 0x42, 0xa0, 0x59, 0x54, 0x03, 0x8e, 0xb4, 0x13, 0xb8, 0xc3, 0xe5, 0x80, 0x63,
    0x36, 0x9a, 0x5e, 0x03, 0xc1, 0x3b, 0x13, 0x0e, 0x7c, 0x7a, 0xbe, 0x4f, 0xc6, 0x3d, 0x5b, 0x3f,
    0xd0, 0x66, 0x9c, 0xf7, 0x8c, 0x27, 0xd3, 0x57, 0x5c, 0xbe, 0x78, 0x8e, 0xb1, 0x32, 0x08, 0x1f,
    0xc1, 0x32, 0xc1, 0xd8, 0xa2, 0x79, 0x9c, 0x02, 0x32, 0x3a, 0xb5, 0x56, 0x8c, 0x8c, 0x17, 0x90,
    0xa7, 0xe3, 0x6a, 0x51, 0x07, 0xc2, 0xea, 0xd4, 0x5d, 0x40, 0x52, 0x37, 0x0f, 0x9c, 0xd5, 0x9e,
    0xae, 0x08, 0x81, 0x24, 0x40, 0x0d, 0x65, 0x9c, 0x7e, 0xc2, 0xca, 0xe6, 0x30, 0x5a, 0x24, 0x86,
    0xa0, 0x30, 0x10, 0xc7, 0x02, 0xc2, 0x0b, 0x8b, 0xbf, 0xac, 0x6a, 0x32, 0x6e, 0x5e, 0x14, 0xa4,
};
const std::array<uint8_t, 8 * TEST_VEC_LEN> enc_poly64_vec_ys = {
    0x10, 0xa6, 0xfc, 0x5d, 0x59, 0xda, 0x47, 0xbd, 0x20, 0x89, 0x53, 0xc2, 0x86, 0xf7, 0xde, 0x36,
    0x6c, 0x56, 0x3f, 0x34, 0xb5, 0x07, 0xa0, 0xd0, 0xa9, 0x23, 0xed, 0xab, 0x43, 0x64, 0x31, 0xbd,
    0x1c, 0xa7, 0x4f, 0x9b, 0xbb, 0x13, 0x04, 0xfb, 0x69, 0x74, 0xa1, 0x42, 0x98, 0x56, 0x92, 0x23,
    0x14, 0x76, 0xbc, 0x0f, 0xa8, 0xe4, 0x68, 0x78, 0x04, 0x7b, 0xb3, 0xb7, 0x19, 0x02, 0xad, 0xd7,
    0x9b, 0x44, 0x18, 0xcd, 0xa7, 0xe2, 0x07, 0x24, 0x95, 0x68, 0x7e, 0x10, 0x0f, 0xf3, 0x9c, 0x47,
    0x9c, 0xe2, 0xfc, 0x66, 0x1b, 0xfb, 0x38, 0x70, 0xea, 0x7e, 0xbd, 0x18, 0xb1, 0x7e, 0xac, 0xd1,
    0x50, 0x6f, 0xca, 0x6f, 0xf9, 0xee, 0x21, 0x20, 0x79, 0xe3, 0x27, 0x79, 0xcb, 0x18, 0xb4, 0x86,
    0xb9, 0x89, 0x98, 0xeb, 0x8d, 0xa1, 0x8a, 0x9c, 0x64, 0xfb, 0x28, 0xa2, 0x08, 0x3a, 0x44, 0x7a,
};
const std::array<uint8_t, 8 * TEST_VEC_LEN> enc_poly64_vec_sums = {
    0x2c, 0xd8, 0xf4, 0x48, 0x22, 0x81, 0xea, 0xe6, 0xe8, 0xb2, 0x93, 0xe3, 0xb3, 0xe0, 0xcf, 0x27,
    0xd4, 0x23, 0xd2, 0x76, 0x15, 0x5e, 0xf4, 0xd3, 0x27, 0x97, 0xfe, 0x13, 0x80, 0x81, 0xb1, 0xde,
    0x2a, 0x3d, 0x11, 0x98, 0x7a, 0x28, 0x17, 0xf5, 0x15, 0x0e, 0x1f, 0x0d, 0x5e, 0x6b, 0xc9, 0x1c,
    0xc4, 0x10, 0x20, 0xf8, 0x24, 0xc3, 0xbb, 0x2f, 0x58, 0xc5, 0xcb, 0x39, 0xa8, 0x30, 0xa5, 0xc8,
    0x5a, 0x76, 0xd9, 0x15, 0x05, 0x9b, 0x9b, 0x26, 0xa7, 0x52, 0xcb, 0x46, 0x83, 0x7f, 0x8b, 0xd7,
    0x3b, 0x01, 0x96, 0x37, 0x1c, 0x39, 0xd2, 0xa4, 0xb7, 0x3e, 0xef, 0x2f, 0xbe, 0xe2, 0x79, 0x4f,
    0xfe, 0x67, 0x4b, 0x4b, 0xb9, 0xe3, 0x44, 0xbc, 0x07, 0x21, 0xed, 0x9f, 0xfb, 0x42, 0x90, 0x00,
    0x19, 0xb9, 0x88, 0x2c, 0x8f, 0x63, 0x81, 0x17, 0xdb, 0x57, 0x42, 0x90, 0x66, 0x64, 0x50, 0xde,
};
const std::array<uint8_t, 2 * 8 * TEST_VEC_LEN> enc_poly64_vec_unreduced_products = {
    0xc0, 0xeb, 0x0a, 0x01, 0x27, 0xc7, 0x97, 0xa7, 0x09, 0x5a, 0x4a, 0x91, 0x60, 0xf4, 0xe6, 0x20,
    0x00, 0xf1, 0xde, 0x76, 0xf7, 0xf3, 0x1d, 0xaa, 0xbe, 0x0d, 0xdc, 0xcf, 0x56, 0x69, 0x58, 0x03,
    0x20, 0xb2, 0x4d, 0x76, 0xf2, 0xfd, 0x8d, 0x45, 0xdf, 0xe9, 0xf3, 0x87, 0x8c, 0xbf, 0x4b, 0x01,
    0x3e, 0x94, 0xe8, 0x24, 0x83, 0xb5, 0xfe, 0x47, 0x2e, 0xe0, 0x55, 0x1d, 0xcd, 0xda, 0x73, 0x39,
    0x08, 0x58, 0x4e, 0x35, 0x96, 0xa6, 0xe2, 0x3b, 0xbd, 0xf4, 0x21, 0x1c, 0xff, 0x93, 0xcc, 0x05,
    0x1c, 0xc9, 0x7e, 0x96, 0x74, 0x3a, 0xa4, 0x3a, 0x37, 0x0e, 0x8d, 0xcc, 0xd8, 0xa0, 0xb6, 0x07,
    0x40, 0x16, 0x22, 0x7f, 0xcd, 0x74, 0x80, 0xf5, 0x98, 0xcc, 0x0f, 0xf9, 0xf9, 0x83, 0xd0, 0x18,
    0x70, 0xbd, 0xcf, 0xd0, 0x9c, 0xe1, 0xb6, 0xcb, 0x7f, 0x5d, 0x89, 0xc1, 0x0b, 0x50, 0xe7, 0x09,
    0xdb, 0xc9, 0xa3, 0xbc, 0xa1, 0xa4, 0x76, 0x12, 0x15, 0x74, 0xfa, 0x38, 0xb9, 0xf2, 0x59, 0x00,
    0xda, 0x38, 0x68, 0x79, 0x9d, 0x0d, 0xbf, 0xf5, 0x44, 0x11, 0xfb, 0x85, 0x62, 0x39, 0xb2, 0x27,
    0x54, 0x94, 0xde, 0x38, 0x28, 0x21, 0x81, 0xfa, 0x64, 0xe6, 0xa5, 0xce, 0x0f, 0x7f, 0xf8, 0x22,
    0x32, 0xa6, 0x65, 0x9b, 0xfa, 0x78, 0xc4, 0x3b, 0x6b, 0x3a, 0x54, 0xae, 0xb8, 0x22, 0xf6, 0x61,
    0x60, 0xdb, 0xbe, 0xd6, 0x92, 0xd3, 0x5d, 0xee, 0xfc, 0xd2, 0x7f, 0x9e, 0x16, 0xcc, 0x9f, 0x13,
    0x2e, 0xe4, 0xcb, 0x2f, 0x41, 0xb1, 0x8f, 0x72, 0xb6, 0x4d, 0x1d, 0x3e, 0x82, 0x54, 0x5f, 0x40,
    0xa0, 0x5b, 0x69, 0x52, 0x76, 0x21, 0xd8, 0xc8, 0xef, 0x01, 0x1f, 0x5c, 0xbd, 0xb3, 0x01, 0x4b,
    0xdc, 0x63, 0xf0, 0x1a, 0x9a, 0xa7, 0xf9, 0x65, 0xf3, 0xb3, 0x25, 0xc5, 0x17, 0xdc, 0x85, 0x33,
};
const std::array<uint8_t, 8 * TEST_VEC_LEN> enc_poly64_vec_products = {
    0x2e, 0x75, 0x23, 0x2c, 0x8b, 0x3e, 0xe4, 0xcf, 0xd2, 0x51, 0x9a, 0xa5, 0xd6, 0x97, 0xb0, 0x80,
    0x49, 0x5b, 0xf8, 0xbe, 0xcb, 0x39, 0xb7, 0x58, 0xea, 0xb7, 0xe7, 0x3c, 0x6d, 0xa0, 0xc9, 0x50,
    0xf7, 0xab, 0x3c, 0x32, 0x9e, 0xb2, 0x1a, 0x47, 0x8d, 0x49, 0x51, 0x6f, 0x57, 0xd0, 0xa0, 0x74,
    0xb3, 0xee, 0xb0, 0x2c, 0x97, 0xd0, 0x7d, 0x97, 0xf9, 0x66, 0x8b, 0x86, 0x62, 0x91, 0xd0, 0x00,
    0x1c, 0xb4, 0xd9, 0xbd, 0x30, 0x0d, 0xcc, 0x15, 0x5b, 0x95, 0x0c, 0x87, 0x06, 0x1b, 0xdb, 0xdb,
    0xb5, 0xeb, 0x41, 0xf4, 0xba, 0xa8, 0xcd, 0xa5, 0x10, 0x9d, 0x7b, 0xfe, 0x7c, 0x21, 0x0d, 0x89,
    0x5f, 0x14, 0x3d, 0x60, 0x74, 0x26, 0xff, 0x7f, 0x7e, 0x84, 0xd2, 0x7c, 0xf5, 0xa0, 0x61, 0xb5,
    0x43, 0x48, 0x40, 0x97, 0x8e, 0x53, 0xcc, 0xfd, 0x57, 0x17, 0xe8, 0x2e, 0x60, 0xe2, 0x04, 0x95,
};

const std::array<uint8_t, 16 * TEST_VEC_LEN> enc_poly128_vec_xs = {
    0x7c, 0x5f, 0x30, 0xf4, 0xb7, 0xe9, 0xd3, 0xde, 0x16, 0x90, 0x11, 0xbc, 0x1e, 0x35, 0xd6, 0xde,
    0xf5, 0xab, 0x75, 0xd2, 0x96, 0x23, 0x07, 0xfc, 0x53, 0xaf, 0xef, 0x14, 0x7d, 0x7c, 0x8f, 0xcc,
    0xff, 0xc4, 0x29, 0x00, 0xfb, 0x94, 0x24, 0x80, 0x7f, 0x8b, 0x52, 0x9f, 0xf3, 0x3c, 0xf5, 0xd9,
    0x5f, 0xca, 0x80, 0x4f, 0x18, 0xd5, 0x1c, 0x38, 0xa5, 0x08, 0x4b, 0x30, 0xfc, 0x10, 0xb3, 0x73,
    0x4d, 0x28, 0xdd, 0x65, 0xb4, 0x2f, 0x82, 0x45, 0x55, 0xc1, 0x00, 0x1d, 0x5c, 0xed, 0xef, 0xf7,
    0x85, 0xe6, 0x01, 0xb2, 0x8f, 0xc4, 0x0a, 0x40, 0x14, 0xd1, 0xf6, 0xdd, 0xb2, 0x46, 0x44, 0x95,
    0x42, 0xf3, 0x06, 0x4d, 0x96, 0x89, 0xfd, 0x53, 0xf6, 0x33, 0xda, 0x8c, 0x28, 0xd6, 0x81, 0xd1,
    0x89, 0x4f, 0x92, 0x8f, 0xfe, 0x82, 0xa8, 0x83, 0xc9, 0xb7, 0xa8, 0xd3, 0x91, 0x52, 0x72, 0x8d,
    0xf4, 0x9d, 0xff, 0xbc, 0x34, 0x34, 0x06, 0x80, 0x2e, 0x49, 0x47, 0x51, 0xa0, 0xb8, 0xd8, 0x8f,
    0x77, 0x15, 0xc8, 0x78, 0x2b, 0xe8, 0xc2, 0xfc, 0xc7, 0xb3, 0x88, 0x04, 0xf1, 0x6b, 0xe5, 0xdf,
    0xee, 0xae, 0x28, 0xe0, 0x26, 0xc9, 0x0a, 0x02, 0x18, 0x48, 0xc2, 0x1c, 0x90, 0x5b, 0xdc, 0x2f,
    0x72, 0xda, 0xbd, 0x03, 0x2b, 0xd4, 0x61, 0x9e, 0x62, 0x88, 0x19, 0xba, 0xe5, 0x9f, 0x76, 0xa0,
    0x2f, 0xda, 0x18, 0x12, 0xf8, 0x43, 0x82, 0xd7, 0x41, 0xf6, 0xfa, 0x44, 0x40, 0x3a, 0x3d, 0xc1,
    0x70, 0x69, 0xf9, 0x93, 0x8e, 0xbf, 0xaa, 0xc3, 0xcb, 0xd6, 0x2d, 0x7b, 0x23, 0x54, 0x42, 0xe5,
    0xda, 0xe0, 0x74, 0x50, 0xe5, 0xd8, 0x55, 0x2d, 0xba, 0x9b, 0x94, 0x50, 0x5a, 0x4b, 0xef, 0x23,
    0xdc, 0x04, 0x77, 0x3a, 0x19, 0x46, 0xee, 0xa4, 0x26, 0x58, 0x08, 0x16, 0x07, 0xda, 0x82, 0x79,
};
const std::array<uint8_t, 16 * TEST_VEC_LEN> enc_poly128_vec_ys = {
    0x30, 0x1e, 0x68, 0xaf, 0x22, 0xf3, 0x16, 0x25, 0xe2, 0x2a, 0x96, 0xee, 0x72, 0x70, 0xd1, 0x02,
    0x91, 0x8b, 0x5e, 0x0a, 0x5b, 0x7e, 0xa6, 0xb6, 0x51, 0x05, 0xed, 0xed, 0x81, 0xc0, 0x3e, 0x65,
    0x25, 0x95, 0x29, 0x0e, 0x4f, 0xc1, 0x8a, 0x2d, 0x98, 0x59, 0x38, 0xb5, 0x8b, 0x41, 0xf5, 0xd2,
    0x68, 0x05, 0x2c, 0xcd, 0x5a, 0x17, 0x02, 0x68, 0x5e, 0x28, 0xab, 0xc8, 0x87, 0x78, 0x50, 0xbe,
    0xf2, 0xec, 0xfe, 0xc7, 0x51, 0x06, 0x56, 0x40, 0x98, 0x01, 0x8b, 0xf2, 0xb9, 0xb5, 0x69, 0x4c,
    0xae, 0x31, 0xc9, 0x8d, 0x49, 0x7f, 0x5f, 0x90, 0xd0, 0xb8, 0x2e, 0x6e, 0x52, 0x7c, 0x92, 0x02,
    0x26, 0x0a, 0x3c, 0xe3, 0xe4, 0xe5, 0x31, 0xda, 0x2d, 0x6b, 0x3d, 0x2b, 0x1a, 0xb4, 0xf1, 0xc9,
    0xe0, 0x74, 0x43, 0x9a, 0xed, 0x88, 0x24, 0x6d, 0xd9, 0x0e, 0xf4, 0xbb, 0xee, 0x75, 0x62, 0x34,
    0xc0, 0x95, 0x0f, 0x3a, 0x02, 0x1e, 0xa7, 0xcf, 0x03, 0x00, 0xef, 0x99, 0xa7, 0xed, 0x72, 0x50,
    0x22, 0x51, 0x92, 0x21, 0xbc, 0x12, 0x73, 0x28, 0x73, 0xe5, 0x6a, 0x60, 0xf4, 0xde, 0x4d, 0xa6,
    0x28, 0x38, 0xbf, 0x5c, 0xda, 0x11, 0x24, 0x83, 0x28, 0x4d, 0x70, 0x59, 0xe5, 0x96, 0x9e, 0x58,
    0x23, 0xde, 0x15, 0x91, 0xd3, 0xd8, 0xc3, 0x83, 0xc6, 0x9d, 0x49, 0xdb, 0x5f, 0xfe, 0x3d, 0x97,
    0x62, 0xb5, 0x9b, 0x8c, 0x78, 0xde, 0xa3, 0xf9, 0x97, 0xf8, 0xdf, 0x52, 0xf1, 0x54, 0xe9, 0x44,
    0xbe, 0xe4, 0x1b, 0xad, 0x8f, 0x5b, 0x77, 0x9b, 0x34, 0xa8, 0x41, 0xcb, 0x72, 0x97, 0x58, 0x25,
    0x94, 0xed, 0x2d, 0x63, 0xaa, 0xdf, 0x55, 0x32, 0x72, 0xbb, 0xd4, 0x08, 0x33, 0xba, 0xd5, 0x5f,
    0x38, 0xb0, 0x25, 0xf5, 0xc2, 0x53, 0xb3, 0xb8, 0xe9, 0xbb, 0xf3, 0xe4, 0xb3, 0x9f, 0xa7, 0xd0,
};
const std::array<uint8_t, 16 * TEST_VEC_LEN> enc_poly128_vec_sums = {
    0x4c, 0x41, 0x58, 0x5b, 0x95, 0x1a, 0xc5, 0xfb, 0xf4, 0xba, 0x87, 0x52, 0x6c, 0x45, 0x07, 0xdc,
    0x64, 0x20, 0x2b, 0xd8, 0xcd, 0x5d, 0xa1, 0x4a, 0x02, 0xaa, 0x02, 0xf9, 0xfc, 0xbc, 0xb1, 0xa9,
    0xda, 0x51, 0x00, 0x0e, 0xb4, 0x55, 0xae, 0xad, 0xe7, 0xd2, 0x6a, 0x2a, 0x78, 0x7d, 0x00, 0x0b,
    0x37, 0xcf, 0xac, 0x82, 0x42, 0xc2, 0x1e, 0x50, 0xfb, 0x20, 0xe0, 0xf8, 0x7b, 0x68, 0xe3, 0xcd,
    0xbf, 0xc4, 0x23, 0xa2, 0xe5, 0x29, 0xd4, 0x05, 0xcd, 0xc0, 0x8b, 0xef, 0xe5, 0x58, 0x86, 0xbb,
    0x2b, 0xd7, 0xc8, 0x3f, 0xc6, 0xbb, 0x55, 0xd0, 0xc4, 0x69, 0xd8, 0xb3, 0xe0, 0x3a, 0xd6, 0x97,
    0x64, 0xf9, 0x3a, 0xae, 0x72, 0x6c, 0xcc, 0x89, 0xdb, 0x58, 0xe7, 0xa7, 0x32, 0x62, 0x70, 0x18,
    0x69, 0x3b, 0xd1, 0x15, 0x13, 0x0a, 0x8c, 0xee, 0x10, 0xb9, 0x5c, 0x68, 0x7f, 0x27, 0x10, 0xb9,
    0x34, 0x08, 0xf0, 0x86, 0x36, 0x2a, 0xa1, 0x4f, 0x2d, 0x49, 0xa8, 0xc8, 0x07, 0x55, 0xaa, 0xdf,
    0x55, 0x44, 0x5a, 0x59, 0x97, 0xfa, 0xb1, 0xd4, 0xb4, 0x56, 0xe2, 0x64, 0x05, 0xb5, 0xa8, 0x79,
    0xc6, 0x96, 0x97, 0xbc, 0xfc, 0xd8, 0x2e, 0x81, 0x30, 0x05, 0xb2, 0x45, 0x75, 0xcd, 0x42, 0x77,
    0x51, 0x04, 0xa8, 0x92, 0xf8, 0x0c, 0xa2, 0x1d, 0xa4, 0x15, 0x50, 0x61, 0xba, 0x61, 0x4b, 0x37,
    0x4d, 0x6f, 0x83, 0x9e, 0x80, 0x9d, 0x21, 0x2e, 0xd6, 0x0e, 0x25, 0x16, 0xb1, 0x6e, 0xd4, 0x85,
    0xce, 0x8d, 0xe2, 0x3e, 0x01, 0xe4, 0xdd, 0x58, 0xff, 0x7e, 0x6c, 0xb0, 0x51, 0xc3, 0x1a, 0xc0,
    0x4e, 0x0d, 0x59, 0x33, 0x4f, 0x07, 0x00, 0x1f, 0xc8, 0x20, 0x40, 0x58, 0x69, 0xf1, 0x3a, 0x7c,
    0xe4, 0xb4, 0x52, 0xcf, 0xdb, 0x15, 0x5d, 0x1c, 0xcf, 0xe3, 0xfb, 0xf2, 0xb4, 0x45, 0x25, 0xa9,
};
const std::array<uint8_t, 2 * 16 * TEST_VEC_LEN> enc_poly128_vec_unreduced_products = {
    0x40, 0x30, 0xa1, 0x3c, 0x8b, 0x54, 0x94, 0xe4, 0x02, 0x89, 0xea, 0x01, 0x3a, 0x45, 0xb9, 0xf5,
    0xbd, 0x52, 0xbd, 0xed, 0x83, 0x6a, 0x8c, 0x4c, 0x4e, 0x56, 0x19, 0xc1, 0xea, 0x60, 0xe8, 0x01,
    0x25, 0xd9, 0x25, 0x8e, 0x42, 0xf0, 0xff, 0x74, 0x9a, 0x49, 0x6d, 0xbf, 0x49, 0xd0, 0x03, 0x91,
    0xe2, 0x5b, 0xb9, 0xa4, 0x1c, 0xbb, 0x20, 0x6d, 0xc2, 0xe7, 0x42, 0x6f, 0x5f, 0x41, 0x5d, 0x29,
    0xe3, 0x3b, 0xb6, 0x73, 0x46, 0x38, 0x73, 0x24, 0x51, 0x0b, 0x5d, 0x59, 0x2c, 0x34, 0x7c, 0xad,
    0x4b, 0x2a, 0x07, 0x4a, 0x17, 0xc6, 0x28, 0xc1, 0x62, 0x3d, 0x34, 0xb1, 0x38, 0xc6, 0xe4, 0x56,
    0xd8, 0xad, 0xaa, 0x44, 0xca, 0xcd, 0x1a, 0x42, 0x02, 0x13, 0x81, 0x92, 0x3c, 0x49, 0x06, 0x0d,
    0x30, 0x45, 0x59, 0x09, 0x39, 0x60, 0xd0, 0x69, 0x2a, 0x7a, 0x61, 0x2e, 0x7a, 0x28, 0x3b, 0x32,
    0x2a, 0xd4, 0xba, 0x7a, 0xad, 0x61, 0x2c, 0x25, 0x5b, 0x1d, 0x5f, 0x3a, 0xe6, 0x8e, 0x4f, 0x5a,
    0xd0, 0xe3, 0x25, 0xda, 0x8f, 0x20, 0xae, 0x8c, 0x7d, 0x96, 0x14, 0x23, 0x2f, 0x1c, 0xbf, 0x39,
    0x16, 0x84, 0xf7, 0x57, 0xc2, 0xc3, 0x2a, 0x84, 0xaf, 0xad, 0x57, 0x3a, 0xae, 0x92, 0x91, 0x30,
    0xc9, 0xd9, 0xd8, 0x7c, 0xab, 0x31, 0xbb, 0xef, 0x48, 0xae, 0x47, 0x2b, 0x1d, 0x6c, 0x68, 0x01,
    0xcc, 0xd7, 0xcc, 0x39, 0x17, 0xfb, 0x15, 0x4c, 0x18, 0x77, 0xdc, 0x69, 0xff, 0x2f, 0xb6, 0x4c,
    0xee, 0xdb, 0x75, 0x0c, 0x24, 0x8c, 0x13, 0xa1, 0x85, 0xb1, 0x42, 0x07, 0x65, 0x34, 0xb6, 0x5a,
    0xe0, 0x03, 0xf3, 0x10, 0x1b, 0x2c, 0x4e, 0x22, 0x5e, 0xcd, 0xb8, 0xd7, 0xd2, 0xe9, 0xe3, 0x53,
    0xd4, 0x27, 0xd4, 0x62, 0xa6, 0xe6, 0xf5, 0x1f, 0x23, 0xab, 0xa1, 0x26, 0xe5, 0x76, 0x7f, 0x1b,
    0x00, 0xe3, 0x8a, 0xc0, 0xd1, 0xdf, 0x01, 0xdc, 0xe1, 0x9e, 0xce, 0x04, 0x2a, 0x48, 0x47, 0x95,
    0xa7, 0xcc, 0x37, 0xd9, 0x51, 0xfb, 0x4e, 0x1a, 0x12, 0xe9, 0x3f, 0x3f, 0xdb, 0x39, 0x30, 0x2b,
    0x0e, 0x43, 0x93, 0xf5, 0x2b, 0x66, 0xd9, 0x32, 0xbf, 0xfd, 0x5e, 0xa4, 0x82, 0x6a, 0x4a, 0xd5,
    0xda, 0xd2, 0x5f, 0x35, 0x1d, 0xd4, 0x92, 0x78, 0x35, 0x89, 0x01, 0x74, 0x78, 0xb0, 0xfc, 0x76,
    0xb0, 0xfa, 0xce, 0x0d, 0xee, 0x1a, 0xa6, 0xb0, 0x49, 0x66, 0x12, 0x8f, 0x85, 0xeb, 0xac, 0xfd,
    0x19, 0xcb, 0x31, 0xba, 0x3b, 0x35, 0x56, 0xe4, 0xfa, 0xb7, 0x17, 0xa9, 0xa8, 0xa9, 0x60, 0x08,
    0xd6, 0x3c, 0xeb, 0x11, 0xe6, 0x4d, 0x0a, 0x81, 0x49, 0x7d, 0xfe, 0x61, 0x13, 0xf7, 0x6d, 0x2d,
    0x8c, 0xca, 0x99, 0x08, 0x45, 0x83, 0xdd, 0x96, 0x3a, 0x35, 0x5b, 0xfc, 0xb8, 0x2c, 0x44, 0x59,
    0x7e, 0x79, 0x27, 0x2f, 0xcb, 0x40, 0xfc, 0x45, 0xf3, 0x75, 0x84, 0xcd, 0x3d, 0x7b, 0xab, 0xde,
    0xed, 0x26, 0xe3, 0x6f, 0x11, 0x7b, 0x9e, 0x52, 0x79, 0xb2, 0x95, 0x70, 0xc5, 0xbb, 0x05, 0x33,
    0xa0, 0xfd, 0xac, 0x3a, 0x84, 0x11, 0x16, 0xe3, 0x63, 0x7c, 0xc0, 0x54, 0xa9, 0x7c, 0x78, 0x65,
    0x08, 0x4d, 0xbf, 0xd8, 0x17, 0x8b, 0xb5, 0xc9, 0xb6, 0x33, 0x4c, 0xc1, 0x47, 0x51, 0xe8, 0x1f,
    0xc8, 0x41, 0xea, 0x78, 0x67, 0x71, 0x1c, 0x02, 0x82, 0x96, 0xe1, 0x24, 0xc9, 0x4e, 0x9c, 0xc0,
    0x0e, 0x7b, 0xa4, 0x3b, 0xdb, 0xff, 0xc6, 0x68, 0x7e, 0x23, 0xa6, 0xf6, 0xf2, 0x58, 0x2a, 0x0b,
    0xa0, 0xb0, 0xbc, 0x48, 0xc4, 0xaa, 0xc8, 0x93, 0xfa, 0x2a, 0x02, 0xf0, 0xd1, 0x07, 0xa5, 0x19,
    0x60, 0xc2, 0xe0, 0x3a, 0xfd, 0x58, 0x04, 0x66, 0xa0, 0x7d, 0x2e, 0x6f, 0x55, 0x52, 0x0b, 0x25,
};
const std::array<uint8_t, 16 * TEST_VEC_LEN> enc_poly128_vec_products = {
    0xf3, 0xd3, 0x3a, 0x62, 0xf6, 0x00, 0x04, 0x45, 0xcf, 0x0d, 0x0f, 0xca, 0xce, 0x12, 0x10, 0x04,
    0xe7, 0xa1, 0xa6, 0xad, 0x47, 0x5f, 0x41, 0xe7, 0xe3, 0x1f, 0xd2, 0x12, 0x62, 0xb9, 0x31, 0xe1,
    0x44, 0xdc, 0x36, 0x86, 0x87, 0x61, 0xca, 0xf7, 0x1d, 0x08, 0xcf, 0xd4, 0xdf, 0x7a, 0xa1, 0x7f,
    0x87, 0xe2, 0x86, 0xd6, 0xe1, 0xf1, 0x1b, 0xb7, 0xe1, 0x60, 0x1a, 0x69, 0x4d, 0xad, 0x33, 0x8e,
    0x4e, 0x99, 0xb2, 0x6e, 0xef, 0xc5, 0x76, 0xd5, 0xed, 0xc0, 0x7b, 0x59, 0xba, 0xcd, 0xfc, 0x29,
    0xe9, 0x6d, 0x91, 0x4d, 0x2c, 0x82, 0x93, 0xd7, 0x22, 0xc2, 0x56, 0x49, 0x68, 0x98, 0xbe, 0x82,
    0x82, 0x35, 0x68, 0x26, 0xed, 0x4d, 0xa9, 0xa2, 0x50, 0xa1, 0x49, 0xdc, 0x47, 0x90, 0xae, 0x92,
    0x6f, 0x18, 0xcc, 0x56, 0x59, 0xce, 0x74, 0x87, 0x38, 0x0d, 0x09, 0x76, 0xfa, 0xdb, 0x24, 0xac,
    0x1e, 0xdd, 0xeb, 0x54, 0x88, 0x97, 0x94, 0xbc, 0x92, 0x88, 0x85, 0x26, 0xb4, 0x08, 0xcb, 0xdc,
    0xae, 0x0f, 0xe5, 0xd0, 0xe2, 0x44, 0x4f, 0x10, 0x89, 0xd8, 0x9e, 0xe8, 0xd1, 0x47, 0xe5, 0xeb,
    0x63, 0x05, 0xbe, 0x33, 0x91, 0x0c, 0x1e, 0x26, 0xdf, 0x9c, 0xaf, 0x5b, 0x8a, 0x63, 0xdb, 0xf4,
    0x31, 0x19, 0xc3, 0x66, 0xb9, 0x67, 0xdb, 0x0f, 0xa7, 0x6b, 0xe5, 0xb9, 0x47, 0x6c, 0xa7, 0x01,
    0xb2, 0xf3, 0x1d, 0xd1, 0x0a, 0xa9, 0x1a, 0xb7, 0x34, 0x56, 0xb5, 0xd4, 0xdf, 0xba, 0x6e, 0xc5,
    0x35, 0x9d, 0x36, 0x6e, 0x0f, 0x2b, 0xdb, 0x45, 0x07, 0x3d, 0x3d, 0xb4, 0x9e, 0x69, 0xc9, 0xce,
    0x79, 0xa5, 0xaa, 0x08, 0xfb, 0x63, 0x33, 0x7b, 0xcd, 0xc1, 0x82, 0xb6, 0x6e, 0xbd, 0x67, 0x64,
    0xfe, 0xc6, 0x7f, 0x9c, 0xaa, 0x5e, 0xf9, 0xa3, 0xa8, 0x8a, 0xf7, 0x6a, 0xcc, 0x92, 0x3c, 0x67,
};

const std::array<uint8_t, 24 * TEST_VEC_LEN> enc_poly192_vec_xs = {
    0xbb, 0x0b, 0xc7, 0xc5, 0x05, 0xd6, 0x28, 0x12, 0x8b, 0xcb, 0x15, 0x3f, 0x9f, 0xd5, 0x79, 0xd6,
    0xf7, 0x49, 0xd3, 0x92, 0x4a, 0xae, 0xd0, 0x41, 0xa6, 0xe8, 0x0c, 0x2e, 0xa2, 0x12, 0x46, 0xf4,
    0x50, 0xe7, 0xd5, 0xb3, 0x05, 0xe1, 0xb6, 0xb2, 0x22, 0x67, 0xb2, 0x0d, 0x6d, 0x14, 0x79, 0x06,
    0x5d, 0x19, 0x75, 0xd9, 0x70, 0x7e, 0xc7, 0x32, 0x8d, 0xce, 0x4f, 0x2f, 0x01, 0x45, 0x39, 0xbf,
    0x78, 0xb4, 0xac, 0xc1, 0x4a, 0xd5, 0xbf, 0xe4, 0x55, 0x5d, 0xcf, 0x90, 0xa3, 0x00, 0x68, 0x59,
    0xe2, 0x54, 0x63, 0x19, 0xac, 0xb5, 0x79, 0x51, 0xa0, 0x6b, 0xae, 0xfc, 0xcb, 0x27, 0x11, 0xf7,
    0x50, 0x63, 0x9a, 0xc8, 0x9e, 0xf3, 0x81, 0x9a, 0x8e, 0x23, 0x2f, 0xd4, 0xc7, 0x7d, 0xa8, 0xcb,
    0x9a, 0x67, 0xe9, 0x58, 0xed, 0xba, 0x7e, 0xe3, 0x42, 0xf6, 0xfb, 0x73, 0x18, 0xc5, 0x29, 0xc5,
    0x10, 0x82, 0xa4, 0xb8, 0x73, 0x25, 0xb4, 0x14, 0xce, 0xc1, 0x1b, 0x95, 0xc6, 0x17, 0xaf, 0x22,
    0x76, 0x5a, 0x78, 0x99, 0x74, 0x2c, 0x3a, 0x35, 0xf0, 0x3d, 0xf6, 0xcc, 0x2d, 0x1b, 0x6e, 0x8c,
    0x1f, 0x71, 0xa1, 0xc8, 0x19, 0xd3, 0xc9, 0x8c, 0x44, 0x80, 0x52, 0x65, 0x2d, 0x96, 0xd5, 0x6a,
    0x5f, 0xaa, 0x44, 0x4c, 0x51, 0xf7, 0x4c, 0x31, 0x8b, 0xea, 0xc6, 0x7a, 0xd3, 0xb8, 0x84, 0x71,
    0xdc, 0x68, 0x78, 0x9f, 0x93, 0xf6, 0xfb, 0x5f, 0x97, 0xb9, 0x2a, 0x73, 0xa0, 0x96, 0xe7, 0x9f,
    0xf9, 0xfa, 0xe7, 0x6f, 0xb2, 0xe0, 0x4f, 0x32, 0x29, 0xee, 0x4b, 0xca, 0xfa, 0x9c, 0xd1, 0x1c,
    0x18, 0xa6, 0x89, 0x08, 0x41, 0x75, 0x22, 0x5b, 0xbb, 0xca, 0x72, 0x38, 0xd5, 0xaa, 0x41, 0x12,
    0xda, 0x5a, 0x39, 0x97, 0xfd, 0x05, 0x04, 0x22, 0x6d, 0x6a, 0xd5, 0x8e, 0xc5, 0x71, 0xfb, 0x92,
    0x2f, 0x05, 0x62, 0xcc, 0xa9, 0x8a, 0xde, 0xc7, 0x59, 0xcd, 0x05, 0x6d, 0x9e, 0xbd, 0x11, 0x36,
    0x29, 0x8d, 0x4a, 0x8d, 0xbf, 0x71, 0x9d, 0x58, 0x06, 0xa1, 0xc6, 0x59, 0xb8, 0x2e, 0x91, 0xdd,
    0xae, 0xe6, 0x5d, 0x35, 0x0b, 0x54, 0xae, 0x26, 0xc2, 0x3c, 0xd8, 0xb1, 0x68, 0x58, 0xd6, 0x27,
    0x5f, 0x95, 0xaa, 0xa8, 0xe5, 0xa1, 0x8d, 0x5a, 0x57, 0x00, 0xcd, 0x15, 0x78, 0x92, 0xc9, 0x8b,
    0xbb, 0xc1, 0x8e, 0x6d, 0x2e, 0xa3, 0x50, 0x6d, 0xb0, 0xc4, 0x53, 0x32, 0x9f, 0x5e, 0x64, 0x88,
    0x41, 0x9a, 0x1a, 0x21, 0x46, 0x65, 0xfc, 0x86, 0xf1, 0x74, 0x5a, 0xbc, 0x17, 0xdb, 0xff, 0x6c,
    0x83, 0xea, 0x50, 0x33, 0xf2, 0x56, 0x15, 0x82, 0x22, 0x54, 0xf6, 0xbc, 0x82, 0xf4, 0x01, 0x4c,
    0x26, 0x9f, 0x07, 0x91, 0xeb, 0xef, 0x08, 0x22, 0x83, 0x5b, 0x2e, 0xb0, 0x2c, 0xee, 0x28, 0x62,
};
const std::array<uint8_t, 24 * TEST_VEC_LEN> enc_poly192_vec_ys = {
    0xbf, 0xd7, 0x18, 0x71, 0xef, 0x12, 0xd8, 0x86, 0xde, 0xa6, 0x04, 0xee, 0x05, 0xd0, 0x94, 0xe1,
    0x32, 0x0f, 0x3a, 0x72, 0xe1, 0xac, 0xad, 0x5b, 0x05, 0x2b, 0xd0, 0xfb, 0x66, 0x4f, 0x85, 0x66,
    0xaf, 0x2e, 0x35, 0x45, 0x66, 0x7b, 0xa0, 0x71, 0x36, 0x14, 0x70, 0xad, 0x24, 0xa3, 0xa9, 0xf8,
    0xb5, 0xfd, 0xa7, 0xd7, 0x26, 0x5e, 0x54, 0xdd, 0x1a, 0xd6, 0x39, 0xed, 0x0c, 0x77, 0x53, 0xa5,
    0xe7, 0xb9, 0x92, 0x00, 0xc1, 0x90, 0xf5, 0x13, 0xe2, 0xaa, 0xea, 0x08, 0x31, 0x90, 0x63, 0x7f,
    0xd9, 0xfd, 0xf8, 0x99, 0x39, 0x82, 0x6e, 0x28, 0x6d, 0x32, 0x8a, 0x68, 0x86, 0x64, 0xf6, 0x9e,
    0x3f, 0xaf, 0xf5, 0x11, 0xd7, 0x22, 0x08, 0x2d, 0x76, 0x8a, 0xdd, 0x70, 0xe5, 0x4e, 0x5a, 0x34,
    0xd1, 0xc5, 0xc4, 0x9b, 0xa1, 0xb0, 0x8d, 0x77, 0xac, 0xff, 0x6c, 0x7a, 0xde, 0xf4, 0x21, 0xcc,
    0xe7, 0x50, 0x2b, 0x3f, 0xb1, 0xe9, 0xb5, 0x67, 0xa9, 0x2a, 0x39, 0xdb, 0xb3, 0x7e, 0x5c, 0x9a,
    0x4d, 0xa6, 0x24, 0xcd, 0xaa, 0xd0, 0xe5, 0x8b, 0x8b, 0xe9, 0x52, 0x34, 0x2a, 0xd4, 0xee, 0x18,
    0xcb, 0x4e, 0xad, 0xa5, 0xa4, 0x41, 0xb1, 0xb6, 0xc0, 0x78, 0x3c, 0xba, 0x3c, 0xae, 0x95, 0x3a,
    0xdb, 0x59, 0x80, 0x7e, 0xdb, 0xe3, 0x5f, 0xa9, 0x54, 0x31, 0x5d, 0x82, 0xc2, 0x13, 0x25, 0x0a,
    0x8c, 0x86, 0x66, 0x67, 0xf1, 0xce, 0x68, 0x20, 0x84, 0x53, 0x40, 0x41, 0xeb, 0xdc, 0xa1, 0xe0,
    0x4e, 0xd5, 0x5c, 0x83, 0x7d, 0x55, 0x2e, 0x02, 0x6c, 0x6e, 0xee, 0x33, 0x47, 0xa2, 0x31, 0x84,
    0xb1, 0x2a, 0x97, 0x6c, 0x15, 0x94, 0xb2, 0xba, 0x8d, 0x7c, 0x2f, 0xec, 0x92, 0x4e, 0x29, 0xc6,
    0x78, 0xaa, 0xf9, 0xa9, 0x6f, 0x39, 0x11, 0x3c, 0xae, 0xf0, 0x37, 0x5e, 0x72, 0xef, 0x43, 0x80,
    0xfd, 0xe8, 0xc6, 0xb6, 0xa7, 0xa0, 0xfd, 0x04, 0x94, 0x9f, 0xb2, 0x2d, 0x76, 0x05, 0x48, 0x49,
    0xab, 0x86, 0xfe, 0x33, 0x77, 0x47, 0x4d, 0x2c, 0x2c, 0xc3, 0xb6, 0xe3, 0x59, 0x35, 0xf1, 0x46,
    0x1c, 0x13, 0x0f, 0x3e, 0x92, 0x25, 0x32, 0x5b, 0x54, 0x57, 0xc0, 0x3b, 0x5b, 0x5c, 0x24, 0x29,
    0xda, 0x72, 0x62, 0x89, 0x66, 0x55, 0x86, 0xbb, 0x81, 0x79, 0xea, 0x24, 0xb5, 0xd6, 0x15, 0xb2,
    0x57, 0xca, 0x90, 0x5b, 0xd7, 0x0d, 0xab, 0xd7, 0x35, 0x2e, 0xc7, 0xdd, 0xfd, 0xa3, 0x3c, 0xbd,
    0xbb, 0x20, 0xe0, 0xf3, 0x2d, 0xf2, 0x59, 0x85, 0x91, 0x02, 0x80, 0x0e, 0xd4, 0x63, 0xae, 0xde,
    0x9f, 0x91, 0x45, 0x7f, 0x5a, 0x86, 0x26, 0x1e, 0x56, 0xf3, 0xf8, 0x5a, 0xde, 0x84, 0x72, 0xd1,
    0x40, 0x75, 0xb8, 0x42, 0x98, 0xac, 0x95, 0xb8, 0x62, 0x94, 0x3e, 0xce, 0xdc, 0x91, 0x3a, 0x6d,
};
const std::array<uint8_t, 24 * TEST_VEC_LEN> enc_poly192_vec_sums = {
    0x04, 0xdc, 0xdf, 0xb4, 0xea, 0xc4, 0xf0, 0x94, 0x55, 0x6d, 0x11, 0xd1, 0x9a, 0x05, 0xed, 0x37,
    0xc5, 0x46, 0xe9, 0xe0, 0xab, 0x02, 0x7d, 0x1a, 0xa3, 0xc3, 0xdc, 0xd5, 0xc4, 0x5d, 0xc3, 0x92,
    0xff, 0xc9, 0xe0, 0xf6, 0x63, 0x9a, 0x16, 0xc3, 0x14, 0x73, 0xc2, 0xa0, 0x49, 0xb7, 0xd0, 0xfe,
    0xe8, 0xe4, 0xd2, 0x0e, 0x56, 0x20, 0x93, 0xef, 0x97, 0x18, 0x76, 0xc2, 0x0d, 0x32, 0x6a, 0x1a,
    0x9f, 0x0d, 0x3e, 0xc1, 0x8b, 0x45, 0x4a, 0xf7, 0xb7, 0xf7, 0x25, 0x98, 0x92, 0x90, 0x0b, 0x26,
    0x3b, 0xa9, 0x9b, 0x80, 0x95, 0x37, 0x17, 0x79, 0xcd, 0x59, 0x24, 0x94, 0x4d, 0x43, 0xe7, 0x69,
    0x6f, 0xcc, 0x6f, 0xd9, 0x49, 0xd1, 0x89, 0xb7, 0xf8, 0xa9, 0xf2, 0xa4, 0x22, 0x33, 0xf2, 0xff,
    0x4b, 0xa2, 0x2d, 0xc3, 0x4c, 0x0a, 0xf3, 0x94, 0xee, 0x09, 0x97, 0x09, 0xc6, 0x31, 0x08, 0x09,
    0xf7, 0xd2, 0x8f, 0x87, 0xc2, 0xcc, 0x01, 0x73, 0x67, 0xeb, 0x22, 0x4e, 0x75, 0x69, 0xf3, 0xb8,
    0x3b, 0xfc, 0x5c, 0x54, 0xde, 0xfc, 0xdf, 0xbe, 0x7b, 0xd4, 0xa4, 0xf8, 0x07, 0xcf, 0x80, 0x94,
    0xd4, 0x3f, 0x0c, 0x6d, 0xbd, 0x92, 0x78, 0x3a, 0x84, 0xf8, 0x6e, 0xdf, 0x11, 0x38, 0x40, 0x50,
    0x84, 0xf3, 0xc4, 0x32, 0x8a, 0x14, 0x13, 0x98, 0xdf, 0xdb, 0x9b, 0xf8, 0x11, 0xab, 0xa1, 0x7b,
    0x50, 0xee, 0x1e, 0xf8, 0x62, 0x38, 0x93, 0x7f, 0x13, 0xea, 0x6a, 0x32, 0x4b, 0x4a, 0x46, 0x7f,
    0xb7, 0x2f, 0xbb, 0xec, 0xcf, 0xb5, 0x61, 0x30, 0x45, 0x80, 0xa5, 0xf9, 0xbd, 0x3e, 0xe0, 0x98,
    0xa9, 0x8c, 0x1e, 0x64, 0x54, 0xe1, 0x90, 0xe1, 0x36, 0xb6, 0x5d, 0xd4, 0x47, 0xe4, 0x68, 0xd4,
    0xa2, 0xf0, 0xc0, 0x3e, 0x92, 0x3c, 0x15, 0x1e, 0xc3, 0x9a, 0xe2, 0xd0, 0xb7, 0x9e, 0xb8, 0x12,
    0xd2, 0xed, 0xa4, 0x7a, 0x0e, 0x2a, 0x23, 0xc3, 0xcd, 0x52, 0xb7, 0x40, 0xe8, 0xb8, 0x59, 0x7f,
    0x82, 0x0b, 0xb4, 0xbe, 0xc8, 0x36, 0xd0, 0x74, 0x2a, 0x62, 0x70, 0xba, 0xe1, 0x1b, 0x60, 0x9b,
    0xb2, 0xf5, 0x52, 0x0b, 0x99, 0x71, 0x9c, 0x7d, 0x96, 0x6b, 0x18, 0x8a, 0x33, 0x04, 0xf2, 0x0e,
    0x85, 0xe7, 0xc8, 0x21, 0x83, 0xf4, 0x0b, 0xe1, 0xd6, 0x79, 0x27, 0x31, 0xcd, 0x44, 0xdc, 0x39,
    0xec, 0x0b, 0x1e, 0x36, 0xf9, 0xae, 0xfb, 0xba, 0x85, 0xea, 0x94, 0xef, 0x62, 0xfd, 0x58, 0x35,
    0xfa, 0xba, 0xfa, 0xd2, 0x6b, 0x97, 0xa5, 0x03, 0x60, 0x76, 0xda, 0xb2, 0xc3, 0xb8, 0x51, 0xb2,
    0x1c, 0x7b, 0x15, 0x4c, 0xa8, 0xd0, 0x33, 0x9c, 0x74, 0xa7, 0x0e, 0xe6, 0x5c, 0x70, 0x73, 0x9d,
    0x66, 0xea, 0xbf, 0xd3, 0x73, 0x43, 0x9d, 0x9a, 0xe1, 0xcf, 0x10, 0x7e, 0xf0, 0x7f, 0x12, 0x0f,
};
const std::array<uint8_t, 2 * 24 * TEST_VEC_LEN> enc_poly192_vec_unreduced_products = {
    0xa9, 0xaf, 0xab, 0x5f, 0x1e, 0xed, 0xcc, 0xb9, 0xdf, 0xb1, 0x54, 0x85, 0x4c, 0x10, 0x9f, 0x80,
    0x26, 0x07, 0x04, 0xb0, 0x40, 0xda, 0x41, 0x37, 0xe4, 0xed, 0xe6, 0x0e, 0xd1, 0xfa, 0x2e, 0x88,
    0x9c, 0xb2, 0x83, 0xe3, 0x03, 0xa0, 0x4f, 0x26, 0xba, 0xfc, 0xd7, 0x71, 0x40, 0x64, 0x8e, 0x16,
    0x3e, 0x50, 0xb7, 0x73, 0x65, 0x6c, 0xf4, 0x92, 0x50, 0x77, 0x6e, 0x32, 0x9f, 0xa9, 0x69, 0xf2,
    0x46, 0x7e, 0xbc, 0xde, 0x12, 0x89, 0x12, 0xae, 0x24, 0x68, 0x8c, 0x1b, 0x9a, 0xb3, 0x37, 0x70,
    0xb4, 0x3f, 0x8b, 0x82, 0x84, 0xca, 0xf5, 0x10, 0x11, 0xdb, 0x08, 0x26, 0xa5, 0x71, 0x3a, 0x02,
    0xd9, 0x1d, 0x9d, 0xc6, 0xc8, 0x6f, 0x79, 0x71, 0xd4, 0xc5, 0xd3, 0xfd, 0x04, 0x17, 0xff, 0xe6,
    0x4d, 0xa0, 0x04, 0xdc, 0x03, 0xd4, 0x0b, 0xa4, 0xae, 0x89, 0xb0, 0xe0, 0x32, 0x69, 0xb7, 0xc1,
    0x30, 0xb7, 0xd3, 0xb3, 0xe6, 0x1b, 0xc8, 0xa2, 0x86, 0x3f, 0x31, 0x7a, 0x2c, 0x9b, 0x3c, 0x0f,
    0xca, 0xcd, 0x3e, 0x60, 0xf9, 0xef, 0xa3, 0xe1, 0x91, 0x98, 0xac, 0x42, 0x9b, 0xd2, 0x32, 0x1c,
    0xe3, 0x61, 0x08, 0x17, 0xcd, 0x32, 0x0a, 0x4b, 0xe3, 0x30, 0x0f, 0x76, 0xb3, 0x76, 0x69, 0x2b,
    0x39, 0xea, 0x93, 0xf3, 0x3d, 0x5c, 0xbd, 0x20, 0x72, 0xdd, 0x88, 0x53, 0x7e, 0xa3, 0x26, 0x71,
    0x30, 0x5d, 0x1e, 0x51, 0x2c, 0x79, 0xf2, 0xe2, 0xc3, 0x6d, 0xbe, 0xae, 0xc8, 0xd6, 0x1b, 0xf6,
    0x0d, 0xa1, 0xe4, 0x3f, 0xbe, 0x90, 0x29, 0x20, 0x3a, 0xb9, 0xbb, 0xfd, 0x09, 0x90, 0xaf, 0xd2,
    0xde, 0xe3, 0x33, 0x2e, 0xf9, 0xa6, 0xa0, 0x63, 0x63, 0xd1, 0x30, 0x71, 0xca, 0x42, 0x5a, 0x28,
    0x58, 0xbc, 0x01, 0x6e, 0xff, 0x4a, 0xb6, 0x12, 0xbf, 0x3b, 0xc1, 0x2e, 0x96, 0xf9, 0xef, 0x31,
    0xf1, 0x7c, 0xcd, 0xb7, 0x4d, 0x8e, 0x17, 0x3e, 0x75, 0x04, 0x39, 0x9f, 0x8d, 0x83, 0x40, 0x17,
    0xd8, 0x6f, 0xb6, 0x1f, 0x02, 0x44, 0x72, 0x3a, 0x6e, 0xc7, 0xcd, 0xef, 0xe7, 0x4d, 0x26, 0x12,
    0x9e, 0x89, 0xfd, 0xe7, 0xd0, 0xdf, 0xba, 0xbb, 0x2e, 0xf2, 0x18, 0x80, 0x39, 0x2e, 0x6d, 0xf8,
    0x9a, 0xde, 0xd2, 0x17, 0x22, 0xf1, 0x05, 0x6c, 0x33, 0x8b, 0xea, 0x09, 0x61, 0x49, 0x61, 0x75,
    0x8d, 0xf9, 0xa6, 0xb6, 0xc1, 0x06, 0x87, 0xb5, 0xfc, 0xb5, 0xd7, 0x3e, 0x58, 0x64, 0x44, 0x5c,
    0x00, 0xd3, 0x0f, 0xd6, 0x10, 0xab, 0xba, 0xae, 0x46, 0xaf, 0x0f, 0xf7, 0xd6, 0xf0, 0xcc, 0x74,
    0xe1, 0xec, 0xd2, 0x7c, 0x4b, 0x36, 0xf5, 0x34, 0xf3, 0x2c, 0x0d, 0xfc, 0x2a, 0x63, 0xc3, 0xe6,
    0xd8, 0x4f, 0xf7, 0x63, 0xc7, 0xad, 0xc8, 0xb1, 0xea, 0x03, 0xd5, 0xc2, 0x18, 0xac, 0x60, 0x03,
    0x90, 0x43, 0x42, 0xd5, 0x4e, 0x02, 0x75, 0x42, 0xcd, 0x4f, 0x4f, 0x6b, 0xf2, 0xcb, 0xa0, 0x1e,
    0x84, 0x35, 0x7a, 0xfc, 0x11, 0x74, 0x75, 0x04, 0x7d, 0x88, 0x7f, 0x85, 0x65, 0x07, 0x39, 0x7b,
    0xa5, 0xcb, 0x54, 0x90, 0x61, 0xd3, 0x91, 0xb0, 0xf2, 0x66, 0x63, 0xcc, 0xa6, 0xe6, 0x63, 0x00,
    0x8c, 0x58, 0xf2, 0x44, 0xfe, 0xea, 0xfb, 0x98, 0x33, 0x72, 0x2c, 0x4e, 0x20, 0x9f, 0x15, 0xc5,
    0x69, 0x09, 0xc5, 0x30, 0xde, 0xea, 0xdb, 0xf1, 0x99, 0x86, 0x5c, 0x3b, 0xa3, 0x1b, 0x63, 0x2e,
    0x06, 0x21, 0x24, 0x1b, 0xf5, 0xa1, 0x9d, 0x91, 0x70, 0xa4, 0x1f, 0x47, 0x3f, 0xf6, 0xdf, 0x0d,
    0xb0, 0xb2, 0x1d, 0x36, 0x14, 0x16, 0x1c, 0xef, 0x17, 0x75, 0x1f, 0xf8, 0x94, 0xd5, 0xf6, 0x46,
    0x30, 0xa0, 0x62, 0xa7, 0x27, 0xbe, 0xdc, 0x6f, 0xa5, 0x6d, 0x56, 0x7e, 0x13, 0x12, 0xaf, 0x9a,
    0x68, 0xbf, 0x64, 0x91, 0x5c, 0x0e, 0xc2, 0x98, 0x18, 0x61, 0x64, 0xf1, 0xc9, 0x79, 0x5c, 0x03,
    0x74, 0x1b, 0x5e, 0xf6, 0x87, 0x0f, 0x83, 0x2a, 0x31, 0xbc, 0xfb, 0xb4, 0x40, 0xfe, 0x7b, 0x60,
    0x50, 0x50, 0x93, 0x15, 0xe9, 0x25, 0xa0, 0x88, 0x97, 0x8c, 0xff, 0x33, 0xdc, 0x19, 0xa5, 0x54,
    0xc8, 0x3d, 0xe0, 0xd3, 0x5d, 0x11, 0xc2, 0xef, 0x30, 0xe5, 0x42, 0x4a, 0xcf, 0x22, 0xe6, 0x35,
    0x28, 0xd7, 0x3d, 0x22, 0xd3, 0x59, 0x52, 0xff, 0x30, 0x26, 0xab, 0x55, 0xf0, 0xf8, 0x76, 0xb1,
    0x39, 0x69, 0x3e, 0x83, 0xaf, 0xc3, 0x5e, 0x6d, 0xc4, 0xe1, 0xb8, 0x4f, 0xd1, 0xff, 0x1e, 0x17,
    0x73, 0xec, 0x91, 0x65, 0xf2, 0xd8, 0xd4, 0xaf, 0x91, 0x11, 0x9a, 0x05, 0xe7, 0xce, 0xa8, 0x21,
    0xd7, 0x94, 0xe3, 0xec, 0xdd, 0x4a, 0x6c, 0xd8, 0x66, 0x40, 0xa0, 0x69, 0xa7, 0xa4, 0x89, 0x23,
    0xe5, 0x30, 0x3d, 0xd9, 0x54, 0xd3, 0xec, 0xb2, 0x23, 0xaf, 0x4a, 0x02, 0xd0, 0x28, 0xef, 0xcc,
    0x47, 0x14, 0x70, 0xca, 0x9c, 0xa6, 0x9c, 0x83, 0x3d, 0xe2, 0xc3, 0x09, 0x07, 0x8a, 0x4d, 0x5b,
    0x7b, 0x90, 0xe4, 0x4c, 0x49, 0xd3, 0x77, 0x43, 0x7f, 0xc7, 0x41, 0x87, 0xb9, 0x65, 0x59, 0x71,
    0x4b, 0x0e, 0x18, 0x67, 0xd6, 0xc3, 0x4d, 0xbd, 0x9d, 0x7c, 0x3d, 0x0b, 0xc9, 0xfd, 0xdb, 0x68,
    0x48, 0x00, 0xc5, 0x67, 0xd3, 0x26, 0x2d, 0xa4, 0x4d, 0x7a, 0x3b, 0xed, 0xd0, 0x8c, 0x2e, 0x0f,
    0x6c, 0x34, 0x16, 0xf8, 0xc4, 0x8d, 0x8e, 0xb6, 0x2b, 0xdc, 0xbc, 0x87, 0xa8, 0x60, 0x55, 0xc4,
    0xde, 0x7f, 0xbe, 0x85, 0x1a, 0x87, 0x4e, 0xcc, 0x6d, 0x30, 0x66, 0x5a, 0xaa, 0xc3, 0x65, 0x79,
    0xdf, 0x9f, 0x79, 0x08, 0xf0, 0x8d, 0x06, 0x81, 0xb0, 0xa2, 0x69, 0x14, 0x95, 0x6f, 0x3d, 0x16,
};
const std::array<uint8_t, 24 * TEST_VEC_LEN> enc_poly192_vec_products = {
    0xa4, 0xd9, 0x6d, 0x04, 0xae, 0x61, 0x79, 0x16, 0x4c, 0xe2, 0x07, 0xee, 0xb6, 0x71, 0xa1, 0x54,
    0x13, 0xad, 0xdd, 0x0e, 0xb9, 0xc7, 0xd8, 0x11, 0x45, 0x5a, 0x26, 0xf7, 0xae, 0xbb, 0xab, 0xd9,
    0x65, 0x13, 0x40, 0xfa, 0x41, 0x9e, 0x45, 0xfa, 0xb9, 0xf7, 0xeb, 0x28, 0xfa, 0x0f, 0x8d, 0xbd,
    0x06, 0x75, 0xca, 0x3d, 0x24, 0xe9, 0xc9, 0xee, 0x26, 0x58, 0x32, 0x0f, 0xec, 0xa7, 0x8a, 0xee,
    0x8d, 0xdd, 0x0c, 0xa2, 0xfb, 0x83, 0xf1, 0x17, 0xcc, 0x32, 0x8b, 0x25, 0x5a, 0xf7, 0x06, 0x85,
    0xab, 0x12, 0xa2, 0x51, 0xd3, 0x58, 0xae, 0xa1, 0xad, 0xca, 0xdc, 0x69, 0x9f, 0xe5, 0xaa, 0x8f,
    0xfa, 0xe5, 0xe0, 0x7c, 0xef, 0x8d, 0x74, 0x88, 0xb2, 0x29, 0xd4, 0x7d, 0xb0, 0xda, 0x2b, 0x0c,
    0x94, 0x26, 0x1e, 0xf0, 0xf1, 0x39, 0x8f, 0xd4, 0x2c, 0x9f, 0x2c, 0x2f, 0x90, 0x06, 0x34, 0xd6,
    0xbc, 0xd8, 0xf5, 0xab, 0x97, 0x24, 0x92, 0xaf, 0xe6, 0x9f, 0x4f, 0xde, 0x0d, 0x9c, 0xc2, 0x53,
    0xca, 0xb6, 0x2d, 0x2f, 0x73, 0x91, 0x38, 0x41, 0x36, 0xd8, 0x14, 0xd2, 0xa6, 0x5e, 0x7b, 0x33,
    0x37, 0x29, 0x2e, 0xc4, 0xb5, 0xe0, 0xea, 0xdb, 0xde, 0x6c, 0xba, 0x24, 0xba, 0x17, 0x43, 0x7f,
    0x3f, 0xac, 0x6c, 0x27, 0x33, 0x52, 0xe1, 0x85, 0x2c, 0x12, 0x78, 0x5a, 0x60, 0x7e, 0x80, 0x8c,
    0x63, 0xc4, 0xf8, 0xf0, 0xb4, 0xa4, 0x59, 0xbf, 0x0a, 0xef, 0x84, 0xb0, 0x1e, 0x43, 0xbc, 0x45,
    0x01, 0x7c, 0xe1, 0xa8, 0x07, 0x96, 0xad, 0x34, 0xd1, 0x86, 0x26, 0x4a, 0x0a, 0x79, 0x5f, 0x62,
    0x36, 0x16, 0xc0, 0x9d, 0x66, 0x00, 0x15, 0xff, 0x72, 0x4c, 0x49, 0x6a, 0xc1, 0x37, 0x3f, 0x3f,
    0xcc, 0x60, 0x88, 0x66, 0xd3, 0x61, 0xd8, 0x7d, 0x41, 0xfd, 0x7f, 0xbc, 0x4b, 0xd0, 0xbf, 0xed,
    0x37, 0x0b, 0x6f, 0xc3, 0xa2, 0x37, 0x75, 0xc9, 0x57, 0xfa, 0x66, 0x92, 0x8a, 0xac, 0x74, 0xd7,
    0x62, 0xe9, 0x45, 0x7f, 0x38, 0x26, 0x3d, 0x0e, 0xb5, 0x73, 0x2d, 0xc3, 0x20, 0xae, 0x03, 0xf2,
    0x04, 0x98, 0x67, 0x10, 0x42, 0x4e, 0x75, 0x15, 0xe2, 0x9a, 0xa8, 0xa5, 0x1d, 0x8b, 0x34, 0x14,
    0x1a, 0xd5, 0xf0, 0x56, 0x98, 0xd8, 0x63, 0x5d, 0x7a, 0x5e, 0x41, 0xc6, 0xec, 0xf8, 0x75, 0xc9,
    0x57, 0x0e, 0xfa, 0x26, 0x14, 0x9b, 0x0d, 0x67, 0x94, 0x80, 0x87, 0x05, 0xc5, 0x66, 0xc9, 0x94,
    0xbd, 0xaa, 0xe8, 0xe3, 0xb3, 0xc6, 0x8a, 0x34, 0xb2, 0xe2, 0x9a, 0x52, 0x32, 0xfc, 0x09, 0x1b,
    0x79, 0x4f, 0x05, 0x79, 0x92, 0x0d, 0xc2, 0x07, 0x5e, 0x96, 0x3c, 0x4c, 0xbe, 0x12, 0x56, 0x6a,
    0x8b, 0xec, 0x1f, 0x82, 0x7c, 0x39, 0x02, 0xc0, 0x8d, 0x4a, 0x73, 0xdc, 0x7b, 0x43, 0x4b, 0xb0,
};

const std::array<uint8_t, 32 * TEST_VEC_LEN> enc_poly256_vec_xs = {
    0x02, 0xad, 0x84, 0x5b, 0xc6, 0x2b, 0x60, 0x1a, 0x8e, 0x90, 0xf8, 0xaf, 0xf9, 0x55, 0x39, 0xe1,
    0xbd, 0x4d, 0xf4, 0x6d, 0x7d, 0x52, 0x85, 0xe7, 0x6d, 0x55, 0xe1, 0x92, 0x3a, 0x30, 0x06, 0xe8,
    0xad, 0x94, 0x45, 0x2c, 0x9d, 0xc1, 0xf5, 0x6e, 0x60, 0x75, 0xed, 0x5b, 0x1a, 0xb1, 0x3e, 0xd6,
    0xec, 0xda, 0x20, 0x9f, 0x3c, 0x2b, 0x55, 0x7c, 0x78, 0x6d, 0x11, 0x43, 0xf2, 0x5d, 0x2a, 0xcc,
    0xba, 0x5d, 0xf5, 0x5e, 0x1b, 0x2d, 0xbf, 0xaa, 0xcc, 0x6f, 0x67, 0x66, 0x9d, 0x7e, 0x24, 0x33,
    0xe0, 0x81, 0x65, 0x85, 0x72, 0xdd, 0xe6, 0x88, 0xa5, 0x00, 0x45, 0x6b, 0xe3, 0x00, 0x81, 0x95,
    0x56, 0xba, 0x21, 0x10, 0x77, 0x2f, 0x5b, 0xf8, 0x91, 0xc6, 0x15, 0x9c, 0x24, 0x71, 0x0c, 0x4c,
    0xe6, 0x9e, 0x61, 0x81, 0x91, 0xe5, 0x07, 0x60, 0x2f, 0xe7, 0x84, 0xd8, 0x36, 0x82, 0x71, 0xd9,
    0xc9, 0x27, 0xe9, 0x9e, 0x1f, 0x17, 0xae, 0xc2, 0xca, 0x2c, 0x0b, 0xf4, 0x40, 0x27, 0x65, 0x09,
    0xe8, 0xa0, 0x66, 0xc1, 0x44, 0xa8, 0xb7, 0x6c, 0xd7, 0xe0, 0x84, 0xa0, 0x8d, 0x10, 0xfb, 0xc0,
    0xb6, 0x92, 0x9b, 0xfc, 0xeb, 0x68, 0xbe, 0x13, 0x68, 0x7f, 0x42, 0xf4, 0x0f, 0x20, 0xb5, 0x47,
    0xeb, 0x99, 0xa7, 0x18, 0xfd, 0xa4, 0xf2, 0x33, 0xe1, 0x72, 0x6f, 0xc3, 0x86, 0x61, 0xb2, 0x8a,
    0x11, 0x81, 0xf3, 0xe2, 0xd2, 0x09, 0x86, 0x4c, 0xef, 0xef, 0x45, 0x18, 0x16, 0x80, 0x89, 0x32,
    0x47, 0x27, 0xec, 0xd4, 0x80, 0x93, 0xcb, 0x06, 0xc4, 0x36, 0x9f, 0x31, 0x7f, 0xff, 0x1f, 0x80,
    0x97, 0x0d, 0x18, 0x56, 0x04, 0xcd, 0x4e, 0x3f, 0xa9, 0xb8, 0x11, 0x87, 0x9b, 0x9a, 0x34, 0x3d,
    0x78, 0xb9, 0x06, 0xde, 0xf5, 0x2f, 0xed, 0x2e, 0x94, 0x1c, 0xc5, 0x1b, 0x7c, 0x0b, 0x06, 0x16,
    0xb4, 0x7f, 0xe7, 0x86, 0x01, 0xc5, 0xb2, 0x1b, 0xaf, 0x45, 0x43, 0x9d, 0x24, 0xe9, 0xcd, 0x66,
    0xf6, 0x35, 0x39, 0x15, 0x3a, 0x41, 0x1f, 0x43, 0xa8, 0xc7, 0x29, 0x3c, 0x2e, 0xc3, 0xac, 0xe6,
    0x50, 0xbc, 0x89, 0xfe, 0xee, 0xef, 0x2c, 0xdf, 0x54, 0x6d, 0x23, 0x54, 0x51, 0x54, 0x5b, 0x31,
    0x1f, 0x75, 0x3b, 0xdc, 0xa9, 0x7f, 0xc8, 0x8e, 0x3e, 0x65, 0x26, 0x27, 0x45, 0xd2, 0xea, 0x51,
    0x0c, 0x5a, 0x73, 0x9b, 0x58, 0x3f, 0x59, 0xfa, 0x50, 0x16, 0xf7, 0x05, 0x5c, 0x36, 0x4e, 0x97,
    0xf2, 0x29, 0x6b, 0xe6, 0x82, 0xbb, 0x69, 0xde, 0x12, 0xe1, 0x34, 0x32, 0x3b, 0x7f, 0x07, 0x91,
    0xe9, 0x95, 0xe1, 0xac, 0x1a, 0x31, 0x6e, 0x1e, 0x13, 0x7d, 0xbe, 0xdf, 0x59, 0x02, 0x34, 0xf0,
    0x49, 0x16, 0x80, 0x3d, 0x99, 0x75, 0xa2, 0x04, 0xd6, 0xf6, 0xdb, 0xc2, 0xab, 0xdb, 0xa8, 0x2c,
    0x57, 0x56, 0xdb, 0xa1, 0xba, 0x1a, 0xce, 0x77, 0xbb, 0x10, 0x04, 0xfe, 0xcf, 0x41, 0x39, 0xe8,
    0xa9, 0x52, 0x32, 0x2a, 0xc8, 0x9e, 0x11, 0x8c, 0xc7, 0x7e, 0x0e, 0xd6, 0xc2, 0xf1, 0x3c, 0x19,
    0x43, 0x58, 0xb8, 0x62, 0xe0, 0x36, 0xff, 0x67, 0x76, 0x31, 0x1b, 0xf6, 0xe6, 0x4a, 0x02, 0xeb,
    0x22, 0x08, 0x8f, 0x5c, 0x6e, 0xb6, 0xb0, 0x19, 0x1e, 0xe6, 0x7c, 0x8d, 0x92, 0xcf, 0x00, 0x08,
    0xe2, 0xa0, 0xa8, 0x83, 0x27, 0xd6, 0x59, 0x09, 0x7c, 0x3e, 0x08, 0xac, 0xdf, 0xa5, 0x35, 0x18,
    0xfd, 0x89, 0x0a, 0x78, 0xbc, 0x26, 0xfa, 0xfe, 0x73, 0xfc, 0xb5, 0xc3, 0x67, 0xe0, 0x8a, 0x2e,
    0x9c, 0x05, 0x52, 0x30, 0xca, 0x81, 0x9e, 0x98, 0x25, 0xe5, 0x9e, 0x8b, 0xfe, 0xcb, 0x4f, 0x6e,
    0xce, 0x72, 0xec, 0x71, 0x04, 0x2b, 0xc6, 0x1a, 0x0f, 0x3c, 0x45, 0xc8, 0x43, 0x9c, 0x14, 0x25,
};
const std::array<uint8_t, 32 * TEST_VEC_LEN> enc_poly256_vec_ys = {
    0x46, 0x1c, 0xf4, 0xc4, 0x18, 0x8e, 0x77, 0xf1, 0xaa, 0xb9, 0x8b, 0xc8, 0x76, 0x45, 0xc1, 0x01,
    0xb9, 0xbf, 0x91, 0xac, 0xd0, 0xf4, 0x05, 0xa2, 0xe6, 0xb1, 0x79, 0x67, 0x42, 0x51, 0x3b, 0x46,
    0xb5, 0xdd, 0x44, 0x42, 0xaa, 0x02, 0xa9, 0xa2, 0x0e, 0x93, 0xf8, 0xdc, 0x2a, 0x86, 0xa3, 0x42,
    0x35, 0x94, 0x71, 0xae, 0x8a, 0xc9, 0x3d, 0xce, 0x0e, 0x5c, 0x90, 0xed, 0xa8, 0x7b, 0xd8, 0x96,
    0xb0, 0xfc, 0x6e, 0x1b, 0x7d, 0xf0, 0x60, 0x0b, 0xae, 0xf1, 0xa3, 0xf4, 0x5a, 0xf3, 0x3e, 0x1a,
    0xc1, 0x18, 0x48, 0x15, 0x92, 0x77, 0xa5, 0x59, 0x11, 0xdd, 0xa2, 0x9a, 0x09, 0x3d, 0x77, 0x4e,
    0xc4, 0xe6, 0x51, 0xb2, 0x3f, 0x42, 0x0b, 0x0d, 0xf0, 0x85, 0xa9, 0xc5, 0xb1, 0xff, 0x6e, 0x96,
    0x12, 0xc5, 0x72, 0x27, 0x17, 0xaf, 0x92, 0xb1, 0x94, 0x23, 0xbc, 0x67, 0x50, 0x3f, 0xfa, 0xf6,
    0x39, 0x82, 0x39, 0xa2, 0x8d, 0x2f, 0xc4, 0x9c, 0x6e, 0xbd, 0xac, 0xa2, 0x89, 0xba, 0x88, 0x0f,
    0x9a, 0x67, 0x69, 0x5a, 0xac, 0xa1, 0x5a, 0x50, 0x9e, 0xfa, 0x81, 0xc0, 0x72, 0x3b, 0xd3, 0xaf,
    0x6e, 0x66, 0x92, 0xe0, 0xa4, 0x2d, 0xba, 0x3c, 0x3a, 0x30, 0xd9, 0x27, 0x6d, 0x51, 0x3b, 0x1a,
    0xb1, 0xb1, 0x6c, 0x9a, 0x1c, 0x79, 0xd0, 0x93, 0xed, 0xfb, 0xc9, 0xd6, 0x3f, 0xb9, 0xfb, 0xf6,
    0x83, 0xb5, 0xb2, 0x51, 0x82, 0xfd, 0x28, 0x44, 0x7f, 0xbb, 0xe1, 0xee, 0xbb, 0xe3, 0x22, 0x72,
    0x33, 0xfe, 0x01, 0x01, 0x3b, 0xce, 0x65, 0x7b, 0x1f, 0x80, 0x98, 0x70, 0x76, 0xbf, 0xea, 0x5b,
    0x14, 0xc9, 0xb7, 0x47, 0xc0, 0x0b, 0x8a, 0xb7, 0xe9, 0xcc, 0x9a, 0x46, 0xb5, 0x4e, 0x7d, 0xe5,
    0x71, 0x07, 0x57, 0x81, 0x27, 0xde, 0x0d, 0x19, 0x13, 0xd4, 0x0e, 0xca, 0xc6, 0xcc, 0x41, 0x0a,
    0x24, 0x29, 0x4c, 0x78, 0xf6, 0xfe, 0x81, 0x9d, 0x6c, 0xe2, 0x05, 0x47, 0xc9, 0x83, 0xb2, 0xca,
    0x1f, 0x40, 0xd6, 0x51, 0xad, 0x8f, 0x50, 0x9a, 0xc4, 0x9e, 0x9d, 0xf6, 0xaa, 0x6f, 0x16, 0x3c,
    0xe3, 0xc1, 0x10, 0xa1, 0x60, 0xea, 0xc2, 0x91, 0x44, 0xdf, 0x89, 0xbe, 0x66, 0xec, 0x39, 0x59,
    0x8c, 0xb1, 0x3e, 0xa2, 0xee, 0x6d, 0x84, 0xf7, 0x9d, 0xf9, 0x50, 0xf1, 0xea, 0x0a, 0xe4, 0x38,
    0x57, 0x20, 0x55, 0x42, 0xee, 0x94, 0xcb, 0x49, 0xe4, 0x48, 0x88, 0x50, 0xad, 0xf3, 0x15, 0xe4,
    0xaf, 0x03, 0x70, 0x06, 0x1e, 0xa1, 0xfb, 0x5b, 0xa5, 0xd2, 0xa3, 0xa5, 0x67, 0x6b, 0x54, 0xa7,
    0x8c, 0x89, 0x43, 0x05, 0xf6, 0x12, 0x1b, 0xd8, 0xfa, 0xc4, 0xbd, 0x1a, 0x9c, 0x02, 0x20, 0x7b,
    0x70, 0x0e, 0x42, 0x39, 0xcb, 0xe3, 0x53, 0x0d, 0x4a, 0xb2, 0x6f, 0x74, 0x27, 0x33, 0x49, 0x08,
    0x64, 0x49, 0xa0, 0x52, 0xe2, 0x7a, 0xfd, 0xb1, 0xda, 0xce, 0x52, 0xa7, 0xb5, 0xe6, 0x9a, 0x0e,
    0xf3, 0xb9, 0x4b, 0x54, 0x35, 0x21, 0x66, 0x82, 0x21, 0x8f, 0x95, 0x59, 0x74, 0x77, 0x1a, 0x55,
    0x6d, 0x6a, 0xfb, 0xb4, 0xd7, 0xde, 0x42, 0x8b, 0x3e, 0xe6, 0x63, 0xcc, 0x7e, 0x41, 0xc5, 0x16,
    0xc8, 0xbd, 0xcd, 0x13, 0x49, 0x44, 0xd3, 0x98, 0xf2, 0x1b, 0x35, 0xa9, 0x61, 0x8f, 0x80, 0xbc,
    0xa9, 0x0e, 0x5c, 0xaf, 0x6f, 0x9e, 0x19, 0xa4, 0x94, 0x83, 0xe0, 0xd8, 0xa3, 0x66, 0x8f, 0xa0,
    0xa0, 0x2e, 0x4e, 0xe9, 0x26, 0x09, 0x8b, 0x5d, 0xae, 0x9f, 0x5b, 0xb9, 0x58, 0xf1, 0x2c, 0x5e,
    0x22, 0xbd, 0x56, 0xb6, 0x97, 0x25, 0x40, 0x82, 0x10, 0xf5, 0x19, 0xb8, 0x0f, 0x78, 0xb0, 0x97,
    0xa3, 0xa1, 0x60, 0x66, 0xc8, 0xd1, 0x29, 0x23, 0x39, 0x1f, 0x75, 0xa4, 0xf7, 0xb1, 0x36, 0x75,
};
const std::array<uint8_t, 32 * TEST_VEC_LEN> enc_poly256_vec_sums = {
    0x44, 0xb1, 0x70, 0x9f, 0xde, 0xa5, 0x17, 0xeb, 0x24, 0x29, 0x73, 0x67, 0x8f, 0x10, 0xf8, 0xe0,
    0x04, 0xf2, 0x65, 0xc1, 0xad, 0xa6, 0x80, 0x45, 0x8b, 0xe4, 0x98, 0xf5, 0x78, 0x61, 0x3d, 0xae,
    0x18, 0x49, 0x01, 0x6e, 0x37, 0xc3, 0x5c, 0xcc, 0x6e, 0xe6, 0x15, 0x87, 0x30, 0x37, 0x9d, 0x94,
    0xd9, 0x4e, 0x51, 0x31, 0xb6, 0xe2, 0x68, 0xb2, 0x76, 0x31, 0x81, 0xae, 0x5a, 0x26, 0xf2, 0x5a,
    0x0a, 0xa1, 0x9b, 0x45, 0x66, 0xdd, 0xdf, 0xa1, 0x62, 0x9e, 0xc4, 0x92, 0xc7, 0x8d, 0x1a, 0x29,
    0x21, 0x99, 0x2d, 0x90, 0xe0, 0xaa, 0x43, 0xd1, 0xb4, 0xdd, 0xe7, 0xf1, 0xea, 0x3d, 0xf6, 0xdb,
    0x92, 0x5c, 0x70, 0xa2, 0x48, 0x6d, 0x50, 0xf5, 0x61, 0x43, 0xbc, 0x59, 0x95, 0x8e, 0x62, 0xda,
    0xf4, 0x5b, 0x13, 0xa6, 0x86, 0x4a, 0x95, 0xd1, 0xbb, 0xc4, 0x38, 0xbf, 0x66, 0xbd, 0x8b, 0x2f,
    0xf0, 0xa5, 0xd0, 0x3c, 0x92, 0x38, 0x6a, 0x5e, 0xa4, 0x91, 0xa7, 0x56, 0xc9, 0x9d, 0xed, 0x06,
    0x72, 0xc7, 0x0f, 0x9b, 0xe8, 0x09, 0xed, 0x3c, 0x49, 0x1a, 0x05, 0x60, 0xff, 0x2b, 0x28, 0x6f,
    0xd8, 0xf4, 0x09, 0x1c, 0x4f, 0x45, 0x04, 0x2f, 0x52, 0x4f, 0x9b, 0xd3, 0x62, 0x71, 0x8e, 0x5d,
    0x5a, 0x28, 0xcb, 0x82, 0xe1, 0xdd, 0x22, 0xa0, 0x0c, 0x89, 0xa6, 0x15, 0xb9, 0xd8, 0x49, 0x7c,
    0x92, 0x34, 0x41, 0xb3, 0x50, 0xf4, 0xae, 0x08, 0x90, 0x54, 0xa4, 0xf6, 0xad, 0x63, 0xab, 0x40,
    0x74, 0xd9, 0xed, 0xd5, 0xbb, 0x5d, 0xae, 0x7d, 0xdb, 0xb6, 0x07, 0x41, 0x09, 0x40, 0xf5, 0xdb,
    0x83, 0xc4, 0xaf, 0x11, 0xc4, 0xc6, 0xc4, 0x88, 0x40, 0x74, 0x8b, 0xc1, 0x2e, 0xd4, 0x49, 0xd8,
    0x09, 0xbe, 0x51, 0x5f, 0xd2, 0xf1, 0xe0, 0x37, 0x87, 0xc8, 0xcb, 0xd1, 0xba, 0xc7, 0x47, 0x1c,
    0x90, 0x56, 0xab, 0xfe, 0xf7, 0x3b, 0x33, 0x86, 0xc3, 0xa7, 0x46, 0xda, 0xed, 0x6a, 0x7f, 0xac,
    0xe9, 0x75, 0xef, 0x44, 0x97, 0xce, 0x4f, 0xd9, 0x6c, 0x59, 0xb4, 0xca, 0x84, 0xac, 0xba, 0xda,
    0xb3, 0x7d, 0x99, 0x5f, 0x8e, 0x05, 0xee, 0x4e, 0x10, 0xb2, 0xaa, 0xea, 0x37, 0xb8, 0x62, 0x68,
    0x93, 0xc4, 0x05, 0x7e, 0x47, 0x12, 0x4c, 0x79, 0xa3, 0x9c, 0x76, 0xd6, 0xaf, 0xd8, 0x0e, 0x69,
    0x5b, 0x7a, 0x26, 0xd9, 0xb6, 0xab, 0x92, 0xb3, 0xb4, 0x5e, 0x7f, 0x55, 0xf1, 0xc5, 0x5b, 0x73,
    0x5d, 0x2a, 0x1b, 0xe0, 0x9c, 0x1a, 0x92, 0x85, 0xb7, 0x33, 0x97, 0x97, 0x5c, 0x14, 0x53, 0x36,
    0x65, 0x1c, 0xa2, 0xa9, 0xec, 0x23, 0x75, 0xc6, 0xe9, 0xb9, 0x03, 0xc5, 0xc5, 0x00, 0x14, 0x8b,
    0x39, 0x18, 0xc2, 0x04, 0x52, 0x96, 0xf1, 0x09, 0x9c, 0x44, 0xb4, 0xb6, 0x8c, 0xe8, 0xe1, 0x24,
    0x33, 0x1f, 0x7b, 0xf3, 0x58, 0x60, 0x33, 0xc6, 0x61, 0xde, 0x56, 0x59, 0x7a, 0xa7, 0xa3, 0xe6,
    0x5a, 0xeb, 0x79, 0x7e, 0xfd, 0xbf, 0x77, 0x0e, 0xe6, 0xf1, 0x9b, 0x8f, 0xb6, 0x86, 0x26, 0x4c,
    0x2e, 0x32, 0x43, 0xd6, 0x37, 0xe8, 0xbd, 0xec, 0x48, 0xd7, 0x78, 0x3a, 0x98, 0x0b, 0xc7, 0xfd,
    0xea, 0xb5, 0x42, 0x4f, 0x27, 0xf2, 0x63, 0x81, 0xec, 0xfd, 0x49, 0x24, 0xf3, 0x40, 0x80, 0xb4,
    0x4b, 0xae, 0xf4, 0x2c, 0x48, 0x48, 0x40, 0xad, 0xe8, 0xbd, 0xe8, 0x74, 0x7c, 0xc3, 0xba, 0xb8,
    0x5d, 0xa7, 0x44, 0x91, 0x9a, 0x2f, 0x71, 0xa3, 0xdd, 0x63, 0xee, 0x7a, 0x3f, 0x11, 0xa6, 0x70,
    0xbe, 0xb8, 0x04, 0x86, 0x5d, 0xa4, 0xde, 0x1a, 0x35, 0x10, 0x87, 0x33, 0xf1, 0xb3, 0xff, 0xf9,
    0x6d, 0xd3, 0x8c, 0x17, 0xcc, 0xfa, 0xef, 0x39, 0x36, 0x23, 0x30, 0x6c, 0xb4, 0x2d, 0x22, 0x50,
};
const std::array<uint8_t, 2 * 32 * TEST_VEC_LEN> enc_poly256_vec_unreduced_products = {
    0x8c, 0x96, 0xd4, 0xc8, 0xfc, 0x09, 0xc0, 0x00, 0x28, 0xd9, 0xf9, 0x56, 0xe3, 0x83, 0x8b, 0xaf,
    0x81, 0xfe, 0xeb, 0xe7, 0x20, 0x79, 0xaf, 0x04, 0x2a, 0x05, 0xa1, 0xd0, 0xfb, 0x09, 0xe0, 0xeb,
    0x5f, 0x98, 0x50, 0x33, 0x0d, 0x52, 0x84, 0xc6, 0x83, 0x2c, 0xb2, 0xbf, 0x60, 0x20, 0xf9, 0x4c,
    0x3e, 0x45, 0xe6, 0xbf, 0x9f, 0x02, 0xd2, 0xcf, 0xda, 0x0f, 0xbc, 0xf3, 0x62, 0x54, 0x64, 0x38,
    0xe9, 0x2e, 0xd2, 0x19, 0x63, 0x77, 0x38, 0x5d, 0xd1, 0x99, 0x37, 0x95, 0xe4, 0x39, 0xd5, 0x15,
    0xea, 0xb1, 0x33, 0x6f, 0x78, 0x83, 0x93, 0x46, 0x66, 0x0d, 0xbe, 0xc5, 0x28, 0xba, 0x7b, 0x4e,
    0x18, 0x28, 0x91, 0xaa, 0x46, 0xbc, 0xda, 0x57, 0xe4, 0x89, 0x17, 0x80, 0x1b, 0x1f, 0x58, 0x24,
    0x52, 0x55, 0x60, 0xed, 0x77, 0x70, 0x47, 0xfb, 0x2d, 0xbc, 0x7a, 0x70, 0xa5, 0xeb, 0x20, 0x68,
    0xe0, 0xe9, 0x98, 0x74, 0x50, 0xf8, 0x1e, 0x53, 0xca, 0x29, 0x66, 0x1b, 0x06, 0xd8, 0x2f, 0x3c,
    0x38, 0x66, 0x5f, 0x7f, 0xe6, 0xd6, 0x50, 0x96, 0x85, 0xe8, 0xe0, 0xb3, 0xc5, 0xee, 0xa8, 0x2d,
    0xfe, 0xb2, 0x17, 0x29, 0xfe, 0xb7, 0x17, 0x43, 0x48, 0x85, 0x86, 0xe1, 0xf2, 0x53, 0x11, 0x5e,
    0x27, 0x55, 0x17, 0xa0, 0x70, 0x2e, 0xc6, 0x95, 0xb9, 0x63, 0x00, 0x60, 0x49, 0x33, 0x8c, 0x22,
    0xd8, 0xe3, 0xea, 0x9f, 0xba, 0xd9, 0xc1, 0xb1, 0xb2, 0x72, 0xf2, 0xff, 0x5b, 0x6c, 0x24, 0xcd,
    0x0a, 0x44, 0x78, 0x97, 0x97, 0x80, 0x69, 0xc4, 0x7d, 0x8b, 0x80, 0xf3, 0x1d, 0x19, 0x8e, 0x8c,
    0xe1, 0x51, 0x82, 0xb7, 0x2a, 0xd9, 0x0d, 0xcf, 0x11, 0x1e, 0x82, 0xf6, 0x14, 0xaa, 0xa3, 0xe5,
    0xcd, 0x1c, 0x44, 0x7b, 0x9a, 0xce, 0x93, 0x77, 0x62, 0x93, 0x1e, 0x28, 0x5e, 0x9a, 0xc1, 0x4e,
    0x31, 0x8e, 0x8c, 0xb5, 0xc1, 0x87, 0x62, 0xa0, 0x7c, 0xd2, 0x3c, 0x0d, 0x99, 0xd9, 0xdb, 0xf2,
    0x25, 0x10, 0x63, 0xf9, 0xb8, 0x5a, 0x5b, 0xdf, 0xc5, 0x26, 0x74, 0x1c, 0x0b, 0x81, 0x67, 0x7f,
    0x67, 0xa3, 0x48, 0x16, 0x2a, 0xc7, 0xcb, 0xa3, 0xd3, 0x00, 0x4b, 0x82, 0x9e, 0xbe, 0x88, 0xa1,
    0xcb, 0xf0, 0x48, 0xa3, 0xbf, 0x31, 0x08, 0x22, 0x15, 0xe3, 0xaf, 0x0c, 0x23, 0xcd, 0x7a, 0x7c,
    0x44, 0xf5, 0x8b, 0x80, 0xe6, 0x91, 0xa8, 0xc3, 0x5b, 0xa8, 0xb5, 0xa6, 0xed, 0x8a, 0xca, 0x58,
    0xb5, 0x0b, 0x8e, 0xb6, 0x86, 0x4f, 0x26, 0x76, 0xbe, 0x35, 0x5e, 0xfd, 0x44, 0xd0, 0x6b, 0x47,
    0x1b, 0x02, 0xf2, 0xa2, 0x82, 0x90, 0x0c, 0x60, 0xfe, 0xb3, 0xce, 0xcc, 0xb4, 0xe4, 0x81, 0x01,
    0x87, 0x87, 0x6a, 0x5f, 0xc6, 0x9d, 0x35, 0x59, 0xc0, 0x61, 0x06, 0x5d, 0x2d, 0xf5, 0x4c, 0x7d,
    0xb3, 0xee, 0x78, 0x13, 0x7e, 0x28, 0xc4, 0xef, 0x86, 0x13, 0xdc, 0x6c, 0x7f, 0xaf, 0x70, 0x68,
    0xa8, 0x68, 0xb1, 0xdf, 0xb8, 0xa6, 0xc7, 0x6f, 0xbe, 0x71, 0x53, 0xd5, 0xb5, 0xd9, 0x4b, 0x38,
    0xa6, 0x16, 0x3f, 0x4a, 0x28, 0xaf, 0x16, 0x2a, 0x13, 0x72, 0x21, 0x24, 0xa7, 0xf7, 0x4e, 0x72,
    0x3f, 0xbf, 0xb9, 0x24, 0xaf, 0x4d, 0x3b, 0x96, 0x59, 0x6e, 0x43, 0xaf, 0x5b, 0x8b, 0xf3, 0x2d,
    0x2c, 0x80, 0xda, 0x41, 0xf2, 0x14, 0x05, 0x56, 0x92, 0xee, 0xec, 0x36, 0xc2, 0x1e, 0xff, 0x87,
    0x19, 0x42, 0xb8, 0x4f, 0xa0, 0x21, 0x1b, 0xa7, 0x98, 0x34, 0x15, 0x9d, 0x6c, 0x5b, 0x89, 0x20,
    0xbf, 0x24, 0x5d, 0xd2, 0x5e, 0x76, 0x65, 0xb5, 0x31, 0xca, 0xb8, 0x66, 0x54, 0xd2, 0x45, 0xc0,
    0xce, 0x96, 0x2e, 0xd1, 0x8f, 0x35, 0x5e, 0xd9, 0x4d, 0x79, 0x09, 0x9b, 0xad, 0xa5, 0x99, 0x00,
    0x50, 0x9c, 0x76, 0x7a, 0x47, 0x83, 0x50, 0x82, 0xb8, 0x3a, 0x70, 0x3e, 0x32, 0xf7, 0xc8, 0xa7,
    0xca, 0x27, 0x77, 0x4a, 0xce, 0xc1, 0x7b, 0x78, 0xfa, 0x46, 0x3b, 0x56, 0x0d, 0x89, 0x5b, 0x6c,
    0x85, 0x91, 0xf3, 0x15, 0x9b, 0x5b, 0xb2, 0x18, 0xd0, 0x6f, 0x42, 0x92, 0x21, 0x9a, 0x64, 0xd2,
    0x29, 0x47, 0x53, 0x1a, 0xb6, 0x94, 0x6d, 0x49, 0xa8, 0x7b, 0x05, 0xfc, 0xf7, 0x9c, 0x1c, 0x16,
    0xf0, 0x22, 0x9c, 0x99, 0xb1, 0xd9, 0x17, 0xb6, 0x7a, 0x6b, 0x19, 0xa3, 0x61, 0x1c, 0xa7, 0x44,
    0x28, 0x79, 0x4d, 0xdc, 0x3b, 0x93, 0x17, 0xd3, 0x65, 0x64, 0x40, 0xa6, 0x2e, 0x30, 0x2b, 0xf3,
    0xfe, 0x87, 0xe8, 0xcf, 0x28, 0x5c, 0xd7, 0x00, 0x31, 0x8c, 0x78, 0x68, 0xa2, 0x8b, 0xdc, 0xca,
    0x65, 0x6a, 0x6e, 0x7c, 0x37, 0x20, 0xfb, 0x92, 0xc1, 0x40, 0x1b, 0x43, 0xca, 0x56, 0x9b, 0x0d,
    0xe4, 0x25, 0x06, 0xc9, 0xe8, 0x19, 0xdc, 0x8c, 0x40, 0xfe, 0x83, 0xe9, 0xa1, 0x2d, 0xa4, 0xde,
    0xe0, 0xb0, 0xd0, 0x91, 0x84, 0x80, 0x34, 0x3a, 0xce, 0xd2, 0xdc, 0x2b, 0xad, 0xdf, 0xe8, 0x18,
    0x0d, 0x2e, 0x6d, 0x6b, 0x44, 0x51, 0xad, 0x64, 0xfa, 0x42, 0x5c, 0x1d, 0x92, 0x68, 0xdc, 0x90,
    0xef, 0xf4, 0x24, 0xa5, 0xa2, 0x1e, 0x4c, 0x06, 0xa6, 0x50, 0x09, 0x53, 0xdd, 0x62, 0x7b, 0x59,
    0x6c, 0x2d, 0xf5, 0x0a, 0xd1, 0xa1, 0x29, 0xa2, 0x22, 0x55, 0x0d, 0x7b, 0x02, 0x99, 0xce, 0x22,
    0x60, 0x3c, 0x34, 0x2c, 0xed, 0xcd, 0xb6, 0x07, 0x6f, 0xa6, 0x3c, 0x47, 0x65, 0x5a, 0xf3, 0x10,
    0x51, 0xd6, 0xde, 0x87, 0x4d, 0xdc, 0xde, 0x34, 0xc2, 0x96, 0xb7, 0xe7, 0xfe, 0x5c, 0xba, 0x84,
    0xf2, 0xe8, 0x85, 0x0d, 0xf8, 0x0c, 0x23, 0x99, 0x77, 0xfd, 0x39, 0x83, 0x2a, 0x22, 0x6f, 0x01,
    0x7c, 0x29, 0xc3, 0xe1, 0x5c, 0xca, 0xd5, 0xfe, 0x67, 0xb1, 0x57, 0x16, 0xdf, 0x3d, 0x95, 0x35,
    0x90, 0x5b, 0xe6, 0x73, 0x3e, 0x46, 0xb7, 0xae, 0x60, 0x62, 0x22, 0xba, 0xe7, 0x5c, 0x01, 0xb4,
    0xa9, 0xbd, 0x6c, 0xfd, 0x9f, 0x1f, 0x7d, 0x54, 0xc2, 0x62, 0x42, 0x24, 0xe7, 0x63, 0x53, 0x0b,
    0x91, 0xc5, 0xeb, 0xfd, 0xbb, 0xfa, 0x7a, 0xdf, 0xe9, 0x7a, 0xcd, 0x63, 0xbb, 0x50, 0xa0, 0x07,
    0xf7, 0xdd, 0x21, 0xe0, 0x94, 0x48, 0xb3, 0x22, 0xb9, 0x50, 0xce, 0x2a, 0xd5, 0x0a, 0x06, 0xa7,
    0x02, 0x0f, 0x2c, 0xde, 0x2e, 0x36, 0xe1, 0x69, 0x38, 0x2b, 0xbc, 0x73, 0x0c, 0x81, 0x47, 0x3b,
    0x9e, 0x5e, 0xf4, 0x27, 0x99, 0xb9, 0x3d, 0x9d, 0x0f, 0x65, 0x3c, 0x2e, 0x0c, 0xf3, 0xbe, 0xd9,
    0x8a, 0x7b, 0x47, 0xa6, 0xcd, 0x2c, 0x83, 0x42, 0x20, 0xad, 0x66, 0x46, 0x9c, 0x73, 0xe4, 0x05,
    0xb2, 0x96, 0x54, 0xc5, 0x0d, 0xf9, 0x45, 0x22, 0x60, 0xf8, 0xda, 0x38, 0x36, 0xb8, 0x4a, 0x0b,
    0x51, 0x94, 0x70, 0xbb, 0x88, 0xab, 0xc4, 0x6d, 0xd8, 0xf8, 0x20, 0x04, 0xc8, 0xf6, 0x46, 0x78,
    0x73, 0x29, 0x3a, 0x37, 0x92, 0x7e, 0x39, 0xc2, 0x4f, 0x48, 0x99, 0xcd, 0x19, 0x25, 0x55, 0x95,
    0x57, 0x43, 0xfd, 0x12, 0x6c, 0xff, 0xad, 0xc6, 0xfa, 0xbe, 0xb4, 0xf3, 0x85, 0x7b, 0xdd, 0x08,
    0xb8, 0xf4, 0x77, 0xa9, 0xe7, 0xa9, 0x8d, 0xd9, 0x6a, 0x8a, 0x7e, 0x63, 0x87, 0x7a, 0x95, 0x93,
    0xde, 0xa6, 0x40, 0xbe, 0xed, 0x67, 0x7c, 0xad, 0x08, 0x8f, 0x73, 0xb2, 0xe1, 0x06, 0xb5, 0x61,
    0x4d, 0xfe, 0x7c, 0xe9, 0xf6, 0x9c, 0xc7, 0xfb, 0xba, 0x4a, 0x78, 0x5e, 0x3b, 0x3b, 0xea, 0x6f,
    0xea, 0x13, 0x72, 0x12, 0xc9, 0xa2, 0x21, 0x9c, 0xfc, 0x16, 0x27, 0xaf, 0x51, 0x82, 0x01, 0x0f,
};
const std::array<uint8_t, 32 * TEST_VEC_LEN> enc_poly256_vec_products = {
    0xf1, 0x9f, 0xb7, 0x1e, 0xae, 0x66, 0x97, 0x1d, 0xc6, 0xd8, 0x74, 0x29, 0xe8, 0xac, 0x33, 0xab,
    0xbc, 0xf1, 0x48, 0xc2, 0xc9, 0x5c, 0x7f, 0x46, 0xfd, 0xa5, 0x53, 0x6a, 0x82, 0x0b, 0xce, 0xaf,
    0x0d, 0x47, 0x84, 0x0f, 0x40, 0xa8, 0x2e, 0xc4, 0x71, 0x9a, 0xa8, 0x49, 0xe1, 0xd7, 0x92, 0x4b,
    0x25, 0x53, 0x8d, 0x1a, 0x98, 0xe3, 0xe6, 0x25, 0xae, 0x73, 0x89, 0x91, 0x77, 0x1e, 0x6b, 0x01,
    0x50, 0x1c, 0xee, 0x85, 0x37, 0x97, 0x7e, 0x20, 0xa7, 0x31, 0x3f, 0x56, 0xe5, 0x71, 0x1e, 0x9d,
    0x11, 0x5e, 0xab, 0x00, 0xc0, 0x4d, 0xf2, 0xf4, 0xbf, 0x94, 0x63, 0x52, 0x05, 0x5c, 0x5f, 0xe4,
    0x02, 0xa2, 0x68, 0x0f, 0xb2, 0xeb, 0x24, 0x94, 0xe1, 0x91, 0x43, 0x0b, 0x58, 0x7f, 0xd4, 0x84,
    0xda, 0x85, 0xdc, 0x79, 0xc6, 0xce, 0xf6, 0xd0, 0x06, 0xb0, 0x7b, 0x02, 0x5e, 0xd9, 0x13, 0x27,
    0xc9, 0x95, 0x78, 0x11, 0x58, 0x11, 0xe2, 0xda, 0x1a, 0x85, 0x38, 0xe3, 0xa4, 0x34, 0x9c, 0xc6,
    0x32, 0x14, 0xd5, 0x9d, 0x80, 0x64, 0xb3, 0x14, 0xa8, 0x7f, 0x14, 0x08, 0xf7, 0x50, 0x9b, 0x96,
    0x24, 0x05, 0xfe, 0x3f, 0xb1, 0x59, 0x46, 0x10, 0x10, 0x52, 0x58, 0xfa, 0x20, 0xb9, 0xe2, 0x68,
    0xc8, 0x7e, 0x00, 0xd3, 0xef, 0x04, 0x01, 0xbb, 0x10, 0xea, 0x0a, 0x6d, 0x03, 0xe1, 0x5e, 0x55,
    0x77, 0x32, 0x01, 0xca, 0xd6, 0x7f, 0xe1, 0x75, 0x14, 0xa7, 0x9e, 0xd9, 0x30, 0xee, 0x05, 0xa1,
    0x4d, 0x31, 0x25, 0x18, 0xdd, 0xd4, 0x4e, 0x8b, 0xeb, 0x0b, 0xc9, 0x22, 0x48, 0x7a, 0x2a, 0xd2,
    0xc5, 0x55, 0xc5, 0xe5, 0x44, 0x0b, 0x82, 0x0f, 0x86, 0x8c, 0x86, 0xfe, 0xd1, 0x9e, 0x5e, 0x59,
    0x35, 0x6d, 0xa5, 0x45, 0xae, 0x4c, 0x2d, 0x48, 0x3c, 0xb6, 0xf3, 0x2e, 0xa8, 0x6b, 0xd4, 0x57,
    0x13, 0x0d, 0x7e, 0x48, 0x85, 0xa9, 0x0e, 0x27, 0x49, 0x50, 0xc9, 0xa4, 0xee, 0xc7, 0xc5, 0xe2,
    0x37, 0x3e, 0x1d, 0x3e, 0x0a, 0x49, 0x40, 0x8f, 0xdf, 0x07, 0x6a, 0xcf, 0x2a, 0x27, 0xd5, 0x93,
    0x3d, 0x67, 0xd9, 0x36, 0x1c, 0xd3, 0x06, 0xf2, 0xac, 0x95, 0xa2, 0x87, 0xa6, 0x44, 0xb6, 0x8c,
    0x48, 0x61, 0xfe, 0x65, 0xcf, 0xe8, 0xe4, 0xb9, 0xdb, 0x39, 0x5d, 0xe7, 0x89, 0xcd, 0xec, 0x16,
    0x4e, 0xd3, 0xc7, 0xd6, 0x9d, 0x34, 0x2b, 0x5a, 0x8d, 0x01, 0x2d, 0x5b, 0x4d, 0xbd, 0x26, 0x67,
    0x00, 0xb4, 0x2a, 0x97, 0x6c, 0xba, 0xb1, 0xdc, 0x29, 0x4c, 0x98, 0x70, 0xe3, 0x18, 0x99, 0xe6,
    0xe8, 0x38, 0xd3, 0x12, 0x05, 0xb3, 0x26, 0xa5, 0x7d, 0x48, 0xcd, 0x2a, 0x45, 0xd2, 0xa5, 0xca,
    0x1a, 0xa3, 0xb8, 0xb0, 0xc2, 0x8d, 0x4b, 0x52, 0x51, 0xde, 0x28, 0x48, 0xb9, 0x1f, 0x4c, 0x85,
    0xf7, 0x08, 0x7c, 0xf6, 0xb6, 0x27, 0x81, 0x80, 0xb7, 0x09, 0xdb, 0x22, 0xd1, 0x31, 0x68, 0x34,
    0x49, 0x7e, 0xcc, 0x6b, 0xe2, 0xee, 0x93, 0x08, 0x68, 0x09, 0x9e, 0x1a, 0x52, 0xb4, 0x68, 0xd8,
    0x7a, 0x0c, 0xf5, 0x77, 0xd2, 0x40, 0x29, 0x9a, 0x0f, 0x3e, 0x1b, 0x8a, 0xd4, 0x64, 0x51, 0xd4,
    0x9e, 0xc0, 0x77, 0x34, 0xf8, 0x06, 0xb8, 0x7d, 0x9b, 0x17, 0x21, 0x7a, 0x70, 0x3e, 0x72, 0x04,
    0x87, 0x74, 0x66, 0x21, 0x4d, 0xe7, 0x4c, 0x4a, 0xe0, 0xa7, 0x2e, 0x15, 0x47, 0xcd, 0x7b, 0x35,
    0xff, 0xee, 0xdd, 0x48, 0x9d, 0xf4, 0x9c, 0xd3, 0x8b, 0x89, 0x2a, 0x9d, 0x2a, 0x04, 0xaf, 0x3d,
    0x08, 0xfd, 0x9e, 0x39, 0xb2, 0x03, 0xd4, 0xab, 0x8b, 0x56, 0xc4, 0x6a, 0x43, 0x27, 0x7c, 0x16,
    0x6f, 0x2e, 0xf7, 0x63, 0x6b, 0x33, 0x64, 0x43, 0xe5, 0xef, 0x71, 0xd9, 0x7f, 0x81, 0x8b, 0xb4,
};

const std::array<uint8_t, 16 * TEST_VEC_LEN> enc_poly64_vec_as_poly128_xs = {
    0x3c, 0x7e, 0x08, 0x15, 0x7b, 0x5b, 0xad, 0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xc8, 0x3b, 0xc0, 0x21, 0x35, 0x17, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xb8, 0x75, 0xed, 0x42, 0xa0, 0x59, 0x54, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x8e, 0xb4, 0x13, 0xb8, 0xc3, 0xe5, 0x80, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x36, 0x9a, 0x5e, 0x03, 0xc1, 0x3b, 0x13, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7c, 0x7a, 0xbe, 0x4f, 0xc6, 0x3d, 0x5b, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xd0, 0x66, 0x9c, 0xf7, 0x8c, 0x27, 0xd3, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x5c, 0xbe, 0x78, 0x8e, 0xb1, 0x32, 0x08, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xc1, 0x32, 0xc1, 0xd8, 0xa2, 0x79, 0x9c, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x32, 0x3a, 0xb5, 0x56, 0x8c, 0x8c, 0x17, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xa7, 0xe3, 0x6a, 0x51, 0x07, 0xc2, 0xea, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x5d, 0x40, 0x52, 0x37, 0x0f, 0x9c, 0xd5, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xae, 0x08, 0x81, 0x24, 0x40, 0x0d, 0x65, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7e, 0xc2, 0xca, 0xe6, 0x30, 0x5a, 0x24, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xa0, 0x30, 0x10, 0xc7, 0x02, 0xc2, 0x0b, 0x8b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xbf, 0xac, 0x6a, 0x32, 0x6e, 0x5e, 0x14, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
const std::array<uint8_t, 24 * TEST_VEC_LEN> enc_poly128_vec_as_poly192_xs = {
    0x7c, 0x5f, 0x30, 0xf4, 0xb7, 0xe9, 0xd3, 0xde, 0x16, 0x90, 0x11, 0xbc, 0x1e, 0x35, 0xd6, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xf5, 0xab, 0x75, 0xd2, 0x96, 0x23, 0x07, 0xfc, 0x53, 0xaf, 0xef, 0x14, 0x7d, 0x7c, 0x8f, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xc4, 0x29, 0x00, 0xfb, 0x94, 0x24, 0x80, 0x7f, 0x8b, 0x52, 0x9f, 0xf3, 0x3c, 0xf5, 0xd9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x5f, 0xca, 0x80, 0x4f, 0x18, 0xd5, 0x1c, 0x38, 0xa5, 0x08, 0x4b, 0x30, 0xfc, 0x10, 0xb3, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x4d, 0x28, 0xdd, 0x65, 0xb4, 0x2f, 0x82, 0x45, 0x55, 0xc1, 0x00, 0x1d, 0x5c, 0xed, 0xef, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x85, 0xe6, 0x01, 0xb2, 0x8f, 0xc4, 0x0a, 0x40, 0x14, 0xd1, 0xf6, 0xdd, 0xb2, 0x46, 0x44, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0xf3, 0x06, 0x4d, 0x96, 0x89, 0xfd, 0x53, 0xf6, 0x33, 0xda, 0x8c, 0x28, 0xd6, 0x81, 0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x89, 0x4f, 0x92, 0x8f, 0xfe, 0x82, 0xa8, 0x83, 0xc9, 0xb7, 0xa8, 0xd3, 0x91, 0x52, 0x72, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xf4, 0x9d, 0xff, 0xbc, 0x34, 0x34, 0x06, 0x80, 0x2e, 0x49, 0x47, 0x51, 0xa0, 0xb8, 0xd8, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x77, 0x15, 0xc8, 0x78, 0x2b, 0xe8, 0xc2, 0xfc, 0xc7, 0xb3, 0x88, 0x04, 0xf1, 0x6b, 0xe5, 0xdf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xee, 0xae, 0x28, 0xe0, 0x26, 0xc9, 0x0a, 0x02, 0x18, 0x48, 0xc2, 0x1c, 0x90, 0x5b, 0xdc, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x72, 0xda, 0xbd, 0x03, 0x2b, 0xd4, 0x61, 0x9e, 0x62, 0x88, 0x19, 0xba, 0xe5, 0x9f, 0x76, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x2f, 0xda, 0x18, 0x12, 0xf8, 0x43, 0x82, 0xd7, 0x41, 0xf6, 0xfa, 0x44, 0x40, 0x3a, 0x3d, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x70, 0x69, 0xf9, 0x93, 0x8e, 0xbf, 0xaa, 0xc3, 0xcb, 0xd6, 0x2d, 0x7b, 0x23, 0x54, 0x42, 0xe5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xda, 0xe0, 0x74, 0x50, 0xe5, 0xd8, 0x55, 0x2d, 0xba, 0x9b, 0x94, 0x50, 0x5a, 0x4b, 0xef, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdc, 0x04, 0x77, 0x3a, 0x19, 0x46, 0xee, 0xa4, 0x26, 0x58, 0x08, 0x16, 0x07, 0xda, 0x82, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
const std::array<uint8_t, 32 * TEST_VEC_LEN> enc_poly128_vec_as_poly256_xs = {
    0x7c, 0x5f, 0x30, 0xf4, 0xb7, 0xe9, 0xd3, 0xde, 0x16, 0x90, 0x11, 0xbc, 0x1e, 0x35, 0xd6, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xf5, 0xab, 0x75, 0xd2, 0x96, 0x23, 0x07, 0xfc, 0x53, 0xaf, 0xef, 0x14, 0x7d, 0x7c, 0x8f, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xff, 0xc4, 0x29, 0x00, 0xfb, 0x94, 0x24, 0x80, 0x7f, 0x8b, 0x52, 0x9f, 0xf3, 0x3c, 0xf5, 0xd9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x5f, 0xca, 0x80, 0x4f, 0x18, 0xd5, 0x1c, 0x38, 0xa5, 0x08, 0x4b, 0x30, 0xfc, 0x10, 0xb3, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x4d, 0x28, 0xdd, 0x65, 0xb4, 0x2f, 0x82, 0x45, 0x55, 0xc1, 0x00, 0x1d, 0x5c, 0xed, 0xef, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x85, 0xe6, 0x01, 0xb2, 0x8f, 0xc4, 0x0a, 0x40, 0x14, 0xd1, 0xf6, 0xdd, 0xb2, 0x46, 0x44, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0xf3, 0x06, 0x4d, 0x96, 0x89, 0xfd, 0x53, 0xf6, 0x33, 0xda, 0x8c, 0x28, 0xd6, 0x81, 0xd1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x89, 0x4f, 0x92, 0x8f, 0xfe, 0x82, 0xa8, 0x83, 0xc9, 0xb7, 0xa8, 0xd3, 0x91, 0x52, 0x72, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xf4, 0x9d, 0xff, 0xbc, 0x34, 0x34, 0x06, 0x80, 0x2e, 0x49, 0x47, 0x51, 0xa0, 0xb8, 0xd8, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x77, 0x15, 0xc8, 0x78, 0x2b, 0xe8, 0xc2, 0xfc, 0xc7, 0xb3, 0x88, 0x04, 0xf1, 0x6b, 0xe5, 0xdf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xee, 0xae, 0x28, 0xe0, 0x26, 0xc9, 0x0a, 0x02, 0x18, 0x48, 0xc2, 0x1c, 0x90, 0x5b, 0xdc, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x72, 0xda, 0xbd, 0x03, 0x2b, 0xd4, 0x61, 0x9e, 0x62, 0x88, 0x19, 0xba, 0xe5, 0x9f, 0x76, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x2f, 0xda, 0x18, 0x12, 0xf8, 0x43, 0x82, 0xd7, 0x41, 0xf6, 0xfa, 0x44, 0x40, 0x3a, 0x3d, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x70, 0x69, 0xf9, 0x93, 0x8e, 0xbf, 0xaa, 0xc3, 0xcb, 0xd6, 0x2d, 0x7b, 0x23, 0x54, 0x42, 0xe5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xda, 0xe0, 0x74, 0x50, 0xe5, 0xd8, 0x55, 0x2d, 0xba, 0x9b, 0x94, 0x50, 0x5a, 0x4b, 0xef, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdc, 0x04, 0x77, 0x3a, 0x19, 0x46, 0xee, 0xa4, 0x26, 0x58, 0x08, 0x16, 0x07, 0xda, 0x82, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
const std::array<uint8_t, 32 * TEST_VEC_LEN> enc_poly192_vec_as_poly256_xs = {
    0xbb, 0x0b, 0xc7, 0xc5, 0x05, 0xd6, 0x28, 0x12, 0x8b, 0xcb, 0x15, 0x3f, 0x9f, 0xd5, 0x79, 0xd6, 0xf7, 0x49, 0xd3, 0x92, 0x4a, 0xae, 0xd0, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xa6, 0xe8, 0x0c, 0x2e, 0xa2, 0x12, 0x46, 0xf4, 0x50, 0xe7, 0xd5, 0xb3, 0x05, 0xe1, 0xb6, 0xb2, 0x22, 0x67, 0xb2, 0x0d, 0x6d, 0x14, 0x79, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x5d, 0x19, 0x75, 0xd9, 0x70, 0x7e, 0xc7, 0x32, 0x8d, 0xce, 0x4f, 0x2f, 0x01, 0x45, 0x39, 0xbf, 0x78, 0xb4, 0xac, 0xc1, 0x4a, 0xd5, 0xbf, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x55, 0x5d, 0xcf, 0x90, 0xa3, 0x00, 0x68, 0x59, 0xe2, 0x54, 0x63, 0x19, 0xac, 0xb5, 0x79, 0x51, 0xa0, 0x6b, 0xae, 0xfc, 0xcb, 0x27, 0x11, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x63, 0x9a, 0xc8, 0x9e, 0xf3, 0x81, 0x9a, 0x8e, 0x23, 0x2f, 0xd4, 0xc7, 0x7d, 0xa8, 0xcb, 0x9a, 0x67, 0xe9, 0x58, 0xed, 0xba, 0x7e, 0xe3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0xf6, 0xfb, 0x73, 0x18, 0xc5, 0x29, 0xc5, 0x10, 0x82, 0xa4, 0xb8, 0x73, 0x25, 0xb4, 0x14, 0xce, 0xc1, 0x1b, 0x95, 0xc6, 0x17, 0xaf, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x76, 0x5a, 0x78, 0x99, 0x74, 0x2c, 0x3a, 0x35, 0xf0, 0x3d, 0xf6, 0xcc, 0x2d, 0x1b, 0x6e, 0x8c, 0x1f, 0x71, 0xa1, 0xc8, 0x19, 0xd3, 0xc9, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x44, 0x80, 0x52, 0x65, 0x2d, 0x96, 0xd5, 0x6a, 0x5f, 0xaa, 0x44, 0x4c, 0x51, 0xf7, 0x4c, 0x31, 0x8b, 0xea, 0xc6, 0x7a, 0xd3, 0xb8, 0x84, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdc, 0x68, 0x78, 0x9f, 0x93, 0xf6, 0xfb, 0x5f, 0x97, 0xb9, 0x2a, 0x73, 0xa0, 0x96, 0xe7, 0x9f, 0xf9, 0xfa, 0xe7, 0x6f, 0xb2, 0xe0, 0x4f, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x29, 0xee, 0x4b, 0xca, 0xfa, 0x9c, 0xd1, 0x1c, 0x18, 0xa6, 0x89, 0x08, 0x41, 0x75, 0x22, 0x5b, 0xbb, 0xca, 0x72, 0x38, 0xd5, 0xaa, 0x41, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xda, 0x5a, 0x39, 0x97, 0xfd, 0x05, 0x04, 0x22, 0x6d, 0x6a, 0xd5, 0x8e, 0xc5, 0x71, 0xfb, 0x92, 0x2f, 0x05, 0x62, 0xcc, 0xa9, 0x8a, 0xde, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x59, 0xcd, 0x05, 0x6d, 0x9e, 0xbd, 0x11, 0x36, 0x29, 0x8d, 0x4a, 0x8d, 0xbf, 0x71, 0x9d, 0x58, 0x06, 0xa1, 0xc6, 0x59, 0xb8, 0x2e, 0x91, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xae, 0xe6, 0x5d, 0x35, 0x0b, 0x54, 0xae, 0x26, 0xc2, 0x3c, 0xd8, 0xb1, 0x68, 0x58, 0xd6, 0x27, 0x5f, 0x95, 0xaa, 0xa8, 0xe5, 0xa1, 0x8d, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x57, 0x00, 0xcd, 0x15, 0x78, 0x92, 0xc9, 0x8b, 0xbb, 0xc1, 0x8e, 0x6d, 0x2e, 0xa3, 0x50, 0x6d, 0xb0, 0xc4, 0x53, 0x32, 0x9f, 0x5e, 0x64, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x9a, 0x1a, 0x21, 0x46, 0x65, 0xfc, 0x86, 0xf1, 0x74, 0x5a, 0xbc, 0x17, 0xdb, 0xff, 0x6c, 0x83, 0xea, 0x50, 0x33, 0xf2, 0x56, 0x15, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x22, 0x54, 0xf6, 0xbc, 0x82, 0xf4, 0x01, 0x4c, 0x26, 0x9f, 0x07, 0x91, 0xeb, 0xef, 0x08, 0x22, 0x83, 0x5b, 0x2e, 0xb0, 0x2c, 0xee, 0x28, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
const std::array<uint8_t, 48 * TEST_VEC_LEN> enc_poly192_vec_as_poly384_xs = {
    0xbb, 0x0b, 0xc7, 0xc5, 0x05, 0xd6, 0x28, 0x12, 0x8b, 0xcb, 0x15, 0x3f, 0x9f, 0xd5, 0x79, 0xd6, 0xf7, 0x49, 0xd3, 0x92, 0x4a, 0xae, 0xd0, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xa6, 0xe8, 0x0c, 0x2e, 0xa2, 0x12, 0x46, 0xf4, 0x50, 0xe7, 0xd5, 0xb3, 0x05, 0xe1, 0xb6, 0xb2, 0x22, 0x67, 0xb2, 0x0d, 0x6d, 0x14, 0x79, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x5d, 0x19, 0x75, 0xd9, 0x70, 0x7e, 0xc7, 0x32, 0x8d, 0xce, 0x4f, 0x2f, 0x01, 0x45, 0x39, 0xbf, 0x78, 0xb4, 0xac, 0xc1, 0x4a, 0xd5, 0xbf, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x55, 0x5d, 0xcf, 0x90, 0xa3, 0x00, 0x68, 0x59, 0xe2, 0x54, 0x63, 0x19, 0xac, 0xb5, 0x79, 0x51, 0xa0, 0x6b, 0xae, 0xfc, 0xcb, 0x27, 0x11, 0xf7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x63, 0x9a, 0xc8, 0x9e, 0xf3, 0x81, 0x9a, 0x8e, 0x23, 0x2f, 0xd4, 0xc7, 0x7d, 0xa8, 0xcb, 0x9a, 0x67, 0xe9, 0x58, 0xed, 0xba, 0x7e, 0xe3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x42, 0xf6, 0xfb, 0x73, 0x18, 0xc5, 0x29, 0xc5, 0x10, 0x82, 0xa4, 0xb8, 0x73, 0x25, 0xb4, 0x14, 0xce, 0xc1, 0x1b, 0x95, 0xc6, 0x17, 0xaf, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x76, 0x5a, 0x78, 0x99, 0x74, 0x2c, 0x3a, 0x35, 0xf0, 0x3d, 0xf6, 0xcc, 0x2d, 0x1b, 0x6e, 0x8c, 0x1f, 0x71, 0xa1, 0xc8, 0x19, 0xd3, 0xc9, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x44, 0x80, 0x52, 0x65, 0x2d, 0x96, 0xd5, 0x6a, 0x5f, 0xaa, 0x44, 0x4c, 0x51, 0xf7, 0x4c, 0x31, 0x8b, 0xea, 0xc6, 0x7a, 0xd3, 0xb8, 0x84, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xdc, 0x68, 0x78, 0x9f, 0x93, 0xf6, 0xfb, 0x5f, 0x97, 0xb9, 0x2a, 0x73, 0xa0, 0x96, 0xe7, 0x9f, 0xf9, 0xfa, 0xe7, 0x6f, 0xb2, 0xe0, 0x4f, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x29, 0xee, 0x4b, 0xca, 0xfa, 0x9c, 0xd1, 0x1c, 0x18, 0xa6, 0x89, 0x08, 0x41, 0x75, 0x22, 0x5b, 0xbb, 0xca, 0x72, 0x38, 0xd5, 0xaa, 0x41, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xda, 0x5a, 0x39, 0x97, 0xfd, 0x05, 0x04, 0x22, 0x6d, 0x6a, 0xd5, 0x8e, 0xc5, 0x71, 0xfb, 0x92, 0x2f, 0x05, 0x62, 0xcc, 0xa9, 0x8a, 0xde, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x59, 0xcd, 0x05, 0x6d, 0x9e, 0xbd, 0x11, 0x36, 0x29, 0x8d, 0x4a, 0x8d, 0xbf, 0x71, 0x9d, 0x58, 0x06, 0xa1, 0xc6, 0x59, 0xb8, 0x2e, 0x91, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xae, 0xe6, 0x5d, 0x35, 0x0b, 0x54, 0xae, 0x26, 0xc2, 0x3c, 0xd8, 0xb1, 0x68, 0x58, 0xd6, 0x27, 0x5f, 0x95, 0xaa, 0xa8, 0xe5, 0xa1, 0x8d, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x57, 0x00, 0xcd, 0x15, 0x78, 0x92, 0xc9, 0x8b, 0xbb, 0xc1, 0x8e, 0x6d, 0x2e, 0xa3, 0x50, 0x6d, 0xb0, 0xc4, 0x53, 0x32, 0x9f, 0x5e, 0x64, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x9a, 0x1a, 0x21, 0x46, 0x65, 0xfc, 0x86, 0xf1, 0x74, 0x5a, 0xbc, 0x17, 0xdb, 0xff, 0x6c, 0x83, 0xea, 0x50, 0x33, 0xf2, 0x56, 0x15, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x22, 0x54, 0xf6, 0xbc, 0x82, 0xf4, 0x01, 0x4c, 0x26, 0x9f, 0x07, 0x91, 0xeb, 0xef, 0x08, 0x22, 0x83, 0x5b, 0x2e, 0xb0, 0x2c, 0xee, 0x28, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
const std::array<uint8_t, 40 * TEST_VEC_LEN> enc_poly256_vec_as_poly320_xs = {
    0x02, 0xad, 0x84, 0x5b, 0xc6, 0x2b, 0x60, 0x1a, 0x8e, 0x90, 0xf8, 0xaf, 0xf9, 0x55, 0x39, 0xe1, 0xbd, 0x4d, 0xf4, 0x6d, 0x7d, 0x52, 0x85, 0xe7, 0x6d, 0x55, 0xe1, 0x92, 0x3a, 0x30, 0x06, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xad, 0x94, 0x45, 0x2c, 0x9d, 0xc1, 0xf5, 0x6e, 0x60, 0x75, 0xed, 0x5b, 0x1a, 0xb1, 0x3e, 0xd6, 0xec, 0xda, 0x20, 0x9f, 0x3c, 0x2b, 0x55, 0x7c, 0x78, 0x6d, 0x11, 0x43, 0xf2, 0x5d, 0x2a, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xba, 0x5d, 0xf5, 0x5e, 0x1b, 0x2d, 0xbf, 0xaa, 0xcc, 0x6f, 0x67, 0x66, 0x9d, 0x7e, 0x24, 0x33, 0xe0, 0x81, 0x65, 0x85, 0x72, 0xdd, 0xe6, 0x88, 0xa5, 0x00, 0x45, 0x6b, 0xe3, 0x00, 0x81, 0x95, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x56, 0xba, 0x21, 0x10, 0x77, 0x2f, 0x5b, 0xf8, 0x91, 0xc6, 0x15, 0x9c, 0x24, 0x71, 0x0c, 0x4c, 0xe6, 0x9e, 0x61, 0x81, 0x91, 0xe5, 0x07, 0x60, 0x2f, 0xe7, 0x84, 0xd8, 0x36, 0x82, 0x71, 0xd9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xc9, 0x27, 0xe9, 0x9e, 0x1f, 0x17, 0xae, 0xc2, 0xca, 0x2c, 0x0b, 0xf4, 0x40, 0x27, 0x65, 0x09, 0xe8, 0xa0, 0x66, 0xc1, 0x44, 0xa8, 0xb7, 0x6c, 0xd7, 0xe0, 0x84, 0xa0, 0x8d, 0x10, 0xfb, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xb6, 0x92, 0x9b, 0xfc, 0xeb, 0x68, 0xbe, 0x13, 0x68, 0x7f, 0x42, 0xf4, 0x0f, 0x20, 0xb5, 0x47, 0xeb, 0x99, 0xa7, 0x18, 0xfd, 0xa4, 0xf2, 0x33, 0xe1, 0x72, 0x6f, 0xc3, 0x86, 0x61, 0xb2, 0x8a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x11, 0x81, 0xf3, 0xe2, 0xd2, 0x09, 0x86, 0x4c, 0xef, 0xef, 0x45, 0x18, 0x16, 0x80, 0x89, 0x32, 0x47, 0x27, 0xec, 0xd4, 0x80, 0x93, 0xcb, 0x06, 0xc4, 0x36, 0x9f, 0x31, 0x7f, 0xff, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x97, 0x0d, 0x18, 0x56, 0x04, 0xcd, 0x4e, 0x3f, 0xa9, 0xb8, 0x11, 0x87, 0x9b, 0x9a, 0x34, 0x3d, 0x78, 0xb9, 0x06, 0xde, 0xf5, 0x2f, 0xed, 0x2e, 0x94, 0x1c, 0xc5, 0x1b, 0x7c, 0x0b, 0x06, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xb4, 0x7f, 0xe7, 0x86, 0x01, 0xc5, 0xb2, 0x1b, 0xaf, 0x45, 0x43, 0x9d, 0x24, 0xe9, 0xcd, 0x66, 0xf6, 0x35, 0x39, 0x15, 0x3a, 0x41, 0x1f, 0x43, 0xa8, 0xc7, 0x29, 0x3c, 0x2e, 0xc3, 0xac, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0xbc, 0x89, 0xfe, 0xee, 0xef, 0x2c, 0xdf, 0x54, 0x6d, 0x23, 0x54, 0x51, 0x54, 0x5b, 0x31, 0x1f, 0x75, 0x3b, 0xdc, 0xa9, 0x7f, 0xc8, 0x8e, 0x3e, 0x65, 0x26, 0x27, 0x45, 0xd2, 0xea, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x5a, 0x73, 0x9b, 0x58, 0x3f, 0x59, 0xfa, 0x50, 0x16, 0xf7, 0x05, 0x5c, 0x36, 0x4e, 0x97, 0xf2, 0x29, 0x6b, 0xe6, 0x82, 0xbb, 0x69, 0xde, 0x12, 0xe1, 0x34, 0x32, 0x3b, 0x7f, 0x07, 0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xe9, 0x95, 0xe1, 0xac, 0x1a, 0x31, 0x6e, 0x1e, 0x13, 0x7d, 0xbe, 0xdf, 0x59, 0x02, 0x34, 0xf0, 0x49, 0x16, 0x80, 0x3d, 0x99, 0x75, 0xa2, 0x04, 0xd6, 0xf6, 0xdb, 0xc2, 0xab, 0xdb, 0xa8, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x57, 0x56, 0xdb, 0xa1, 0xba, 0x1a, 0xce, 0x77, 0xbb, 0x10, 0x04, 0xfe, 0xcf, 0x41, 0x39, 0xe8, 0xa9, 0x52, 0x32, 0x2a, 0xc8, 0x9e, 0x11, 0x8c, 0xc7, 0x7e, 0x0e, 0xd6, 0xc2, 0xf1, 0x3c, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x43, 0x58, 0xb8, 0x62, 0xe0, 0x36, 0xff, 0x67, 0x76, 0x31, 0x1b, 0xf6, 0xe6, 0x4a, 0x02, 0xeb, 0x22, 0x08, 0x8f, 0x5c, 0x6e, 0xb6, 0xb0, 0x19, 0x1e, 0xe6, 0x7c, 0x8d, 0x92, 0xcf, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xe2, 0xa0, 0xa8, 0x83, 0x27, 0xd6, 0x59, 0x09, 0x7c, 0x3e, 0x08, 0xac, 0xdf, 0xa5, 0x35, 0x18, 0xfd, 0x89, 0x0a, 0x78, 0xbc, 0x26, 0xfa, 0xfe, 0x73, 0xfc, 0xb5, 0xc3, 0x67, 0xe0, 0x8a, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x9c, 0x05, 0x52, 0x30, 0xca, 0x81, 0x9e, 0x98, 0x25, 0xe5, 0x9e, 0x8b, 0xfe, 0xcb, 0x4f, 0x6e, 0xce, 0x72, 0xec, 0x71, 0x04, 0x2b, 0xc6, 0x1a, 0x0f, 0x3c, 0x45, 0xc8, 0x43, 0x9c, 0x14, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
const std::array<uint8_t, 64 * TEST_VEC_LEN> enc_poly256_vec_as_poly512_xs = {
    0x02, 0xad, 0x84, 0x5b, 0xc6, 0x2b, 0x60, 0x1a, 0x8e, 0x90, 0xf8, 0xaf, 0xf9, 0x55, 0x39, 0xe1, 0xbd, 0x4d, 0xf4, 0x6d, 0x7d, 0x52, 0x85, 0xe7, 0x6d, 0x55, 0xe1, 0x92, 0x3a, 0x30, 0x06, 0xe8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xad, 0x94, 0x45, 0x2c, 0x9d, 0xc1, 0xf5, 0x6e, 0x60, 0x75, 0xed, 0x5b, 0x1a, 0xb1, 0x3e, 0xd6, 0xec, 0xda, 0x20, 0x9f, 0x3c, 0x2b, 0x55, 0x7c, 0x78, 0x6d, 0x11, 0x43, 0xf2, 0x5d, 0x2a, 0xcc,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xba, 0x5d, 0xf5, 0x5e, 0x1b, 0x2d, 0xbf, 0xaa, 0xcc, 0x6f, 0x67, 0x66, 0x9d, 0x7e, 0x24, 0x33, 0xe0, 0x81, 0x65, 0x85, 0x72, 0xdd, 0xe6, 0x88, 0xa5, 0x00, 0x45, 0x6b, 0xe3, 0x00, 0x81, 0x95,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x56, 0xba, 0x21, 0x10, 0x77, 0x2f, 0x5b, 0xf8, 0x91, 0xc6, 0x15, 0x9c, 0x24, 0x71, 0x0c, 0x4c, 0xe6, 0x9e, 0x61, 0x81, 0x91, 0xe5, 0x07, 0x60, 0x2f, 0xe7, 0x84, 0xd8, 0x36, 0x82, 0x71, 0xd9,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xc9, 0x27, 0xe9, 0x9e, 0x1f, 0x17, 0xae, 0xc2, 0xca, 0x2c, 0x0b, 0xf4, 0x40, 0x27, 0x65, 0x09, 0xe8, 0xa0, 0x66, 0xc1, 0x44, 0xa8, 0xb7, 0x6c, 0xd7, 0xe0, 0x84, 0xa0, 0x8d, 0x10, 0xfb, 0xc0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xb6, 0x92, 0x9b, 0xfc, 0xeb, 0x68, 0xbe, 0x13, 0x68, 0x7f, 0x42, 0xf4, 0x0f, 0x20, 0xb5, 0x47, 0xeb, 0x99, 0xa7, 0x18, 0xfd, 0xa4, 0xf2, 0x33, 0xe1, 0x72, 0x6f, 0xc3, 0x86, 0x61, 0xb2, 0x8a,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x11, 0x81, 0xf3, 0xe2, 0xd2, 0x09, 0x86, 0x4c, 0xef, 0xef, 0x45, 0x18, 0x16, 0x80, 0x89, 0x32, 0x47, 0x27, 0xec, 0xd4, 0x80, 0x93, 0xcb, 0x06, 0xc4, 0x36, 0x9f, 0x31, 0x7f, 0xff, 0x1f, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x97, 0x0d, 0x18, 0x56, 0x04, 0xcd, 0x4e, 0x3f, 0xa9, 0xb8, 0x11, 0x87, 0x9b, 0x9a, 0x34, 0x3d, 0x78, 0xb9, 0x06, 0xde, 0xf5, 0x2f, 0xed, 0x2e, 0x94, 0x1c, 0xc5, 0x1b, 0x7c, 0x0b, 0x06, 0x16,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xb4, 0x7f, 0xe7, 0x86, 0x01, 0xc5, 0xb2, 0x1b, 0xaf, 0x45, 0x43, 0x9d, 0x24, 0xe9, 0xcd, 0x66, 0xf6, 0x35, 0x39, 0x15, 0x3a, 0x41, 0x1f, 0x43, 0xa8, 0xc7, 0x29, 0x3c, 0x2e, 0xc3, 0xac, 0xe6,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0xbc, 0x89, 0xfe, 0xee, 0xef, 0x2c, 0xdf, 0x54, 0x6d, 0x23, 0x54, 0x51, 0x54, 0x5b, 0x31, 0x1f, 0x75, 0x3b, 0xdc, 0xa9, 0x7f, 0xc8, 0x8e, 0x3e, 0x65, 0x26, 0x27, 0x45, 0xd2, 0xea, 0x51,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0c, 0x5a, 0x73, 0x9b, 0x58, 0x3f, 0x59, 0xfa, 0x50, 0x16, 0xf7, 0x05, 0x5c, 0x36, 0x4e, 0x97, 0xf2, 0x29, 0x6b, 0xe6, 0x82, 0xbb, 0x69, 0xde, 0x12, 0xe1, 0x34, 0x32, 0x3b, 0x7f, 0x07, 0x91,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xe9, 0x95, 0xe1, 0xac, 0x1a, 0x31, 0x6e, 0x1e, 0x13, 0x7d, 0xbe, 0xdf, 0x59, 0x02, 0x34, 0xf0, 0x49, 0x16, 0x80, 0x3d, 0x99, 0x75, 0xa2, 0x04, 0xd6, 0xf6, 0xdb, 0xc2, 0xab, 0xdb, 0xa8, 0x2c,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x57, 0x56, 0xdb, 0xa1, 0xba, 0x1a, 0xce, 0x77, 0xbb, 0x10, 0x04, 0xfe, 0xcf, 0x41, 0x39, 0xe8, 0xa9, 0x52, 0x32, 0x2a, 0xc8, 0x9e, 0x11, 0x8c, 0xc7, 0x7e, 0x0e, 0xd6, 0xc2, 0xf1, 0x3c, 0x19,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x43, 0x58, 0xb8, 0x62, 0xe0, 0x36, 0xff, 0x67, 0x76, 0x31, 0x1b, 0xf6, 0xe6, 0x4a, 0x02, 0xeb, 0x22, 0x08, 0x8f, 0x5c, 0x6e, 0xb6, 0xb0, 0x19, 0x1e, 0xe6, 0x7c, 0x8d, 0x92, 0xcf, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xe2, 0xa0, 0xa8, 0x83, 0x27, 0xd6, 0x59, 0x09, 0x7c, 0x3e, 0x08, 0xac, 0xdf, 0xa5, 0x35, 0x18, 0xfd, 0x89, 0x0a, 0x78, 0xbc, 0x26, 0xfa, 0xfe, 0x73, 0xfc, 0xb5, 0xc3, 0x67, 0xe0, 0x8a, 0x2e,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x9c, 0x05, 0x52, 0x30, 0xca, 0x81, 0x9e, 0x98, 0x25, 0xe5, 0x9e, 0x8b, 0xfe, 0xcb, 0x4f, 0x6e, 0xce, 0x72, 0xec, 0x71, 0x04, 0x2b, 0xc6, 0x1a, 0x0f, 0x3c, 0x45, 0xc8, 0x43, 0x9c, 0x14, 0x25,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

const std::array<uint8_t, TEST_VEC_LEN> poly128_from_8_poly1_input = {
    0xc1, 0xa3, 0xc0, 0x22, 0xe7, 0x18, 0x93, 0x5f, 0x46, 0x63, 0x03, 0x86, 0xaf, 0xa3, 0xd3, 0xf2
};
const std::array<std::array<uint8_t, 16>, TEST_VEC_LEN> poly128_from_8_poly1_output = {{
    { 0x9f, 0x06, 0x17, 0xc4, 0x7b, 0x7c, 0x51, 0xbd, 0x95, 0x90, 0xbb, 0x23, 0x72, 0x94, 0xd1, 0xdf },
    { 0x04, 0xb5, 0x4d, 0xcf, 0x1f, 0x2f, 0x6e, 0xfe, 0x59, 0xcb, 0xa8, 0xfc, 0xae, 0xa4, 0xf5, 0x58 },
    { 0x9e, 0x06, 0x17, 0xc4, 0x7b, 0x7c, 0x51, 0xbd, 0x95, 0x90, 0xbb, 0x23, 0x72, 0x94, 0xd1, 0xdf },
    { 0xb9, 0x4c, 0x7b, 0x2e, 0x8b, 0xa1, 0x14, 0x84, 0xb9, 0x44, 0x1f, 0xb3, 0xb4, 0x95, 0xa5, 0x51 },
    { 0xc7, 0xe4, 0xe4, 0xde, 0x3a, 0x84, 0x32, 0xd5, 0xa8, 0x6f, 0x1b, 0x0c, 0x85, 0xb6, 0x80, 0xc2 },
    { 0xe1, 0xde, 0x17, 0x0a, 0xe6, 0x32, 0x4c, 0xd4, 0x38, 0xf0, 0xf3, 0x3d, 0x09, 0x56, 0x66, 0x38 },
    { 0xf9, 0xaf, 0x78, 0x88, 0x70, 0x56, 0xc6, 0xb0, 0x02, 0x37, 0x82, 0xa6, 0x09, 0x82, 0xa6, 0x01 },
    { 0x2e, 0x41, 0xde, 0x4e, 0x6f, 0x71, 0x2f, 0x5e, 0xd5, 0xce, 0xd7, 0x64, 0x77, 0xc1, 0x2e, 0xa7 },
    { 0xce, 0x9f, 0xc9, 0x44, 0x89, 0x43, 0x63, 0x8a, 0xed, 0x3e, 0x24, 0x59, 0x7e, 0x97, 0x48, 0x9f },
    { 0x9a, 0xb3, 0x5a, 0x0b, 0x64, 0x53, 0x3f, 0x43, 0xcc, 0x5b, 0x13, 0xdf, 0xdc, 0x30, 0x24, 0x87 },
    { 0x0c, 0xce, 0x60, 0x55, 0xac, 0xe8, 0x3f, 0xa1, 0x1c, 0x9a, 0x97, 0xa9, 0x55, 0x85, 0x3d, 0x05 },
    { 0x50, 0x99, 0xde, 0x80, 0xf2, 0x3f, 0x32, 0x37, 0x78, 0xae, 0x9f, 0x7a, 0x0c, 0x03, 0x99, 0x40 },
    { 0x4d, 0x5d, 0xfc, 0xcd, 0x7b, 0x74, 0xd6, 0xad, 0x1b, 0xa2, 0x46, 0x1d, 0xa2, 0x73, 0xac, 0x21 },
    { 0x04, 0xb5, 0x4d, 0xcf, 0x1f, 0x2f, 0x6e, 0xfe, 0x59, 0xcb, 0xa8, 0xfc, 0xae, 0xa4, 0xf5, 0x58 },
    { 0xdb, 0x50, 0x59, 0xad, 0x9f, 0xa4, 0xed, 0x77, 0x77, 0x28, 0x8e, 0xca, 0x61, 0x27, 0x27, 0xd7 },
    { 0x6e, 0xd2, 0x42, 0xd6, 0xb8, 0xed, 0xc6, 0x52, 0xd2, 0xf6, 0x06, 0xd0, 0x80, 0x37, 0xbf, 0x83 },
}};

const std::array<uint8_t, TEST_VEC_LEN> poly192_from_8_poly1_input = {
    0xc0, 0x72, 0x0b, 0x10, 0xbf, 0x26, 0x6c, 0x19, 0x24, 0x18, 0x87, 0x72, 0xc5, 0x1f, 0xbe, 0x52
};
const std::array<std::array<uint8_t, 24>, TEST_VEC_LEN> poly192_from_8_poly1_output = {{
    { 0xcb, 0x64, 0xd3, 0x8b, 0xb4, 0xc1, 0x9b, 0x62, 0x9b, 0xc9, 0xd1, 0x66,
      0xcc, 0x0a, 0xf3, 0x93, 0xf3, 0x2e, 0xeb, 0x66, 0x0b, 0xeb, 0xda, 0xee },
    { 0x7c, 0xaa, 0x08, 0xb6, 0x3d, 0x47, 0x32, 0x5e, 0x08, 0xf1, 0x3f, 0xae,
      0xde, 0xee, 0xcc, 0x67, 0x35, 0xbe, 0x1d, 0xb8, 0xbd, 0x30, 0x3c, 0x8b },
    { 0x6f, 0x1d, 0x01, 0x9a, 0xc6, 0x8f, 0xa5, 0x50, 0xf3, 0x30, 0x5c, 0x90,
      0x1b, 0x34, 0x57, 0x64, 0x94, 0x78, 0x1e, 0x32, 0x64, 0xc5, 0x30, 0x3d },
    { 0x5d, 0xf7, 0x2b, 0xbd, 0x7c, 0x74, 0x20, 0xdd, 0x2e, 0xd2, 0x58, 0x00,
      0xab, 0x42, 0x55, 0x7a, 0x51, 0x12, 0xbc, 0x94, 0x9c, 0x51, 0xec, 0x45 },
    { 0x00, 0x14, 0x16, 0xb4, 0x04, 0xcb, 0xf7, 0x12, 0xac, 0x8a, 0xbf, 0x1b,
      0x7c, 0x18, 0xfb, 0x0d, 0x04, 0x05, 0x12, 0x36, 0xe0, 0xe1, 0x4e, 0xb3 },
    { 0x20, 0xec, 0x02, 0x99, 0xa9, 0xce, 0x2e, 0xa6, 0x48, 0x3c, 0xd3, 0x24,
      0xc2, 0x44, 0x85, 0x95, 0x13, 0x9d, 0x5c, 0x91, 0x58, 0xeb, 0xe5, 0x3d },
    { 0xf4, 0x10, 0xd6, 0xed, 0x19, 0xdd, 0x84, 0x61, 0xf3, 0x2c, 0x58, 0xeb,
      0x77, 0x87, 0x38, 0x02, 0xc4, 0x0f, 0x2e, 0xca, 0x63, 0x93, 0x73, 0x29 },
    { 0x51, 0x7d, 0x12, 0x48, 0x6f, 0x58, 0x4d, 0x41, 0x37, 0x5f, 0x6a, 0x06,
      0xdc, 0xa1, 0x67, 0xf8, 0xa7, 0x5c, 0xc9, 0xa8, 0xec, 0x5c, 0xd7, 0x49 },
    { 0x43, 0x7b, 0x3a, 0xf6, 0x7c, 0x6d, 0xe6, 0x6a, 0xa2, 0x81, 0xbd, 0xb2,
      0xae, 0x93, 0xe0, 0x73, 0x71, 0xab, 0x37, 0x9f, 0x4c, 0x23, 0xee, 0x0c },
    { 0x50, 0x7d, 0x12, 0x48, 0x6f, 0x58, 0x4d, 0x41, 0x37, 0x5f, 0x6a, 0x06,
      0xdc, 0xa1, 0x67, 0xf8, 0xa7, 0x5c, 0xc9, 0xa8, 0xec, 0x5c, 0xd7, 0x49 },
    { 0xa8, 0x42, 0xca, 0x76, 0x89, 0x9f, 0x6f, 0x8b, 0x1f, 0x6b, 0x0b, 0x7a,
      0x17, 0x35, 0x8a, 0xfd, 0xe6, 0x29, 0x7d, 0xd5, 0x66, 0xa9, 0xe4, 0x2c },
    { 0x7c, 0xaa, 0x08, 0xb6, 0x3d, 0x47, 0x32, 0x5e, 0x08, 0xf1, 0x3f, 0xae,
      0xde, 0xee, 0xcc, 0x67, 0x35, 0xbe, 0x1d, 0xb8, 0xbd, 0x30, 0x3c, 0x8b },
    { 0x71, 0x34, 0x27, 0xf7, 0x2a, 0xa0, 0xa8, 0xd0, 0xbd, 0xf6, 0xb2, 0xb3,
      0xd5, 0x15, 0x05, 0xe8, 0xc7, 0xf5, 0x7a, 0xb2, 0x2d, 0xdc, 0x49, 0x34 },
    { 0x89, 0xba, 0xde, 0x5b, 0x24, 0x9a, 0xb6, 0x3f, 0xfb, 0xdd, 0x67, 0x45,
      0xa9, 0x69, 0xf4, 0x65, 0xf1, 0xb1, 0x33, 0x72, 0xde, 0xa3, 0x4f, 0xa2 },
    { 0x01, 0x14, 0x16, 0xb4, 0x04, 0xcb, 0xf7, 0x12, 0xac, 0x8a, 0xbf, 0x1b,
      0x7c, 0x18, 0xfb, 0x0d, 0x04, 0x05, 0x12, 0x36, 0xe0, 0xe1, 0x4e, 0xb3 },
    { 0x84, 0x81, 0xc6, 0x3c, 0xdf, 0x4b, 0xe7, 0x86, 0x8c, 0x4f, 0xe1, 0xc9,
      0x69, 0x62, 0xda, 0x6f, 0x70, 0xce, 0xbb, 0xf3, 0xd7, 0x24, 0x41, 0x5d },
}};

const std::array<uint8_t, TEST_VEC_LEN> poly256_from_8_poly1_input = {
    0xc0, 0xcd, 0x0b, 0xed, 0xbe, 0x6a, 0x4c, 0x04, 0xb3, 0x75, 0x89, 0x7d, 0x36, 0x9b, 0x7e, 0x62
};
const std::array<std::array<uint8_t, 32>, TEST_VEC_LEN> poly256_from_8_poly1_output = {{
    { 0x80, 0x8f, 0x76, 0x6d, 0x21, 0x19, 0x36, 0x24, 0xb1, 0xc0, 0x49, 0x43,
      0x10, 0xa2, 0xda, 0xfe, 0x3b, 0x0a, 0x71, 0x06, 0x15, 0x0e, 0x64, 0xdf, 0x4b,
      0x52, 0x91, 0x03, 0x26, 0xdd, 0x03, 0xd3 },
    { 0x5d, 0x9b, 0xd4, 0x87, 0x88, 0x5f, 0xb6, 0xd8, 0xc9, 0xc8, 0x30, 0x3c,
      0x83, 0xe5, 0x0e, 0xc2, 0xc1, 0x16, 0x4e, 0xc7, 0x1d, 0x54, 0xb8, 0xf5, 0x37,
      0xee, 0xdb, 0xef, 0x94, 0x73, 0xd8, 0xb4 },
    { 0xfb, 0x63, 0x5e, 0x34, 0xc1, 0x3b, 0x4d, 0xc3, 0x30, 0x41, 0x7c, 0xf3,
      0x26, 0x0e, 0xa7, 0xa9, 0x7a, 0x4d, 0xce, 0x55, 0x7a, 0xcf, 0xb4, 0x24, 0xbe,
      0xae, 0xd8, 0x50, 0x14, 0x4b, 0x5c, 0x65 },
    { 0xeb, 0xab, 0x5e, 0x6e, 0xa1, 0xaa, 0x74, 0x40, 0x4b, 0x4c, 0xc1, 0x7c,
      0x57, 0x3e, 0xca, 0xd9, 0x40, 0xbf, 0x07, 0xba, 0x89, 0x5d, 0x06, 0xda, 0xcb,
      0xa1, 0x8c, 0x9e, 0xf9, 0x78, 0xff, 0x96 },
    { 0xd3, 0xff, 0xdf, 0x0b, 0x43, 0x88, 0x97, 0x96, 0x66, 0x4e, 0x47, 0xa0,
      0x38, 0x8d, 0xd6, 0xbe, 0x6b, 0xe1, 0xf1, 0xf8, 0x45, 0x98, 0x22, 0xdf, 0x33,
      0x58, 0xc9, 0x20, 0xcf, 0xa8, 0xc9, 0x04 },
    { 0x47, 0x34, 0x90, 0x03, 0x51, 0x61, 0xfa, 0xc5, 0x0e, 0x6a, 0x7c, 0xd5,
      0x34, 0xb3, 0x8e, 0x1e, 0x85, 0xfb, 0x1e, 0xda, 0xd1, 0xe3, 0x0b, 0xfb, 0xb1,
      0xc8, 0x75, 0xf0, 0x56, 0x77, 0x46, 0x87 },
    { 0xd7, 0x73, 0xe6, 0x34, 0x10, 0xe9, 0xf5, 0x62, 0xc4, 0xa7, 0x88, 0x19,
      0x55, 0x21, 0x39, 0x90, 0x84, 0x03, 0xa6, 0x33, 0x37, 0x7f, 0xdd, 0xda, 0x8f,
      0x95, 0xb0, 0x3d, 0x9d, 0x99, 0xe6, 0xa7 },
    { 0xc1, 0x89, 0x22, 0xd5, 0x2a, 0xf5, 0x5a, 0xa9, 0x2f, 0x07, 0x42, 0x2c,
      0x8d, 0xc4, 0xa5, 0x2b, 0xea, 0xb0, 0x00, 0x6c, 0x37, 0x0d, 0x4a, 0xd1, 0xf1,
      0x4a, 0x5b, 0x9c, 0x69, 0x4d, 0x4e, 0x06 },
    { 0x0e, 0xeb, 0x7d, 0xe1, 0xea, 0xce, 0x17, 0x6a, 0x1e, 0x46, 0x3e, 0xdf,
      0xab, 0xca, 0x02, 0x82, 0x91, 0xfd, 0xce, 0x39, 0x4d, 0xc2, 0xfe, 0xf5, 0x4f,
      0xe4, 0x83, 0xcc, 0x7d, 0x06, 0x12, 0x63 },
    { 0xa8, 0x13, 0xf7, 0x52, 0xa3, 0xaa, 0xec, 0x71, 0xe7, 0xcf, 0x72, 0x10,
      0x0e, 0x21, 0xab, 0xe9, 0x2a, 0xa6, 0x4e, 0xab, 0x2a, 0x59, 0xf2, 0x24, 0xc6,
      0xa4, 0x80, 0x73, 0xfd, 0x3e, 0x96, 0xb2 },
    { 0x97, 0x75, 0xb2, 0x8c, 0x1b, 0x05, 0x99, 0xef, 0x5a, 0x60, 0x83, 0x76,
      0xc8, 0x47, 0x46, 0x45, 0x55, 0xb9, 0xd7, 0x59, 0x15, 0x7c, 0xf3, 0xd4, 0x35,
      0x8d, 0x7a, 0xa2, 0xd2, 0x09, 0xab, 0x72 },
    { 0xb5, 0x8e, 0x77, 0x6d, 0x20, 0x19, 0x36, 0x24, 0xb0, 0xc0, 0x49, 0x43,
      0x10, 0xa2, 0xda, 0xfe, 0x3a, 0x0a, 0x71, 0x06, 0x15, 0x0e, 0x64, 0xdf, 0x4b,
      0x52, 0x91, 0x03, 0x26, 0xdd, 0x03, 0xd3 },
    { 0x45, 0x8a, 0x6d, 0x87, 0x58, 0x8d, 0x0e, 0x79, 0x3c, 0x2e, 0xc4, 0xd6,
      0xf0, 0xca, 0x90, 0xfb, 0x3e, 0x58, 0x26, 0xa1, 0x50, 0xe4, 0xd1, 0x0b, 0x06,
      0xd5, 0xb3, 0x82, 0x1d, 0xa1, 0x62, 0x76 },
    { 0xa5, 0x46, 0x77, 0x37, 0x40, 0x88, 0x0f, 0xa7, 0xcb, 0xcd, 0xf4, 0xcc,
      0x61, 0x92, 0xb7, 0x8e, 0x00, 0xf8, 0xb8, 0xe9, 0xe6, 0x9c, 0xd6, 0x21, 0x3e,
      0x5d, 0xc5, 0xcd, 0xcb, 0xee, 0xa0, 0x20 },
    { 0x53, 0x70, 0xa9, 0x66, 0x62, 0x91, 0xa1, 0xb2, 0xd7, 0x8e, 0x0e, 0xe3,
      0x28, 0x2f, 0x0c, 0x40, 0x50, 0xeb, 0x80, 0xfe, 0x50, 0x96, 0x46, 0x00, 0x78,
      0x0a, 0x58, 0x23, 0xe9, 0x75, 0xca, 0xd7 },
    { 0x5a, 0xa9, 0x10, 0x3c, 0xd2, 0xd2, 0x20, 0x90, 0x59, 0x65, 0x47, 0x86,
      0x2a, 0x30, 0xff, 0x09, 0x95, 0x57, 0x21, 0x77, 0xee, 0xb4, 0x9d, 0x00, 0x3c,
      0x3e, 0x64, 0x80, 0x8d, 0x94, 0xd3, 0xe6 },
}};

const std::array<uint8_t, 128 * TEST_VEC_LEN> poly128_from_8_poly128_input = {
    0xaa, 0x6a, 0x6f, 0x17, 0x13, 0xd2, 0x7a, 0x71, 0xfe, 0x98, 0x9e, 0x93,
    0xdc, 0x79, 0xd2, 0x7d, 0x71, 0x4f, 0x4c, 0x85, 0x5d, 0xc3, 0x4e, 0xaf, 0xba,
    0xa6, 0xd0, 0xc9, 0xa6, 0xcb, 0x67, 0xef, 0x59, 0x4c, 0xbc, 0x98, 0x5a, 0x23,
    0x9f, 0x97, 0x85, 0x9c, 0x0f, 0x5d, 0xbc, 0x9c, 0x65, 0xee, 0xbd, 0x3a, 0x87,
    0x1f, 0xc9, 0x3c, 0x17, 0xe3, 0x78, 0x1c, 0xb1, 0x20, 0xb8, 0x9a, 0x5b, 0xc4,
    0xed, 0xff, 0x63, 0x5f, 0xd5, 0xc3, 0xa8, 0xe2, 0x10, 0x53, 0x4b, 0x6a, 0x29,
    0xda, 0x7c, 0x4a, 0xd1, 0x6d, 0x14, 0xe0, 0xca, 0xe7, 0xda, 0x06, 0xbe, 0x11,
    0x34, 0xa1, 0x71, 0x55, 0x5b, 0xb4, 0x56, 0xbe, 0x29, 0xa6, 0x14, 0x66, 0x5b,
    0x84, 0xab, 0xb8, 0x80, 0x85, 0x65, 0xca, 0x30, 0x59, 0x8d, 0x14, 0x3b, 0x6e,
    0x79, 0x37, 0x99, 0xfd, 0xe7, 0x61, 0x7b, 0x4a, 0x73, 0x4f, 0x49, 0x73, 0xa4,
    0x10, 0x82, 0x59, 0xc3, 0x6d, 0x33, 0x00, 0xa3, 0x45, 0x2d, 0xe6, 0xcc, 0x68,
    0x19, 0xac, 0xf7, 0x45, 0x13, 0xa1, 0x92, 0x2d, 0xe3, 0x72, 0x1a, 0x29, 0xe9,
    0x74, 0xd1, 0x6a, 0x6d, 0x52, 0x1a, 0x31, 0x3d, 0xe1, 0x71, 0x35, 0x29, 0x2c,
    0x28, 0x1f, 0x35, 0xf3, 0x6d, 0x64, 0x22, 0x21, 0x66, 0x32, 0x29, 0x55, 0xd8,
    0xa6, 0x53, 0xed, 0x63, 0x97, 0x82, 0x6c, 0xa1, 0xef, 0x2d, 0x6c, 0xd3, 0xa4,
    0x14, 0xc6, 0xa1, 0xe8, 0x3b, 0xdd, 0x37, 0x69, 0x6a, 0xa0, 0xec, 0xb9, 0x48,
    0x2e, 0x3f, 0x5c, 0x0f, 0x27, 0x0b, 0x04, 0x73, 0x3c, 0x06, 0x5b, 0x8c, 0x2c,
    0xb0, 0xca, 0x82, 0x12, 0x0e, 0x96, 0xf9, 0x87, 0x2b, 0xbc, 0x1a, 0x87, 0xdd,
    0xeb, 0x27, 0xc7, 0xf1, 0x89, 0xb8, 0x26, 0xfb, 0x1b, 0x26, 0xd4, 0x76, 0xb3,
    0xf8, 0x76, 0x07, 0xf4, 0xa9, 0x74, 0x2a, 0x1a, 0x26, 0xe3, 0x26, 0x3e, 0x27,
    0x6e, 0x9d, 0x61, 0x9c, 0x4f, 0xe6, 0xb9, 0xb4, 0x0d, 0x1f, 0x5a, 0xe8, 0x1b,
    0x78, 0xff, 0xd6, 0xd1, 0x95, 0x73, 0xdb, 0x9f, 0xa4, 0x08, 0xe8, 0xcb, 0x29,
    0xf8, 0x2e, 0x27, 0x96, 0xe0, 0x8f, 0x0d, 0xf9, 0xf1, 0x8a, 0x1d, 0x67, 0xd5,
    0xec, 0x22, 0x14, 0x92, 0x32, 0x17, 0xa9, 0x86, 0x63, 0xac, 0x8a, 0x05, 0x78,
    0xbe, 0xd7, 0x2c, 0x80, 0x91, 0x07, 0x67, 0xce, 0x11, 0xf1, 0x79, 0x59, 0xde,
    0x6a, 0x99, 0xbb, 0xdc, 0x75, 0xb2, 0x04, 0x63, 0x6f, 0x1d, 0xd2, 0x5f, 0x27,
    0x0d, 0x32, 0x94, 0xa2, 0xa4, 0x5d, 0x1d, 0xcc, 0x86, 0xc5, 0xfe, 0x76, 0xb4,
    0x1e, 0x56, 0xb3, 0xaa, 0x64, 0x55, 0x42, 0x6c, 0x8f, 0x62, 0xc4, 0x7b, 0xd8,
    0x5c, 0x3a, 0x96, 0xaf, 0xa1, 0x7f, 0x45, 0x6d, 0xad, 0x48, 0x31, 0xaa, 0x46,
    0xf0, 0x18, 0xed, 0x4d, 0xd3, 0xa4, 0xd8, 0xcd, 0xe1, 0x30, 0x15, 0x5e, 0x47,
    0x3d, 0x50, 0x35, 0xce, 0x74, 0x27, 0x62, 0x69, 0xe6, 0x9f, 0xfd, 0xf2, 0xf2,
    0x9f, 0xec, 0x63, 0x42, 0x90, 0x42, 0x6d, 0xe4, 0x7b, 0x99, 0x7f, 0x87, 0xc1,
    0x8f, 0xf2, 0x92, 0xd3, 0xbd, 0x0d, 0x8d, 0x4e, 0x94, 0xb7, 0x5c, 0xb7, 0xa4,
    0x1d, 0x17, 0xd7, 0x9d, 0x6d, 0xec, 0xf1, 0x65, 0x7e, 0x30, 0x20, 0xe4, 0xb6,
    0xc8, 0xaf, 0x1b, 0xa3, 0x07, 0xa8, 0xa8, 0xa7, 0x77, 0x9b, 0xd3, 0xd5, 0x57,
    0x31, 0x89, 0x2f, 0xae, 0x1b, 0x7c, 0x4a, 0x8f, 0xb6, 0x1c, 0x15, 0x7c, 0x4d,
    0xe2, 0x9d, 0x35, 0x62, 0x33, 0x63, 0x94, 0x75, 0x39, 0x50, 0x2d, 0x7e, 0xa5,
    0xf7, 0x33, 0xd0, 0xca, 0x3c, 0xc2, 0xb5, 0xd0, 0x7f, 0x64, 0xa4, 0x6b, 0xbd,
    0x02, 0x67, 0x2c, 0xed, 0x19, 0xfb, 0x73, 0x5b, 0xf0, 0x46, 0xaf, 0x23, 0x6e,
    0x38, 0x79, 0x85, 0x13, 0x79, 0xd3, 0xba, 0x1b, 0x19, 0x49, 0xcb, 0x0f, 0x46,
    0xe3, 0x55, 0xf7, 0xc6, 0xa4, 0x2f, 0x54, 0xf7, 0x00, 0x60, 0xc0, 0xca, 0xd1,
    0xbc, 0x89, 0x20, 0x89, 0xb4, 0x85, 0xde, 0xbc, 0xa7, 0xfe, 0x73, 0xa4, 0x6a,
    0x52, 0xd1, 0x61, 0x20, 0x88, 0x77, 0x94, 0x37, 0x6a, 0xc2, 0xdc, 0x72, 0x2e,
    0x8b, 0x6e, 0x58, 0x45, 0xd2, 0x42, 0xa8, 0x55, 0x5b, 0xa0, 0xc6, 0xd2, 0x08,
    0x81, 0x0e, 0x3d, 0x42, 0x43, 0x5f, 0x8f, 0xda, 0x15, 0xc9, 0xad, 0xe9, 0x0e,
    0x6f, 0xde, 0x32, 0xa8, 0xea, 0xa6, 0x36, 0x40, 0x52, 0xb7, 0x79, 0x69, 0xd8,
    0x89, 0x37, 0x89, 0x84, 0xa8, 0x72, 0x27, 0x69, 0x9b, 0x54, 0x11, 0x3b, 0x8b,
    0xc9, 0x4e, 0x51, 0xfa, 0x92, 0x31, 0x3b, 0x65, 0xf9, 0x24, 0x86, 0x2b, 0xcb,
    0x56, 0xb6, 0x37, 0x74, 0x3e, 0x62, 0x0a, 0xe8, 0x80, 0x0e, 0xb2, 0xb3, 0xba,
    0x1b, 0xfc, 0x98, 0x29, 0x74, 0xd8, 0x9e, 0x33, 0x76, 0x1c, 0xb4, 0x74, 0x89,
    0xcb, 0xbd, 0x3b, 0x96, 0xa5, 0x92, 0x77, 0x74, 0x0d, 0x05, 0xa5, 0x9b, 0xcd,
    0x95, 0xbe, 0x17, 0x26, 0x25, 0x3f, 0x12, 0x5f, 0x0d, 0x09, 0x77, 0x7f, 0xf5,
    0xfa, 0x39, 0x93, 0x43, 0x09, 0x0c, 0xa2, 0x54, 0x1b, 0x7e, 0xee, 0x71, 0xf6,
    0x56, 0xa1, 0x3a, 0x18, 0xee, 0xd1, 0xd7, 0xfd, 0xa5, 0xeb, 0xc9, 0x0c, 0xcf,
    0x8d, 0x25, 0xb1, 0x20, 0x28, 0x06, 0x38, 0x4b, 0x32, 0x7b, 0x81, 0xd0, 0x51,
    0x98, 0x54, 0xa0, 0xe5, 0x5f, 0x61, 0x35, 0x8a, 0x09, 0x13, 0xfd, 0x64, 0x9d,
    0xc3, 0xa9, 0x90, 0xd3, 0x84, 0xce, 0xc5, 0xf7, 0xcb, 0xbf, 0x31, 0x7e, 0xe7,
    0xeb, 0x0a, 0x2e, 0x91, 0xc1, 0xf8, 0x96, 0x9a, 0x72, 0xfe, 0x8c, 0x1a, 0x7e,
    0xef, 0x83, 0x37, 0x96, 0x7a, 0xd4, 0x2e, 0xf4, 0x94, 0x23, 0x2e, 0xa6, 0x30,
    0x60, 0xf7, 0x98, 0xcb, 0xf5, 0xeb, 0xe4, 0x4f, 0xb3, 0x5b, 0x12, 0x1f, 0x73,
    0x2c, 0x9b, 0xf1, 0xab, 0x77, 0x49, 0x9a, 0xe8, 0xcb, 0x2c, 0xe2, 0x7e, 0xe7,
    0xba, 0x3d, 0x7c, 0x53, 0x92, 0x43, 0xdc, 0x8a, 0x7e, 0x95, 0xe6, 0xf0, 0x01,
    0x4c, 0x5a, 0xe5, 0x2d, 0xab, 0x94, 0xa7, 0x6c, 0x95, 0x44, 0x85, 0x6a, 0xa3,
    0xdc, 0x89, 0xdb, 0x20, 0xf8, 0xcc, 0x27, 0x9f, 0xd6, 0x2f, 0x67, 0x80, 0xaf,
    0xfc, 0x3a, 0x58, 0x59, 0xed, 0x71, 0x26, 0xdc, 0x46, 0x3d, 0x64, 0x24, 0xa8,
    0x44, 0xfa, 0x42, 0x1b, 0x2d, 0x75, 0x1d, 0xcd, 0x8d, 0x9e, 0xeb, 0x8a, 0x5f,
    0xc8, 0xd2, 0x23, 0x72, 0x9c, 0x45, 0x35, 0x5f, 0x31, 0x3c, 0x8f, 0xa8, 0xca,
    0xf3, 0x5f, 0xb0, 0x34, 0x1f, 0xc4, 0x67, 0xbc, 0xa5, 0x32, 0xcd, 0x76, 0x1a,
    0x9c, 0xef, 0xc7, 0x03, 0x7d, 0xe5, 0xb1, 0xb5, 0x86, 0xe1, 0x53, 0x2a, 0x85,
    0x31, 0xca, 0x76, 0x93, 0x1d, 0x51, 0xc1, 0x44, 0xa2, 0xd5, 0xda, 0x86, 0x7a,
    0xbf, 0x36, 0xeb, 0x92, 0x4e, 0x33, 0x92, 0x47, 0x53, 0x04, 0xe4, 0x56, 0x20,
    0xff, 0x70, 0x8b, 0x9b, 0x2f, 0xe9, 0x0a, 0x0c, 0x03, 0xba, 0x6a, 0xdc, 0x16,
    0xbc, 0x5f, 0xb9, 0xd9, 0x49, 0xcf, 0x18, 0x22, 0x5f, 0x89, 0x11, 0x9a, 0xca,
    0x10, 0x83, 0x2a, 0x35, 0x0d, 0xec, 0xb1, 0x69, 0x29, 0x6b, 0x56, 0x4d, 0xb2,
    0x87, 0x86, 0x0d, 0xc2, 0xfc, 0x7e, 0xcb, 0x51, 0x55, 0x9b, 0x9c, 0x0b, 0x3d,
    0xc6, 0xad, 0x33, 0x6e, 0x40, 0xc4, 0x25, 0xbd, 0x00, 0xb3, 0xe9, 0x92, 0x5b,
    0x34, 0xf6, 0x14, 0x95, 0x73, 0x8e, 0x83, 0x00, 0x43, 0xdc, 0xdc, 0xa5, 0x19,
    0xfb, 0x1c, 0xec, 0x3b, 0xf4, 0x7f, 0xf9, 0xf6, 0xb9, 0x8c, 0x76, 0x0d, 0x3b,
    0x9f, 0xee, 0x41, 0x58, 0x5b, 0x74, 0x91, 0x94, 0x1c, 0xf8, 0x02, 0x64, 0xc4,
    0x7e, 0xc6, 0x3e, 0x39, 0x9f, 0x60, 0xd4, 0x41, 0x77, 0xaa, 0x6c, 0x8e, 0xe1,
    0x4f, 0x1d, 0xb4, 0x47, 0xbe, 0xff, 0x79, 0xef, 0x9a, 0x3b, 0xf7, 0xd0, 0x33,
    0xe0, 0x88, 0x4d, 0x24, 0xa8, 0xf9, 0x5a, 0xce, 0xe7, 0xf3, 0x33, 0x11, 0x28,
    0xd7, 0xb2, 0x97, 0xde, 0x27, 0x44, 0x62, 0x9b, 0xa5, 0x69, 0x1e, 0xd0, 0xe2,
    0x78, 0x96, 0xdc, 0xf5, 0x80, 0x31, 0x00, 0x83, 0xdc, 0x51, 0x09, 0x2a, 0x62,
    0x13, 0xe9, 0x87, 0xa9, 0xcb, 0xc3, 0xc3, 0xa1, 0x21, 0x0f, 0x2d, 0x23, 0x03,
    0x78, 0xd6, 0x5a, 0xfc, 0x6f, 0x36, 0x5a, 0x0c, 0xe1, 0xa1, 0x00, 0x19, 0xfe,
    0x56, 0x1f, 0x55, 0x43, 0x78, 0x7b, 0xba, 0x60, 0xf1, 0x9f, 0x40, 0xd6, 0xb6,
    0xc0, 0x74, 0xd8, 0x6f, 0x65, 0x79, 0x08, 0x29, 0x87, 0x47, 0xfa, 0xb9, 0x2d,
    0x85, 0x9c, 0x7b, 0xda, 0xb5, 0x9c, 0x6a, 0x08, 0x59, 0x70, 0xbf, 0xa2, 0x22,
    0x70, 0x7e, 0x02, 0xd0, 0x47, 0x47, 0xdd, 0x90, 0xb0, 0xd0, 0xed, 0x07, 0xb3,
    0x2e, 0xb7, 0xe6, 0xa8, 0xf3, 0x45, 0x8e, 0x6a, 0xd7, 0xdc, 0xb2, 0x49, 0x94,
    0x17, 0x72, 0xf4, 0x57, 0x27, 0x3b, 0x9f, 0xde, 0xc5, 0x72, 0xff, 0xb5, 0xb2,
    0x5f, 0x26, 0xa6, 0x1e, 0x49, 0x7a, 0x0b, 0xa4, 0xa8, 0xad, 0x72, 0x3e, 0xf5,
    0xe6, 0x28, 0x0e, 0x41, 0xbb, 0x4f, 0x08, 0xdd, 0xfd, 0x79, 0xae, 0x40, 0x1e,
    0xae, 0x89, 0x40, 0x43, 0xb5, 0x82, 0x61, 0x90, 0xd4, 0xf1, 0xdf, 0x5b, 0xdd,
    0xb3, 0x47, 0x74, 0xec, 0x6d, 0x19, 0x86, 0x0a, 0x69, 0xcf, 0x31, 0x02, 0xc8,
    0x7b, 0x51, 0xea, 0xdb, 0x3e, 0xe5, 0xfb, 0x44, 0x34, 0x87, 0x03, 0x9b, 0xb0,
    0x69, 0xb2, 0xe5, 0x12, 0x95, 0xbc, 0xb2, 0xe2, 0x5f, 0x8e, 0x8a, 0x73, 0x6f,
    0xb7, 0x83, 0xc4, 0xdb, 0xf7, 0xf6, 0xed, 0x96, 0x7c, 0xd9, 0x75, 0xfd, 0x37,
    0xec, 0xf2, 0x70, 0x5e, 0x96, 0xe4, 0x28, 0x62, 0xff, 0x75, 0x4a, 0x5e, 0x6c,
    0x39, 0x6f, 0xd7, 0x1e, 0x60, 0x20, 0xbc, 0x8d, 0x2d, 0xc9, 0xf5, 0x98, 0xb7,
    0x1e, 0xbd, 0x56, 0x66, 0x25, 0xa8, 0x70, 0xdf, 0x63, 0x16, 0x12, 0xbe, 0x6d,
    0xea, 0x69, 0xfd, 0x04, 0xad, 0x0f, 0xe8, 0x12, 0x23, 0x29, 0xfe, 0x5f, 0x66,
    0x62, 0x89, 0xd6, 0x68, 0x92, 0x62, 0xb7, 0x85, 0xa4, 0x43, 0xd4, 0x0a, 0x0b,
    0x83, 0x03, 0x45, 0xa0, 0xed, 0x7f, 0x32, 0x33, 0xcb, 0xee, 0x95, 0x31, 0xf1,
    0xbe, 0xd2, 0x41, 0x37, 0x51, 0xc9, 0xd1, 0x12, 0xf8, 0x2f, 0x4d, 0xe0, 0x9d,
    0x95, 0x3e, 0xde, 0x4c, 0xe3, 0xd4, 0x97, 0x20, 0x2c, 0x22, 0xea, 0x10, 0x09,
    0xfa, 0xc9, 0x13, 0xc6, 0x91, 0xbe, 0x85, 0x24, 0xcb, 0xcf, 0x0e, 0x64, 0xb3,
    0x59, 0xdc, 0xac, 0xe8, 0x8d, 0x02, 0x0a, 0x74, 0x88, 0x2d, 0x02, 0xbf, 0x26,
    0x34, 0x53, 0x4d, 0xde, 0xad, 0x12, 0x2f, 0xd2, 0xaa, 0x83, 0x1b, 0x96, 0x79,
    0xcb, 0x2b, 0x1d, 0xa2, 0x29, 0x97, 0x26, 0x0e, 0x46, 0xd6, 0xad, 0x0f, 0x61,
    0x4a, 0x74, 0x9c, 0xad, 0x53, 0x21, 0x92, 0x3f, 0x95, 0x1a, 0xa5, 0x7a, 0x4a,
    0xe8, 0x39, 0xdd, 0xb5, 0x70, 0x59, 0xfc, 0x22, 0x5d, 0x90, 0xb4, 0xad, 0x4d,
    0xf6, 0x8d, 0xc8, 0x7b, 0x29, 0xf0, 0x44, 0x9b, 0xb5, 0x61, 0x24, 0x77, 0x16,
    0xcf, 0x91, 0xd3, 0x39, 0x42, 0x49, 0x2b, 0x4c, 0x64, 0xbf, 0x06, 0xb8, 0xa6,
    0x43, 0x06, 0x28, 0xea, 0x50, 0x9f, 0xc7, 0xca, 0xa1, 0xe8, 0xd1, 0x88, 0xb1,
    0x1e, 0x41, 0x12, 0xe1, 0xbb, 0x8c, 0x18, 0xe9, 0xa0, 0x4a, 0xb6, 0xdb, 0x9d,
    0x87, 0x15, 0x60, 0x69, 0x3a, 0x9b, 0x95, 0x14, 0xd3, 0x0c, 0xc9, 0x3d, 0xa8,
    0xde, 0xdc, 0xbc, 0x10, 0xcb, 0x5f, 0xd8, 0x6e, 0x38, 0x3d, 0x18, 0x62, 0x9f,
    0xd5, 0xd1, 0x2b, 0x6c, 0x7b, 0xc1, 0xd2, 0x18, 0x12, 0xe0, 0x6c, 0x89, 0xe7,
    0xf6, 0x78, 0x94, 0xad, 0x7f, 0x5f, 0x19, 0xf1, 0x01, 0x52, 0x7e, 0x15, 0xc2,
    0xec, 0xef, 0xc9, 0x55, 0x1e, 0x29, 0x5f, 0x9f, 0xbc, 0x01, 0x1c, 0x32, 0xac,
    0x79, 0xe2, 0x1b, 0xb1, 0x69, 0x1c, 0xc2, 0x78, 0x36, 0xa6, 0x7d, 0x91, 0x74,
    0xb6, 0xe7, 0xf6, 0xd9, 0x16, 0xe6, 0x6b, 0x9e, 0x1c, 0x46, 0x27, 0x30, 0xd0,
    0x8d, 0x56, 0xce, 0x27, 0xd6, 0x13, 0xca, 0x6f, 0xed, 0xdc, 0xb5, 0x2b, 0xb4,
    0x8a, 0x7e, 0xb3, 0x16, 0xd0, 0x49, 0x2b, 0x48, 0xc2, 0xae, 0x89, 0x97, 0x06,
    0xee, 0xa2, 0x69, 0x1e, 0xdc, 0x07, 0xd5, 0x05, 0xe3, 0x68, 0x0d, 0x42, 0xd7,
    0x96, 0x98, 0x16, 0xa6, 0x32, 0x79, 0xa1, 0x9b, 0xbf, 0x8e, 0xb8, 0x2a, 0x4f,
    0x38, 0x4a, 0xd2, 0x2b, 0x49, 0xb6, 0x06, 0x77, 0xe7, 0x87, 0x05, 0x68, 0xa6,
    0xf4, 0x1f, 0x01, 0x95, 0x69, 0xbc, 0xf7, 0x67, 0x57, 0x67, 0xd8, 0x0e, 0xb8,
    0xbc, 0x94, 0x2a, 0x97, 0x96, 0x84, 0xba, 0xab, 0x66, 0xf7, 0x7e, 0x1a, 0xd5,
    0x35, 0x1c, 0xc9, 0x53, 0x11, 0x43, 0x39, 0xf6, 0x4c, 0xc6, 0xac, 0xfd, 0x25,
    0xc7, 0x51, 0x9f, 0x95, 0x75, 0x02, 0xc8, 0xc3, 0x03, 0xb6, 0x50, 0x4b, 0x4f,
    0x4b, 0x47, 0x83, 0xe3, 0xb3, 0xd5, 0x6c, 0x11, 0x67, 0x3f, 0x71, 0x06, 0x21,
    0xe0, 0x0d, 0xa7, 0x05, 0x78, 0x3f, 0xbe, 0x17, 0x67, 0x50, 0xba, 0x78, 0x53,
    0x6e, 0x8c, 0xc9, 0x76, 0x2e, 0x34, 0xa9, 0x41, 0x74, 0x90, 0xe4, 0x74, 0xa1,
    0x38, 0xfa, 0x58, 0xf9, 0x5d, 0x8f, 0x00, 0xc3, 0x21, 0xbd, 0x6f, 0x33, 0x31,
    0x8d, 0x13, 0xdd, 0x8e, 0x12, 0xa9, 0x7a, 0x5e, 0x5a, 0xc3, 0x32, 0x40, 0x57,
    0x54, 0xce, 0x11, 0x6f, 0xe8, 0x14, 0xf2, 0x35, 0x63, 0xb0, 0x71, 0xfe, 0x51,
    0x6f, 0xfe, 0x8f, 0x40, 0x3c, 0x80, 0x60, 0xf3, 0x35, 0xbd, 0x3a, 0x74, 0xb4,
    0x94, 0x96, 0x41, 0x98, 0xd5, 0x3d, 0xc5, 0xe0, 0x56, 0x2a, 0x3c, 0x30, 0x38,
    0xc0, 0x1f, 0xff, 0x1f, 0x28, 0x38, 0xb2, 0xf1, 0xb6, 0x54, 0xa0, 0x0a, 0x46,
    0x85, 0xb7, 0x93, 0xe8, 0x84, 0x0b, 0x40, 0xa4, 0x8c, 0xdc, 0x7f, 0x00, 0x79,
    0x65, 0xf3, 0xbf, 0xc1, 0xec, 0xec, 0xc8, 0xb4, 0xae, 0x36, 0x86, 0x83, 0x8a,
    0x09, 0x95, 0xf6, 0x82, 0x2f, 0x5b, 0x29, 0xee, 0x48, 0x52, 0xa3, 0x98, 0xc7,
    0x07, 0x28, 0xa7, 0xbf, 0xa1, 0xb6, 0x5e, 0x9f, 0x91, 0x90, 0x42, 0xf1, 0xf3,
    0xf0, 0xad, 0xac, 0x75, 0xc2, 0xd9, 0xa6, 0xc3, 0xba, 0xfa, 0xfd, 0x0a, 0xce,
    0xee, 0x0a, 0xdd, 0x71, 0xdf, 0x0b, 0x05, 0x54, 0xcb, 0x48, 0xe2, 0x75, 0x14,
    0x49, 0xdb, 0x2d, 0x19, 0xc2, 0xee, 0xee, 0x17, 0xb9, 0xce, 0xfc, 0xc4, 0x40,
    0x74, 0x11, 0x59, 0x36, 0x78, 0xcf, 0x24, 0x01, 0x67, 0xa3, 0x17, 0xa4, 0xe0,
    0xcb, 0xa8, 0xb1, 0x22, 0x9d, 0xe2, 0x4d, 0x7f, 0x7b, 0x6c, 0x38, 0x5f, 0x2d,
    0xfc, 0x44, 0x05, 0xc9, 0xc9, 0x9d, 0xd2, 0x5c, 0xbf, 0xac, 0x4b, 0x17, 0x43,
    0xbe, 0x04, 0x6a, 0xec, 0x78, 0x10, 0x35, 0x89, 0xcb, 0x8e, 0x88, 0x16, 0xec,
    0xc4, 0x31, 0x82, 0x98, 0xfd, 0xc5, 0x86, 0x79, 0x99, 0x61, 0x5a, 0xe8, 0x9a,
    0xa5, 0x8a, 0xe2, 0xa7, 0xad, 0x4b, 0x76, 0x21, 0xb2, 0xfc, 0x42, 0xc8, 0xef,
    0x76, 0x7b, 0x88, 0xfc, 0xef, 0xfb, 0xba, 0x4c, 0x77, 0x43, 0x94, 0x07, 0x3d,
    0x92, 0x0e, 0x21, 0x01, 0xe1, 0xa4, 0x82, 0x8f, 0x0a, 0xdb, 0x9b, 0xfd, 0x4f,
    0xfd, 0x50, 0x1d, 0x81, 0x0b, 0x22, 0xfd, 0x64
};
const std::array<std::array<uint8_t, 16>, TEST_VEC_LEN> poly128_from_8_poly128_output = {{
    { 0x33, 0x4d, 0xbb, 0xe5, 0x00, 0x4d, 0x3d, 0xbb, 0xe3, 0xac, 0x3a, 0x2e,
      0x86, 0xdd, 0xb7, 0x2a },
    { 0x4d, 0x38, 0x05, 0x4f, 0xc9, 0xdf, 0x94, 0x56, 0x12, 0x20, 0x86, 0x0e,
      0x9e, 0xbf, 0x72, 0xa2 },
    { 0x7f, 0x08, 0x82, 0x60, 0xd0, 0x13, 0xe0, 0xb4, 0x97, 0xe0, 0xbf, 0x44,
      0xde, 0xa3, 0xb5, 0xbc },
    { 0xb4, 0x80, 0x97, 0x65, 0x94, 0x14, 0x43, 0x11, 0xe3, 0xfd, 0xae, 0x7c,
      0x67, 0x70, 0x1a, 0x1c },
    { 0xb0, 0x31, 0x96, 0xf1, 0x3a, 0x9e, 0xcf, 0xdc, 0xcf, 0x66, 0xb9, 0xf3,
      0xf9, 0x43, 0xc1, 0xfb },
    { 0x16, 0xe7, 0xc1, 0x3d, 0xc9, 0xb1, 0xe1, 0x09, 0x3b, 0xbf, 0xd6, 0x9a,
      0x01, 0xf4, 0x27, 0xef },
    { 0xa3, 0x25, 0x48, 0xd2, 0x11, 0x03, 0xaf, 0xb7, 0xd8, 0x2c, 0xa5, 0xe0,
      0x98, 0xaa, 0x55, 0xad },
    { 0x5c, 0x2b, 0x14, 0xd5, 0xd3, 0x06, 0x4f, 0x4c, 0x03, 0x88, 0xec, 0x2d,
      0x1c, 0xdd, 0x86, 0xbd },
    { 0xbc, 0xa7, 0x5b, 0x4e, 0x77, 0xfd, 0x29, 0x55, 0xaf, 0x8a, 0xa2, 0x0e,
      0xe6, 0x8f, 0xec, 0xf2 },
    { 0xd4, 0x24, 0xd3, 0x7c, 0xac, 0x6a, 0x7c, 0x97, 0xfc, 0x65, 0x31, 0x53,
      0x16, 0x89, 0x23, 0x82 },
    { 0x20, 0x8c, 0x12, 0xd4, 0x98, 0x5c, 0x51, 0x2f, 0x36, 0xcd, 0x79, 0x21,
      0x2d, 0x2f, 0xa2, 0x43 },
    { 0xfa, 0xac, 0x6a, 0x4c, 0x9f, 0xa2, 0xbd, 0xfe, 0x52, 0xc6, 0xa4, 0xa9,
      0x79, 0x37, 0xe4, 0x66 },
    { 0x69, 0xa7, 0x8b, 0x21, 0x15, 0x87, 0xe9, 0xfa, 0x48, 0xcc, 0xe1, 0xad,
      0x35, 0x0f, 0x37, 0x68 },
    { 0x39, 0x04, 0x97, 0x9b, 0xf8, 0xf8, 0xe5, 0x68, 0x8d, 0x1e, 0xbc, 0x17,
      0x63, 0x37, 0xef, 0x62 },
    { 0x60, 0xfd, 0xe9, 0x34, 0xc6, 0x2e, 0x44, 0xc9, 0xee, 0x2c, 0xba, 0xf5,
      0x1a, 0x8d, 0xf4, 0x5f },
    { 0x97, 0x42, 0xdc, 0x7a, 0xf6, 0x18, 0x40, 0xa0, 0xd5, 0xa6, 0xdf, 0x63,
      0x68, 0x17, 0x05, 0x15 },
}};

const std::array<uint8_t, 192 * TEST_VEC_LEN> poly192_from_8_poly192_input = {
    0x97, 0x43, 0x54, 0x30, 0xde, 0xfb, 0x19, 0xef, 0xaf, 0x7e, 0x3a, 0x6e,
    0x9f, 0xc3, 0x65, 0xb4, 0x19, 0x63, 0x3d, 0x42, 0x21, 0xd0, 0x7e, 0xa7, 0x6d,
    0x49, 0x49, 0xbf, 0x79, 0xdd, 0xbb, 0xbd, 0x17, 0xc1, 0xa4, 0x76, 0x1f, 0x21,
    0x69, 0xe4, 0x4b, 0xbc, 0xc6, 0xd9, 0x98, 0x46, 0x86, 0x35, 0x8a, 0x13, 0xce,
    0xea, 0xbe, 0x8a, 0xee, 0x80, 0x8b, 0x1d, 0x39, 0xeb, 0xa3, 0xda, 0x83, 0x13,
    0xfa, 0x60, 0x80, 0xcf, 0xf2, 0xf4, 0xdf, 0x8c, 0x9b, 0x46, 0xeb, 0x3c, 0x67,
    0xd4, 0x16, 0xb5, 0xb4, 0x66, 0xae, 0xb6, 0x67, 0xcc, 0xb8, 0x86, 0x0b, 0x7b,
    0xfb, 0x4a, 0x3f, 0x7b, 0xf8, 0x75, 0x3b, 0x9a, 0x14, 0x4e, 0xda, 0x23, 0x92,
    0xd8, 0xc3, 0xae, 0x8d, 0x87, 0x17, 0x41, 0xe0, 0xb9, 0x14, 0xb3, 0x03, 0x6c,
    0xa3, 0xf9, 0x9e, 0x19, 0xd9, 0xff, 0xc9, 0x6a, 0xd4, 0xcb, 0x26, 0x9a, 0xb3,
    0xfd, 0xfc, 0x61, 0x7a, 0xfe, 0xcd, 0x26, 0x0f, 0xe5, 0xbe, 0xf4, 0xd7, 0x78,
    0xec, 0xc5, 0xc5, 0x24, 0xba, 0xd2, 0x1f, 0xf3, 0xc0, 0x79, 0x74, 0x5c, 0xf0,
    0x27, 0xbb, 0xf4, 0x61, 0xcd, 0x82, 0x3e, 0x8e, 0xc2, 0x0b, 0x86, 0x83, 0x8d,
    0x10, 0x42, 0x61, 0xf3, 0x2b, 0x52, 0x13, 0xd7, 0xad, 0x09, 0xc3, 0x4d, 0x50,
    0x42, 0xbf, 0xbe, 0xc7, 0x4d, 0x05, 0x14, 0x30, 0x91, 0x4b, 0x76, 0xe9, 0x0b,
    0xa7, 0xd9, 0x84, 0x95, 0xec, 0x8f, 0x34, 0xff, 0xc3, 0x3c, 0xd4, 0xfe, 0xc4,
    0x99, 0x00, 0xe8, 0x6d, 0x7f, 0x5d, 0xed, 0x63, 0xd5, 0xa4, 0x58, 0xf5, 0xc0,
    0x2b, 0x6c, 0xbf, 0x58, 0x84, 0xb1, 0xfc, 0x51, 0x56, 0x8a, 0x4b, 0x6c, 0xac,
    0xe0, 0x91, 0x4b, 0x11, 0x3d, 0xa0, 0x5b, 0x80, 0x01, 0x6f, 0x85, 0x97, 0xda,
    0x72, 0xe8, 0x3a, 0xb2, 0xaf, 0x37, 0x3b, 0xd4, 0x06, 0x85, 0x8f, 0x18, 0x29,
    0x3f, 0x7b, 0xf1, 0x9f, 0xca, 0xd0, 0xb4, 0x8d, 0x33, 0x17, 0x2d, 0x01, 0x28,
    0x4a, 0x38, 0xc1, 0x47, 0x68, 0x83, 0x80, 0xf4, 0xa9, 0x82, 0xde, 0x10, 0xb0,
    0x12, 0x90, 0x87, 0xd0, 0x67, 0x50, 0x51, 0xd3, 0x84, 0xf4, 0xa9, 0xbb, 0xad,
    0xcc, 0xef, 0xb7, 0x88, 0xf5, 0x6f, 0x3c, 0x49, 0x99, 0x4f, 0x12, 0xcb, 0x41,
    0x04, 0xf9, 0xaf, 0x9b, 0x30, 0x08, 0xaf, 0x0e, 0xbc, 0x24, 0x35, 0xb4, 0x84,
    0x24, 0x54, 0x6a, 0xab, 0xcd, 0xd4, 0xfc, 0xd2, 0x60, 0x28, 0xc0, 0x15, 0x14,
    0x6c, 0xe9, 0x15, 0x28, 0x43, 0xcc, 0x89, 0xb6, 0x6f, 0x95, 0x6b, 0x20, 0xf5,
    0xc5, 0xad, 0x49, 0x67, 0xb8, 0x91, 0xf7, 0x79, 0x7c, 0x84, 0x02, 0x7f, 0x4a,
    0x31, 0xfc, 0xf6, 0x11, 0x49, 0xb7, 0x91, 0xfe, 0x06, 0x74, 0x4c, 0xd9, 0xc4,
    0xa9, 0x69, 0x90, 0xd3, 0x93, 0xdb, 0xc7, 0x29, 0xc5, 0xad, 0x4b, 0x6c, 0x40,
    0x3b, 0xc1, 0x7e, 0xf5, 0x22, 0x74, 0x61, 0x80, 0xa4, 0x3a, 0x27, 0x94, 0x3e,
    0xb4, 0x94, 0xcf, 0xb9, 0xec, 0x95, 0x95, 0x7b, 0x00, 0x43, 0x9e, 0x70, 0x9e,
    0xc5, 0xb9, 0xfd, 0x56, 0x0f, 0xd7, 0x36, 0x0b, 0x60, 0xe1, 0xd6, 0x61, 0xc6,
    0x41, 0xde, 0xb7, 0x25, 0xe2, 0xbc, 0x7a, 0x41, 0xe5, 0xde, 0xd9, 0xe6, 0xac,
    0x64, 0xab, 0xdc, 0x4e, 0xe4, 0x93, 0xd4, 0xe1, 0x9a, 0x1b, 0x0b, 0xce, 0x74,
    0x61, 0x89, 0xbe, 0xa2, 0x59, 0xb1, 0xda, 0xa5, 0x82, 0x6f, 0x77, 0x38, 0x02,
    0x33, 0xc4, 0x23, 0x2c, 0x6e, 0xda, 0x4b, 0x80, 0x8d, 0x87, 0x6c, 0x65, 0x40,
    0x17, 0x3c, 0x01, 0xee, 0x9f, 0xe6, 0x33, 0xb5, 0xe0, 0xca, 0x27, 0xd4, 0x0d,
    0xe2, 0x6b, 0x52, 0xeb, 0xe6, 0x4f, 0xfb, 0x15, 0xe6, 0x91, 0x55, 0x6e, 0xa1,
    0x01, 0x92, 0xcc, 0x38, 0x80, 0x9d, 0x04, 0x29, 0x9c, 0x82, 0xc9, 0x61, 0x19,
    0x1a, 0xa3, 0x9f, 0xa9, 0x5d, 0x55, 0xcb, 0xbf, 0xcc, 0xc0, 0xb1, 0xbb, 0xec,
    0xdd, 0x83, 0x0a, 0x69, 0x34, 0x93, 0x87, 0x29, 0x99, 0x46, 0xc5, 0xc0, 0x0a,
    0x44, 0x4d, 0xa4, 0xdf, 0x20, 0xe1, 0x60, 0xe0, 0xfd, 0xb3, 0x57, 0x8d, 0x4a,
    0xba, 0xa7, 0x83, 0xca, 0x74, 0x9c, 0xa2, 0x5d, 0x9b, 0xa1, 0xe0, 0x1a, 0xc4,
    0x5d, 0xe9, 0xab, 0x02, 0x2b, 0x3c, 0x79, 0x91, 0xde, 0xe0, 0x56, 0x87, 0x06,
    0xd4, 0x68, 0x0c, 0xe3, 0x66, 0xc8, 0xce, 0x36, 0x61, 0xfb, 0x62, 0xb1, 0xa5,
    0xee, 0xbf, 0xcc, 0x05, 0x8d, 0x92, 0x7d, 0xfb, 0xa9, 0xbc, 0xf9, 0xa5, 0x6b,
    0xfc, 0x5f, 0xde, 0x50, 0x1c, 0x69, 0xdf, 0x25, 0x22, 0x07, 0xc0, 0x34, 0xd7,
    0x09, 0x51, 0xe5, 0xbe, 0x1f, 0x28, 0x66, 0xe6, 0xab, 0xfb, 0x0a, 0x31, 0xff,
    0x25, 0x32, 0x5d, 0xdc, 0x74, 0x37, 0x9e, 0x66, 0x18, 0xe1, 0x50, 0x14, 0x89,
    0xe6, 0xd1, 0xa6, 0x25, 0xe9, 0xe0, 0xfe, 0x5d, 0xf6, 0x37, 0x0e, 0x81, 0x6e,
    0x6c, 0x0e, 0x62, 0x0b, 0x8b, 0x74, 0xe6, 0x77, 0xa8, 0xdd, 0x47, 0xb6, 0x6c,
    0x33, 0x82, 0x86, 0xdc, 0x64, 0xed, 0x9f, 0x26, 0xb1, 0xe1, 0x50, 0x20, 0xce,
    0xa8, 0x7a, 0xa9, 0x44, 0xe0, 0x93, 0xdd, 0xae, 0xbc, 0x1b, 0xd3, 0xa8, 0xf6,
    0xa5, 0xe6, 0x0e, 0x36, 0x4f, 0x3d, 0x1d, 0x27, 0xf6, 0x6b, 0x1e, 0xa6, 0x64,
    0x64, 0x63, 0x9e, 0x7e, 0xb5, 0x4b, 0x9d, 0x0e, 0x1c, 0xc5, 0x42, 0xd6, 0x50,
    0xdf, 0x6f, 0xaf, 0xb6, 0x46, 0x12, 0xa2, 0x8e, 0x16, 0x80, 0x1c, 0xd2, 0x18,
    0x03, 0x46, 0x9b, 0x71, 0x2e, 0x56, 0xa7, 0xdc, 0x99, 0x00, 0xab, 0xe3, 0x42,
    0xa2, 0x2b, 0xf7, 0xf8, 0x39, 0xc2, 0x93, 0x08, 0x7e, 0x4b, 0x73, 0xc1, 0xa8,
    0x0d, 0xc8, 0xc8, 0xea, 0x0b, 0x0c, 0xab, 0x32, 0x53, 0x25, 0x12, 0xdb, 0x6d,
    0xab, 0x71, 0xcb, 0xc2, 0x87, 0x6b, 0xdd, 0xcf, 0xca, 0x9b, 0xa1, 0x5f, 0xaf,
    0x1c, 0x75, 0x94, 0x59, 0xa5, 0xbd, 0x02, 0x8a, 0x28, 0x58, 0xeb, 0xa3, 0xc6,
    0x81, 0xa2, 0x43, 0xd1, 0x32, 0xc1, 0x53, 0x30, 0x96, 0xfe, 0x5f, 0xb3, 0x0a,
    0x45, 0xa6, 0xa3, 0xb8, 0x87, 0xbb, 0xc8, 0xc2, 0x7d, 0x23, 0x5e, 0x1a, 0x3c,
    0xbd, 0x66, 0x31, 0x07, 0x1c, 0xb1, 0x37, 0xdd, 0x41, 0x44, 0xe5, 0xd6, 0x5d,
    0x68, 0x5b, 0xb9, 0x3e, 0xdd, 0xde, 0x40, 0x6c, 0xc7, 0x11, 0x7b, 0xf8, 0x39,
    0x68, 0xfd, 0x3c, 0x8d, 0x07, 0xd7, 0xed, 0x60, 0x22, 0x97, 0x4b, 0x4b, 0xcb,
    0x68, 0xb3, 0xd4, 0xfb, 0x1a, 0x26, 0x0f, 0x04, 0x83, 0x36, 0x02, 0xa2, 0x6e,
    0xdf, 0xfe, 0x71, 0x06, 0x44, 0xc8, 0x9d, 0x0a, 0xf1, 0xda, 0x82, 0x21, 0xe4,
    0xee, 0x41, 0x50, 0x8f, 0x33, 0x4a, 0x66, 0x41, 0x27, 0x38, 0x13, 0x15, 0xb8,
    0x25, 0x82, 0x6d, 0x29, 0xd1, 0x1d, 0xbd, 0xcc, 0x61, 0x10, 0xc7, 0x8c, 0x42,
    0x8a, 0x23, 0xfd, 0xb9, 0x58, 0x70, 0xb8, 0xcf, 0x27, 0xb8, 0x10, 0xa2, 0x75,
    0x57, 0x79, 0x99, 0x01, 0x6b, 0x8c, 0x32, 0x98, 0x74, 0xb9, 0x32, 0x81, 0x84,
    0xa7, 0xdb, 0x4c, 0xd9, 0x5c, 0xaa, 0x39, 0x3f, 0x7b, 0x93, 0xd8, 0x7e, 0x2c,
    0xa5, 0x6f, 0x9a, 0x56, 0xf0, 0x19, 0x14, 0xd3, 0x75, 0x55, 0x0b, 0xc8, 0xe7,
    0x25, 0xca, 0x3a, 0x0f, 0xc4, 0xc0, 0x07, 0x96, 0xbd, 0x23, 0xb5, 0x3d, 0xf2,
    0xe8, 0xd1, 0xfc, 0xf1, 0x6e, 0xfd, 0x31, 0x51, 0xd0, 0xf0, 0x5c, 0xaf, 0x9c,
    0x8f, 0x52, 0x68, 0xb2, 0x8a, 0x35, 0x32, 0xfe, 0xc4, 0x2f, 0x3c, 0x86, 0xb5,
    0x32, 0x7f, 0x36, 0x29, 0x36, 0xac, 0x53, 0x05, 0x05, 0x91, 0x5e, 0x1c, 0x60,
    0xf0, 0x45, 0xf4, 0x38, 0x81, 0x34, 0x7b, 0xa4, 0x00, 0x1d, 0x6a, 0x91, 0xfc,
    0x98, 0x49, 0xc1, 0x1c, 0x68, 0xa2, 0x2f, 0xea, 0xab, 0x22, 0x38, 0x0a, 0x42,
    0x7a, 0xa9, 0x48, 0xa8, 0xe1, 0x34, 0xbb, 0x0a, 0xa2, 0x34, 0xe2, 0xdd, 0xc0,
    0xe4, 0x55, 0xd8, 0xf8, 0x70, 0x4e, 0xa9, 0x9b, 0x83, 0x17, 0x6f, 0x99, 0x81,
    0xba, 0x3e, 0x95, 0x71, 0x66, 0xf5, 0x72, 0x5e, 0x16, 0x16, 0x8e, 0x16, 0xc4,
    0x57, 0xbc, 0x42, 0x28, 0x78, 0xaf, 0x86, 0x84, 0xfa, 0x42, 0x8d, 0x54, 0xae,
    0xd4, 0x36, 0xd4, 0xb8, 0x94, 0x0c, 0xc3, 0x61, 0xbd, 0xd3, 0x19, 0xd2, 0xaf,
    0x48, 0xda, 0xf5, 0x9a, 0x88, 0x7b, 0xc7, 0x98, 0x9d, 0xf7, 0x11, 0x4b, 0x94,
    0x38, 0xd0, 0x47, 0xa4, 0xc5, 0x6e, 0x5b, 0x9e, 0x2f, 0x19, 0x95, 0xc0, 0x28,
    0xde, 0xbc, 0xe6, 0x04, 0x96, 0x5c, 0x2d, 0x4c, 0xe6, 0x10, 0x45, 0x7e, 0xc0,
    0x9a, 0x50, 0xc7, 0x4b, 0x1e, 0xf4, 0x46, 0xbf, 0x0e, 0xdd, 0x95, 0x9a, 0x4b,
    0x44, 0x1b, 0xfe, 0x1f, 0xa2, 0xd6, 0x64, 0xd0, 0x98, 0x55, 0xd6, 0xf4, 0xb8,
    0x07, 0xa2, 0x37, 0xf3, 0x72, 0x23, 0x8f, 0xc1, 0x52, 0x29, 0xfd, 0x8a, 0x21,
    0xb3, 0x56, 0xf9, 0xb6, 0x50, 0xd8, 0x7d, 0xf2, 0x2a, 0xa9, 0x50, 0xb5, 0x42,
    0xd7, 0xa2, 0xfa, 0x96, 0x79, 0x3b, 0xa9, 0x99, 0xa3, 0xbd, 0xef, 0x96, 0x54,
    0x6a, 0xee, 0xb1, 0x2f, 0x54, 0x8e, 0xb6, 0xe2, 0x74, 0x49, 0x94, 0xe8, 0x57,
    0x99, 0x75, 0x5e, 0x59, 0xcb, 0x7a, 0xd8, 0x1e, 0x20, 0xc8, 0x46, 0xae, 0xe3,
    0xad, 0xfa, 0xfd, 0xd4, 0xe5, 0xaa, 0x27, 0x40, 0x29, 0x14, 0x1c, 0x30, 0x88,
    0xf6, 0x4b, 0x0f, 0x54, 0xda, 0x4b, 0x90, 0xb0, 0xfc, 0x5a, 0x23, 0x5d, 0xa0,
    0xdf, 0x77, 0x2b, 0xc2, 0xcb, 0x83, 0xb3, 0x40, 0x01, 0x6c, 0xd2, 0x5b, 0x5b,
    0x10, 0x11, 0x70, 0x73, 0x7c, 0x8b, 0x0a, 0xe6, 0x65, 0x4a, 0xd6, 0x34, 0xa6,
    0xd1, 0xe9, 0x7f, 0x5e, 0xbb, 0x0b, 0x0e, 0x86, 0x78, 0x15, 0xb0, 0x0c, 0x4b,
    0xd2, 0x19, 0x34, 0xdb, 0x6b, 0x74, 0x8e, 0x0a, 0x55, 0x7a, 0xb0, 0x0a, 0xc1,
    0x97, 0xad, 0x85, 0x9d, 0x07, 0x3a, 0x32, 0x21, 0x4a, 0x8f, 0xe2, 0x0f, 0x5e,
    0x8f, 0x7f, 0xcf, 0xfc, 0x27, 0xbd, 0x1c, 0x06, 0x46, 0x8f, 0xa4, 0xe1, 0x9d,
    0x00, 0xc4, 0x85, 0x54, 0x28, 0x13, 0x2e, 0xa7, 0x30, 0x54, 0xa2, 0x8d, 0x22,
    0x59, 0x5d, 0x95, 0xbc, 0xec, 0x38, 0x40, 0xc2, 0xe2, 0x00, 0xcc, 0x59, 0x84,
    0x68, 0x73, 0xd2, 0x7f, 0xc5, 0xed, 0x08, 0xf8, 0x49, 0x5a, 0x3f, 0xb4, 0x9c,
    0xc3, 0x7d, 0x69, 0xf3, 0x79, 0x35, 0x55, 0x96, 0x74, 0x13, 0xe5, 0x63, 0xd0,
    0xd6, 0x71, 0x8f, 0x26, 0xad, 0xb7, 0x97, 0x09, 0x20, 0x38, 0x21, 0xe3, 0x45,
    0x34, 0x52, 0x3a, 0xd4, 0x2e, 0x37, 0xff, 0x4b, 0x05, 0xc7, 0xdb, 0x01, 0xc3,
    0xec, 0x8b, 0x38, 0xbb, 0x08, 0xdf, 0xac, 0x0f, 0x4e, 0x70, 0xc6, 0x8f, 0xa5,
    0x1c, 0xa2, 0x1f, 0x59, 0x6c, 0xbf, 0x54, 0x56, 0xc9, 0xf0, 0x7f, 0xa7, 0x17,
    0x98, 0x9b, 0xfa, 0xe5, 0x7d, 0xff, 0xcd, 0xf6, 0xe6, 0x4f, 0x54, 0x5d, 0xf9,
    0xd2, 0xd3, 0x59, 0x37, 0x1e, 0xd4, 0x4f, 0xa1, 0x3f, 0x81, 0x6e, 0xdf, 0x5a,
    0x1c, 0xf4, 0xa3, 0x47, 0x8d, 0x02, 0xe4, 0x56, 0x5d, 0x80, 0x4f, 0x17, 0xd8,
    0xb8, 0x3f, 0xf7, 0x2c, 0x6d, 0x5d, 0x28, 0xc8, 0xd8, 0x7b, 0x3b, 0x8b, 0xe0,
    0xa9, 0x7f, 0x82, 0x17, 0xeb, 0x70, 0x67, 0x0b, 0xc5, 0x9d, 0x21, 0x93, 0x99,
    0x6f, 0x22, 0xdd, 0x4c, 0xcb, 0xc2, 0xc9, 0x4f, 0x52, 0x64, 0x01, 0x9e, 0x4c,
    0x55, 0xf2, 0xcd, 0x83, 0xa9, 0x2c, 0x2e, 0x1e, 0x6e, 0xf6, 0xed, 0x28, 0x32,
    0xe1, 0xd2, 0x6b, 0x7b, 0xa6, 0x27, 0x19, 0x5d, 0x85, 0xa3, 0xad, 0x84, 0xd1,
    0xba, 0x6a, 0x39, 0x9d, 0x6c, 0x3e, 0x96, 0x12, 0xef, 0xb7, 0x04, 0x73, 0xf0,
    0x60, 0x31, 0x3e, 0x43, 0x20, 0x73, 0x77, 0x17, 0x72, 0x19, 0xab, 0x75, 0xd4,
    0x95, 0xe4, 0x38, 0x85, 0x19, 0xe2, 0xed, 0xb6, 0x55, 0x18, 0x18, 0x25, 0xfe,
    0xc0, 0x41, 0x04, 0x8e, 0x86, 0xc9, 0x3b, 0x07, 0xc2, 0xb2, 0x33, 0x74, 0x46,
    0xca, 0xfb, 0x42, 0xf4, 0xe7, 0x88, 0x3e, 0xa1, 0xd0, 0xbb, 0xa4, 0x10, 0x2a,
    0x5f, 0x06, 0xb2, 0x6b, 0x08, 0x00, 0x93, 0x31, 0xbb, 0xdb, 0x24, 0xe8, 0x6d,
    0xf2, 0xa6, 0xdf, 0x8c, 0xe8, 0xdc, 0xe1, 0x59, 0xbf, 0x76, 0x12, 0x44, 0x11,
    0xba, 0x90, 0xba, 0x89, 0x5c, 0x38, 0xd8, 0x85, 0x8f, 0x9f, 0x52, 0x39, 0x82,
    0x56, 0x1e, 0xbd, 0xc1, 0xac, 0x38, 0x21, 0x41, 0x85, 0x4d, 0xab, 0x49, 0xc3,
    0x0e, 0xf0, 0x3e, 0xbf, 0xad, 0x5d, 0xed, 0x9b, 0x18, 0x83, 0xaa, 0x15, 0xe7,
    0x1b, 0x88, 0xb3, 0x1f, 0x83, 0x1d, 0x00, 0xb1, 0xf2, 0xea, 0x9b, 0x93, 0xf2,
    0x4b, 0xcf, 0x04, 0x33, 0x21, 0xa8, 0xc8, 0xf1, 0xcc, 0xc8, 0xdf, 0x4e, 0x4f,
    0x88, 0x7b, 0xe3, 0x91, 0xc6, 0x48, 0xe4, 0x7c, 0x6e, 0x5e, 0xf6, 0xa1, 0x85,
    0x4f, 0x30, 0xc4, 0xb4, 0x72, 0xdc, 0x4e, 0xaf, 0xf3, 0xb4, 0x09, 0x20, 0x68,
    0x97, 0xa6, 0x5d, 0xb6, 0xf0, 0xac, 0x03, 0xdb, 0xb8, 0xe4, 0xa1, 0x85, 0xee,
    0x56, 0xff, 0xce, 0x3a, 0xa7, 0xd8, 0x10, 0x35, 0x71, 0x78, 0x12, 0xeb, 0x91,
    0x84, 0x67, 0x82, 0x3c, 0x44, 0xc2, 0x76, 0x65, 0xe5, 0x96, 0x64, 0x3a, 0x20,
    0xb3, 0x30, 0x12, 0x45, 0x8f, 0x6b, 0xf5, 0x4d, 0xd0, 0x7b, 0x5e, 0x42, 0x4a,
    0x90, 0x21, 0x34, 0x52, 0xf6, 0x54, 0x71, 0x76, 0xc4, 0x01, 0x9c, 0x31, 0xe2,
    0x46, 0x94, 0x71, 0xc5, 0x07, 0xc5, 0xf7, 0x30, 0x61, 0x10, 0x7d, 0x31, 0xe0,
    0x1b, 0x82, 0x13, 0xa7, 0x32, 0xd3, 0xe8, 0xad, 0xef, 0x5c, 0x7b, 0x5b, 0x33,
    0xe0, 0x6e, 0x86, 0x8c, 0x6f, 0x38, 0xce, 0x54, 0x17, 0x5e, 0x48, 0x1d, 0x59,
    0x84, 0x55, 0xdf, 0x69, 0xa1, 0xd0, 0x18, 0x90, 0x00, 0x16, 0x8f, 0x3a, 0x8b,
    0xa4, 0x59, 0x52, 0x59, 0x68, 0xde, 0xf7, 0x98, 0x9a, 0x83, 0x7f, 0x56, 0xc9,
    0xe7, 0x5b, 0x08, 0x43, 0xfe, 0x01, 0xad, 0x4b, 0x62, 0x29, 0x8f, 0xd6, 0x7f,
    0x12, 0xa6, 0x06, 0xa4, 0x38, 0x71, 0x62, 0x6d, 0x2f, 0xa9, 0x86, 0x6c, 0x5b,
    0x02, 0xe9, 0x30, 0xdc, 0x80, 0xf9, 0xbd, 0xc6, 0xf7, 0xfd, 0xa2, 0x21, 0x0b,
    0xc4, 0x6e, 0x71, 0x80, 0xf6, 0x7a, 0x4f, 0x56, 0xe2, 0xa5, 0xe1, 0xdf, 0xa3,
    0x20, 0xb9, 0xc4, 0x39, 0xa5, 0x0c, 0x29, 0xb0, 0x23, 0xb4, 0x70, 0xf1, 0x3e,
    0x7b, 0x11, 0xed, 0x18, 0xe8, 0xe0, 0x4c, 0x47, 0x66, 0x56, 0xb0, 0x42, 0x1d,
    0x84, 0xc2, 0xd2, 0xaa, 0x8f, 0xc9, 0x9a, 0xb6, 0x35, 0xcd, 0xee, 0x23, 0xe6,
    0x0b, 0xc7, 0xf1, 0xe6, 0xce, 0x86, 0xb8, 0xb2, 0xe8, 0x4c, 0xaa, 0xd3, 0x1b,
    0xee, 0xce, 0xfd, 0x42, 0x3d, 0xbc, 0xd0, 0x1b, 0x85, 0x13, 0xa4, 0x05, 0xe3,
    0xc6, 0x3a, 0x26, 0x27, 0xa2, 0x03, 0x84, 0x36, 0x5d, 0x39, 0xa3, 0xa4, 0xd1,
    0x3b, 0xc4, 0xde, 0x9d, 0x80, 0xc0, 0xb9, 0x7b, 0x85, 0x59, 0x41, 0xa2, 0xde,
    0x08, 0x5c, 0xdd, 0x41, 0xac, 0x5e, 0x26, 0x00, 0x0b, 0xaf, 0x21, 0xaf, 0x19,
    0x2d, 0x1e, 0xbe, 0x79, 0xc8, 0x63, 0xbb, 0xc4, 0xe7, 0x99, 0xee, 0x3c, 0xb7,
    0x7e, 0x45, 0xc2, 0x33, 0xee, 0x75, 0xc6, 0xe2, 0x58, 0xb0, 0x45, 0xba, 0x6b,
    0xb7, 0x59, 0xed, 0xf1, 0x7a, 0x99, 0x67, 0x87, 0x45, 0x90, 0x50, 0x62, 0x7a,
    0x18, 0x44, 0x72, 0xb5, 0xf6, 0xe6, 0xc4, 0x0e, 0xa6, 0x8e, 0x8b, 0x60, 0x34,
    0x31, 0xd6, 0x37, 0xaa, 0x51, 0x19, 0x1b, 0x82, 0xab, 0x87, 0xa7, 0xc2, 0xd2,
    0x4a, 0xf1, 0x1f, 0x82, 0xa0, 0x97, 0x09, 0xe1, 0xd8, 0x27, 0x0f, 0xce, 0x69,
    0x2f, 0x01, 0xd1, 0x42, 0xca, 0x47, 0xff, 0xd0, 0xc7, 0xef, 0x16, 0xe3, 0x88,
    0x26, 0xc4, 0x04, 0xce, 0x6d, 0x61, 0x4b, 0xdc, 0xb9, 0xa3, 0xc9, 0x30, 0x3f,
    0x13, 0x2e, 0xfa, 0x41, 0x19, 0x37, 0x2f, 0x84, 0x2c, 0x72, 0xa1, 0x9d, 0x97,
    0x21, 0xd3, 0xa2, 0x9b, 0x34, 0xd6, 0x8f, 0xd0, 0x0b, 0x1b, 0x16, 0x05, 0x92,
    0xb6, 0x55, 0xdc, 0x5e, 0x2a, 0x1a, 0xf0, 0x2d, 0xcb, 0x73, 0x7e, 0xca, 0x92,
    0x1c, 0xbc, 0x64, 0x7c, 0xe0, 0x4b, 0x35, 0x40, 0x33, 0x22, 0x55, 0x7d, 0x26,
    0x90, 0xdc, 0x2a, 0x12, 0xb5, 0x87, 0x6f, 0x26, 0x9a, 0xda, 0xb1, 0x67, 0x64,
    0xb5, 0xe6, 0x27, 0xa9, 0xa3, 0xbd, 0x59, 0xdb, 0xb1, 0xcc, 0x88, 0x10, 0x27,
    0x31, 0xc8, 0x37, 0xea, 0xf9, 0x72, 0xbd, 0x88, 0x22, 0x40, 0x5b, 0x9f, 0xc4,
    0xe1, 0x17, 0x67, 0xdf, 0x33, 0x89, 0x75, 0xf3, 0xcc, 0x41, 0xe5, 0x82, 0x06,
    0x13, 0xad, 0xee, 0x2d, 0x69, 0xc1, 0x83, 0x7b, 0xed, 0xf1, 0x72, 0x12, 0xd1,
    0xdb, 0x94, 0x66, 0xaa, 0x14, 0x19, 0x0e, 0xd1, 0x38, 0x40, 0xb6, 0xf2, 0xef,
    0xfb, 0x90, 0x0a, 0x5c, 0xcf, 0xb6, 0xc0, 0x26, 0xfc, 0xe1, 0x93, 0x6b, 0x31,
    0x5a, 0x91, 0x40, 0x15, 0xaf, 0x06, 0xff, 0xb6, 0x6d, 0x31, 0x2d, 0x4a, 0x2b,
    0x56, 0x48, 0xa1, 0x20, 0x6b, 0xd6, 0x8d, 0x1d, 0x06, 0xb2, 0x12, 0x59, 0x81,
    0xf9, 0xe0, 0xf4, 0x73, 0xff, 0xc4, 0xb0, 0xd8, 0xf0, 0x42, 0x21, 0x39, 0x3c,
    0x9b, 0x3c, 0xd4, 0xf7, 0x6b, 0x80, 0xa8, 0xd3, 0x5e, 0xba, 0x32, 0xe7, 0xc8,
    0xac, 0xb0, 0xe5, 0x94, 0x76, 0xa3, 0xe8, 0xb4, 0x0e, 0x81, 0xf0, 0x62, 0xbe,
    0xc0, 0x33, 0x73, 0xa6, 0x01, 0x06, 0xab, 0xee, 0x68, 0xab, 0x67, 0xb7, 0x68,
    0x32, 0xe9, 0xe8, 0x72, 0x16, 0x4a, 0xa1, 0xb4, 0xe6, 0xe3, 0x8c, 0x22, 0x80,
    0x42, 0x39, 0x00, 0x31, 0xc7, 0xa2, 0x85, 0x5b, 0xbb, 0x31, 0x11, 0xb7, 0x82,
    0x3c, 0x96, 0xad, 0xbe, 0x7e, 0x56, 0x63, 0x17, 0xd6, 0x66, 0xcd, 0x7f, 0x5b,
    0x23, 0x93, 0x0c, 0x3e, 0x9f, 0xda, 0x54, 0x4d, 0xbf, 0x3f, 0xbb, 0xbb, 0x77,
    0x8c, 0x0e, 0x84, 0x14, 0x34, 0xf3, 0x8a, 0x3e, 0x54, 0x98, 0x73, 0x22, 0x0c,
    0xce, 0xa0, 0x0a, 0x5e, 0x1d, 0xe8, 0x28, 0x51, 0xcb, 0x06, 0x21, 0x89, 0x1b,
    0xba, 0x7b, 0x19, 0x85, 0xfe, 0x19, 0x9a, 0xd2, 0xb7, 0x86, 0x12, 0x28, 0x43,
    0xda, 0xbb, 0xd6, 0xfb, 0x81, 0x8b, 0x27, 0xc9, 0x01, 0x6c, 0x28, 0x51, 0x26,
    0x30, 0x44, 0xba, 0xc6, 0xa2, 0xa8, 0x49, 0xf1, 0xb1, 0x43, 0x0f, 0x46, 0x9e,
    0x5e, 0x8d, 0x2c, 0x1d, 0x8f, 0x39, 0xf9, 0xb0, 0x03, 0x81, 0x97, 0xaf, 0x4c,
    0xa5, 0x0a, 0xf3, 0x8d, 0x8f, 0x5c, 0xe8, 0xe0, 0x67, 0xda, 0x3c, 0x8e, 0xd3,
    0x94, 0x9f, 0xc7, 0x80, 0x3b, 0xb4, 0x50, 0x6e, 0x76, 0x02, 0xc3, 0x58, 0xaf,
    0x54, 0xe3, 0x3c, 0x51, 0x61, 0xac, 0x6d, 0x2b, 0x9d, 0xa7, 0xe7, 0x43, 0xc5,
    0xe0, 0x50, 0x71, 0x67, 0xe0, 0xa5, 0x89, 0x1a, 0x3b, 0xec, 0xe1, 0x1b, 0x83,
    0x92, 0x16, 0xb4, 0x7a, 0x57, 0xe5, 0x9d, 0x65, 0x24, 0xb5, 0x75, 0xb9, 0xb8,
    0x4d, 0x42, 0xf8, 0x33, 0xf1, 0x90, 0xa3, 0xfc, 0x40, 0x25, 0xfa, 0x7f, 0x36,
    0x5a, 0xa6, 0xdf, 0xc9, 0x24, 0x00, 0x36, 0x29, 0x40, 0x9d, 0x63, 0x2d, 0xe5,
    0x8d, 0x5d, 0x39, 0x52, 0xaa, 0xb8, 0x49, 0x90, 0x04, 0xd7, 0x95, 0x11, 0x26,
    0xe7, 0xc9, 0x85, 0x6a, 0x70, 0xf3, 0x52, 0xe8, 0xc7, 0x12, 0xbf, 0x32, 0x29,
    0x2a, 0x0d, 0xce, 0x7c, 0xf4, 0x35, 0x03, 0x49, 0xb9, 0xc1, 0xe9, 0x77, 0xc7,
    0x4f, 0xd7, 0x73, 0x62, 0x59, 0x88, 0x10, 0x1a, 0x4e, 0xa3, 0x7f, 0x25, 0xc4,
    0x43, 0x2f, 0x36, 0x86, 0xe7, 0x08, 0xa1, 0xa4, 0x4c, 0x09, 0x26, 0x75, 0xa3,
    0x69, 0x3f, 0xd7, 0x01, 0x14, 0xa6, 0xb2, 0x93, 0x12, 0x6e, 0x94, 0xfa, 0x31,
    0x6f, 0xd3, 0xaa, 0x0a, 0x48, 0x0c, 0x6d, 0x26, 0x11, 0xe1, 0x60, 0x41, 0x9e,
    0x24, 0x40, 0xb8, 0x1a, 0xed, 0x4a, 0xd7, 0x42, 0x0a, 0x17, 0x02, 0x05, 0xdc,
    0x13, 0x8c, 0xcd, 0xb1, 0x00, 0x77, 0x61, 0x94, 0x02, 0x88, 0xc3, 0x4e, 0x2c,
    0x8e, 0xae, 0x13, 0xd4, 0x20, 0x61, 0x85, 0xa0, 0x0d, 0xd5, 0x93, 0x40, 0xb7,
    0x3e, 0xd6, 0x04, 0x88, 0xf1, 0x98, 0xba, 0x9b, 0xf4, 0x40, 0x3c, 0x1e, 0x96,
    0xbd, 0xa0, 0x29, 0x6b, 0x88, 0x26, 0x8d, 0x04, 0x7c, 0xae, 0xc8, 0x5f, 0x67,
    0xe9, 0xfa, 0x2f, 0xf5, 0x96, 0x24, 0x66, 0x73, 0x5d, 0xc8, 0xd9, 0x78, 0xfc,
    0x24, 0x5c, 0x87, 0x23, 0x5e, 0x0e, 0xba, 0xca, 0x0b, 0x9a, 0xba, 0xe4, 0xac,
    0xba, 0x43, 0xb7, 0x98, 0x6c, 0xa3, 0x12, 0x0d, 0x15, 0x7c, 0xe7, 0xcc, 0x35,
    0xa2, 0x2f, 0xa8, 0xf0, 0xf9, 0x0c, 0x52, 0xb4, 0xda, 0xec, 0xc4, 0x02, 0xb2,
    0x57, 0x42, 0x6c, 0x01, 0x2e, 0x1b, 0x91, 0x60, 0x3f, 0x2b, 0x15, 0xd3, 0xee,
    0x55, 0xa7, 0x23, 0x93, 0x6e, 0x34, 0x24, 0x96, 0x4a, 0x1d, 0x74, 0xe0, 0xa5,
    0x3f, 0x35, 0x02, 0x8e, 0x20, 0x81, 0xa3, 0x67, 0xd1, 0x03, 0x00, 0x9e, 0x11,
    0x20, 0xea, 0xe9, 0x01, 0x41, 0x7b, 0xd1, 0x1f, 0x10, 0x96, 0x06, 0xc9, 0x2a,
    0x24, 0xf4, 0x8b, 0x51, 0x38, 0xfc, 0x43, 0x1b, 0xc7, 0xcd, 0x30, 0xc0, 0xae,
    0x6c, 0x73, 0xdb, 0xf8, 0x34, 0xd9, 0x86, 0x70, 0xa6, 0x75, 0xc5, 0x7f, 0xdd,
    0x7a, 0x59, 0x49, 0x1f, 0xcb, 0x98, 0x16, 0x28, 0x03, 0x0e, 0x2c, 0x47, 0xf3,
    0xd7, 0x70, 0x0a, 0x35, 0xdd, 0x60, 0x66, 0xe9, 0x1f, 0xae, 0x3b, 0x2b, 0xdf,
    0xaa, 0xc7, 0xcf, 0xa4, 0x6c, 0xc5, 0x06, 0xd3, 0x6f, 0xb8, 0x5e, 0x12, 0x69,
    0x8b, 0x34, 0x09, 0x78, 0xe6, 0xc4, 0x4e, 0x17, 0x71, 0xc1, 0x60, 0x34, 0x68,
    0xc8, 0x77, 0x38, 0x2a, 0x19, 0x50, 0x9c, 0xbc, 0x47, 0x10, 0x49, 0x93, 0x4c,
    0x81, 0xc9, 0x17, 0xc0, 0xb5, 0x3f, 0x76, 0xf9, 0x18, 0x9f, 0x89, 0xd7, 0x15,
    0xf5, 0x55, 0x9d, 0xcd, 0x89, 0x05, 0xb6, 0xbb, 0x6f, 0xb0, 0x69, 0x3d, 0x66,
    0x3b, 0xb8, 0x38, 0x38, 0x36, 0x2f, 0x21, 0x34, 0xc4, 0x39, 0xf2, 0x9b, 0x8b,
    0x59, 0x74, 0x6d, 0x81, 0x34, 0xb2, 0xe0, 0x23, 0xdf, 0xd6, 0xc6, 0x1c, 0xbb,
    0x7e, 0xf5, 0x60, 0x28, 0xff, 0xaa, 0x02, 0x99, 0x66, 0x61, 0x17, 0xcd, 0x4f,
    0xbe, 0x2c, 0xe2, 0x75, 0x0b, 0x36, 0x3b, 0xb9, 0xa7, 0xc8, 0xd3, 0xd5, 0x98,
    0x62, 0xe7, 0xe1, 0x88, 0x49, 0x8a, 0x9a, 0xc8, 0xd3, 0x7f, 0xeb, 0xa4, 0x05,
    0x55, 0x13, 0xab, 0x64, 0x4b, 0x52, 0xce, 0xdb, 0x90, 0x09, 0xbc, 0xaa, 0x61,
    0x3a, 0x82, 0x0e, 0x81, 0x73, 0xfe, 0x40, 0x4a, 0xd4, 0x6d, 0x44, 0x91, 0xb0,
    0x8a, 0xc3, 0x88, 0x11, 0x7e, 0xc0, 0xd9, 0x50, 0x0b, 0x91, 0x98, 0x1b, 0x7f,
    0x6f, 0x19, 0xaa, 0xde, 0x98, 0x96, 0xb6, 0xed, 0x0e, 0x64, 0x01, 0x71, 0x15,
    0xd9, 0x5d, 0x42, 0x47, 0x05
};
const std::array<std::array<uint8_t, 24>, TEST_VEC_LEN> poly192_from_8_poly192_output = {{
    { 0x3c, 0x3a, 0xea, 0xb7, 0x2c, 0xb9, 0x4f, 0x34, 0x1f, 0x52, 0x60, 0x28,
      0x55, 0x14, 0x79, 0xe4, 0x33, 0x5a, 0x9e, 0x7e, 0x29, 0xc7, 0x69, 0xab },
    { 0x92, 0x47, 0x12, 0x7d, 0x40, 0x11, 0x26, 0xa9, 0xe2, 0x17, 0xb3, 0xa3,
      0xa6, 0xe9, 0xe0, 0x2f, 0xa3, 0x09, 0x4d, 0x1d, 0xc2, 0x80, 0x77, 0x7c },
    { 0xe6, 0x44, 0x23, 0x75, 0xa7, 0x1f, 0xad, 0x48, 0xcd, 0xfe, 0x27, 0x10,
      0x8e, 0x5b, 0x27, 0xc2, 0xcd, 0xb5, 0xb4, 0x19, 0x01, 0xb5, 0x7d, 0x1f },
    { 0x65, 0x6b, 0xc1, 0xe3, 0x2a, 0x41, 0x3e, 0x9d, 0x58, 0x79, 0x3c, 0x30,
      0x1b, 0x1b, 0xae, 0x2f, 0x38, 0xd3, 0xac, 0xf9, 0x51, 0x0b, 0x99, 0x70 },
    { 0xc7, 0x30, 0x1a, 0xcc, 0x3e, 0x51, 0x43, 0xd9, 0xfe, 0xba, 0x4b, 0x9e,
      0x22, 0xcc, 0xa6, 0xcd, 0x72, 0x62, 0x66, 0xf6, 0xbd, 0xbd, 0x78, 0x0a },
    { 0x3e, 0xcb, 0xf0, 0x74, 0x7e, 0x8e, 0x43, 0x81, 0x29, 0x53, 0x39, 0x5c,
      0x24, 0x60, 0x11, 0xb1, 0x39, 0x89, 0xea, 0xea, 0x3e, 0x7e, 0x1d, 0xe3 },
    { 0x0c, 0xb2, 0xd5, 0xc5, 0x99, 0xa9, 0x25, 0xb7, 0xf9, 0xb1, 0x40, 0x49,
      0x6c, 0xd0, 0xe0, 0x01, 0x8e, 0x40, 0xc2, 0x9d, 0x3f, 0x40, 0x4a, 0x5c },
    { 0xe1, 0x9a, 0x20, 0x3e, 0x64, 0x9f, 0xb6, 0x29, 0x99, 0x2b, 0x0b, 0xe6,
      0x31, 0x80, 0x38, 0xbc, 0xe5, 0xdc, 0x13, 0x1c, 0xbc, 0xb8, 0x0d, 0x4b },
    { 0xee, 0x22, 0xaa, 0x00, 0xd4, 0xf5, 0xf3, 0x1d, 0xb5, 0xca, 0x63, 0x01,
      0xed, 0xb8, 0x4f, 0xe1, 0x43, 0x7c, 0x8d, 0x96, 0x53, 0xaa, 0x6b, 0x50 },
    { 0x8c, 0x5f, 0xc7, 0xd9, 0xe4, 0xaa, 0xe7, 0xa2, 0x3b, 0x4a, 0x60, 0xcf,
      0xa9, 0x72, 0xf1, 0x57, 0x03, 0x83, 0xfa, 0xc4, 0x85, 0x00, 0x80, 0xef },
    { 0xb4, 0xaa, 0xed, 0x7a, 0x8e, 0xec, 0x3c, 0xb4, 0x44, 0x70, 0xae, 0x68,
      0x4e, 0x5f, 0x84, 0x45, 0xbf, 0xd5, 0xfe, 0x76, 0xc2, 0x45, 0x4e, 0x7c },
    { 0x3d, 0x6d, 0x5c, 0x4a, 0x0a, 0xe2, 0x61, 0x40, 0xa0, 0x62, 0x8f, 0xc6,
      0xe4, 0xda, 0x48, 0xb9, 0x0f, 0x75, 0xd1, 0xd2, 0xa9, 0xa0, 0x80, 0xe7 },
    { 0x1c, 0x70, 0x54, 0xb2, 0x13, 0x82, 0x99, 0x01, 0xf6, 0xb7, 0x9d, 0xe2,
      0x1f, 0x8b, 0xb5, 0x1d, 0x02, 0x29, 0x74, 0x47, 0x80, 0x31, 0xf5, 0x87 },
    { 0x09, 0x67, 0x66, 0xf5, 0xd6, 0x6f, 0x46, 0xe4, 0xf6, 0xc7, 0xff, 0x0e,
      0xe2, 0x4f, 0x71, 0x96, 0xb4, 0x8f, 0x04, 0x27, 0xf8, 0x66, 0x2e, 0xa1 },
    { 0x38, 0x03, 0xc9, 0x4b, 0xe7, 0xfe, 0xaf, 0xc7, 0xad, 0xd9, 0x91, 0xa9,
      0xa1, 0x7a, 0x66, 0x74, 0x90, 0xc1, 0x94, 0xf8, 0x26, 0x6a, 0x16, 0xed },
    { 0xab, 0x29, 0x95, 0x5d, 0x25, 0x81, 0x8c, 0x3d, 0x45, 0x89, 0xa4, 0x94,
      0x55, 0x23, 0x74, 0xb3, 0xa1, 0x75, 0x76, 0xf6, 0xc1, 0x1d, 0x8a, 0x57 },
}};

const std::array<uint8_t, 256 * TEST_VEC_LEN> poly256_from_8_poly256_input = {
    0xc2, 0xf6, 0xc2, 0x9d, 0x90, 0xd5, 0xf0, 0xac, 0xea, 0xfd, 0x87, 0x51,
    0xf1, 0x88, 0x0e, 0xfc, 0x9a, 0xb7, 0x0c, 0x2b, 0x8a, 0x2a, 0xe5, 0x49, 0x76,
    0xac, 0x9e, 0x0e, 0xfb, 0xc8, 0x8c, 0xd6, 0x7d, 0x79, 0x84, 0x07, 0xe8, 0xdb,
    0x50, 0x17, 0xaa, 0xe4, 0xcb, 0xe8, 0xf2, 0x49, 0x34, 0x2f, 0x0c, 0x52, 0x4c,
    0xe4, 0x44, 0x2b, 0x0a, 0xf0, 0xcb, 0x90, 0x3f, 0x64, 0xc8, 0x18, 0x57, 0x78,
    0x95, 0x31, 0x5e, 0x58, 0xd4, 0x85, 0x50, 0x84, 0x58, 0x28, 0x6b, 0x52, 0x1c,
    0x54, 0x1f, 0xcd, 0xbb, 0x10, 0x6f, 0x38, 0x92, 0x75, 0x98, 0x7d, 0xa6, 0xe8,
    0x93, 0x60, 0x65, 0x95, 0x4d, 0x3c, 0xa9, 0x45, 0x6a, 0x82, 0x85, 0x16, 0x78,
    0x15, 0xb7, 0x57, 0x7b, 0x06, 0x08, 0x0c, 0xd8, 0x79, 0xee, 0xdc, 0x73, 0x69,
    0xfc, 0x29, 0xbe, 0xf6, 0x1f, 0xae, 0x73, 0xe3, 0x22, 0x19, 0x84, 0x51, 0x9e,
    0xa4, 0x71, 0x78, 0x19, 0xec, 0xd1, 0xea, 0xd7, 0x60, 0xf1, 0x0e, 0xf3, 0x80,
    0xe9, 0x65, 0xaf, 0x2c, 0x06, 0x60, 0x4c, 0x30, 0x02, 0x16, 0xb1, 0x41, 0x64,
    0xfe, 0x85, 0xb3, 0x80, 0xd9, 0xe4, 0xa6, 0x0a, 0xd0, 0x34, 0xcb, 0xfe, 0x80,
    0xdc, 0xfb, 0xff, 0xd4, 0xb8, 0x95, 0xf6, 0xd1, 0x44, 0xad, 0x5f, 0x19, 0x19,
    0x26, 0xff, 0x48, 0x38, 0x15, 0xba, 0x55, 0x1e, 0x65, 0x80, 0xc4, 0x71, 0x19,
    0x8f, 0xcb, 0x06, 0xa4, 0x7c, 0x62, 0x4e, 0xc5, 0x60, 0xdc, 0x12, 0x35, 0xf2,
    0xe0, 0xee, 0xc7, 0xf6, 0x34, 0xe9, 0x68, 0x0e, 0x6f, 0xfa, 0x22, 0xa3, 0xa4,
    0x1f, 0x57, 0xc2, 0x63, 0x15, 0x86, 0xcb, 0x26, 0x40, 0x22, 0xce, 0x18, 0xb6,
    0x79, 0x3c, 0xfe, 0x01, 0xbe, 0xd1, 0x18, 0x76, 0x93, 0xb9, 0x53, 0x7b, 0xd4,
    0xe9, 0x40, 0xc5, 0xb4, 0x6b, 0x01, 0x9d, 0xfd, 0x49, 0x71, 0x4f, 0xb3, 0x71,
    0x6f, 0xa0, 0xd8, 0x45, 0x61, 0x33, 0x6c, 0xef, 0xb4, 0x84, 0x0a, 0x37, 0x18,
    0x78, 0xe4, 0xce, 0xc3, 0x83, 0x27, 0x44, 0x55, 0x46, 0x94, 0x73, 0x97, 0x03,
    0xab, 0x7a, 0x29, 0x0f, 0x42, 0x9c, 0xa7, 0x7f, 0x67, 0x4b, 0x13, 0xc1, 0xbc,
    0x7b, 0x9f, 0x87, 0xba, 0x63, 0x5e, 0x79, 0x39, 0xf9, 0x75, 0x6b, 0x83, 0xc6,
    0xc7, 0xf4, 0xdb, 0x0e, 0x7f, 0x72, 0x2c, 0x78, 0x5f, 0x7a, 0xec, 0x71, 0x70,
    0x2c, 0xf0, 0xa8, 0xb0, 0x80, 0x05, 0xf5, 0x68, 0xda, 0xaf, 0xcc, 0xc3, 0xa9,
    0x5a, 0x3a, 0x3b, 0x12, 0x1f, 0x1f, 0x96, 0x65, 0x52, 0xb1, 0xa9, 0xfd, 0x9f,
    0xe0, 0x68, 0x1e, 0xfb, 0x0c, 0x9b, 0x94, 0x64, 0xa8, 0x9b, 0x58, 0x98, 0xf3,
    0xb4, 0x66, 0xd8, 0x95, 0xb9, 0x10, 0xb1, 0xfb, 0x47, 0x73, 0xcd, 0x56, 0xc0,
    0x19, 0x39, 0xff, 0x10, 0xda, 0x7c, 0x8f, 0x97, 0x81, 0xb6, 0x56, 0xb2, 0x4c,
    0xe5, 0x3b, 0xa6, 0x23, 0x91, 0xd5, 0x1c, 0xd2, 0xa2, 0x30, 0x67, 0x2a, 0x3b,
    0xc4, 0xa8, 0xa6, 0xdb, 0xe6, 0xb9, 0x87, 0x1b, 0xa9, 0x32, 0xbb, 0xf1, 0xfd,
    0x82, 0x75, 0x4a, 0x57, 0xaa, 0x98, 0x4f, 0xf4, 0xcd, 0xf1, 0xc6, 0xf8, 0x51,
    0xed, 0x66, 0xd9, 0x8d, 0x3d, 0x2a, 0x62, 0x73, 0x6c, 0x2a, 0xf0, 0xe3, 0x32,
    0xf5, 0x88, 0x5a, 0xe8, 0xcf, 0x8a, 0xfa, 0xc9, 0x98, 0x99, 0x82, 0x81, 0x7b,
    0xe7, 0x1f, 0xd9, 0x81, 0xfe, 0x62, 0xc6, 0x04, 0xe5, 0x75, 0xee, 0xdd, 0xa4,
    0xcb, 0x98, 0x25, 0x2a, 0x04, 0xf4, 0xe9, 0xa2, 0xd3, 0x54, 0xd1, 0xb0, 0xcc,
    0xb8, 0x75, 0xa1, 0x62, 0x99, 0x2e, 0x5b, 0x51, 0xcd, 0x5b, 0x05, 0xa1, 0x7c,
    0x69, 0xa2, 0x74, 0x05, 0x4a, 0x92, 0xae, 0xdc, 0xc5, 0x6f, 0x8d, 0x18, 0x7a,
    0xfb, 0x00, 0x08, 0x30, 0x2f, 0x46, 0x45, 0xf1, 0x9a, 0xe4, 0x1a, 0xed, 0x25,
    0x08, 0xf0, 0x8f, 0xe5, 0x19, 0xf5, 0x3c, 0x68, 0xea, 0x44, 0x25, 0xe8, 0x3f,
    0x1f, 0x44, 0xc2, 0x5a, 0x1e, 0x4d, 0x67, 0xc0, 0x10, 0xca, 0x2c, 0xa4, 0x4b,
    0x2c, 0x67, 0x26, 0xf2, 0x6f, 0xb5, 0xb8, 0xa3, 0x7e, 0x3c, 0x69, 0x7b, 0x96,
    0x04, 0xe1, 0x99, 0x60, 0x86, 0x41, 0x52, 0xe7, 0x4e, 0x0d, 0x80, 0x03, 0xff,
    0x07, 0x93, 0x6a, 0xb1, 0xfc, 0xdf, 0xc8, 0x6e, 0x48, 0x5b, 0x1c, 0x0d, 0x4a,
    0xa7, 0x23, 0x6d, 0x7e, 0x2f, 0xcf, 0xbb, 0xb1, 0x79, 0x69, 0x12, 0x49, 0x34,
    0xf5, 0xb2, 0x95, 0xd8, 0x5b, 0x67, 0x58, 0xcd, 0xcd, 0xa4, 0xba, 0x4c, 0xa4,
    0xa3, 0x5a, 0xe6, 0x1f, 0xb0, 0xad, 0xac, 0xdd, 0x17, 0x75, 0xf6, 0xef, 0xb0,
    0x23, 0x6d, 0x08, 0xe7, 0x6d, 0x6f, 0x2a, 0x10, 0xc4, 0x4d, 0x03, 0x9f, 0xf0,
    0x16, 0xea, 0xa8, 0x84, 0x38, 0xbd, 0x43, 0x1d, 0x03, 0x81, 0xf6, 0xd8, 0x42,
    0xca, 0x1b, 0x94, 0x65, 0xfe, 0x9f, 0xae, 0x3b, 0x69, 0x2d, 0x3b, 0x88, 0xdf,
    0xc5, 0x17, 0x35, 0x29, 0x88, 0xcf, 0x57, 0xd0, 0xbf, 0x1d, 0xca, 0x41, 0x4b,
    0x24, 0xae, 0x66, 0x8f, 0x4d, 0xca, 0xa3, 0xb0, 0xfe, 0xff, 0xf1, 0x91, 0x43,
    0x7b, 0x4f, 0x96, 0x8d, 0x98, 0x4a, 0x79, 0xfd, 0x0d, 0xd2, 0xb5, 0xbc, 0xdb,
    0x66, 0x3a, 0x48, 0xbc, 0x18, 0xc6, 0x5f, 0x0a, 0x79, 0x02, 0x73, 0x1e, 0xc0,
    0x9b, 0xb6, 0x7b, 0x55, 0xa0, 0x9c, 0xae, 0x44, 0x5c, 0x5d, 0x5f, 0xd7, 0x16,
    0x7d, 0x19, 0x91, 0xab, 0x98, 0xbf, 0x68, 0x30, 0xae, 0xa1, 0x08, 0x52, 0xec,
    0xf8, 0x4c, 0x45, 0xef, 0x35, 0x2d, 0xd1, 0xaf, 0x83, 0x0c, 0x8b, 0xc6, 0x4b,
    0x70, 0xd1, 0x6f, 0x6a, 0x92, 0xa0, 0xa7, 0xe2, 0xb7, 0x81, 0xf3, 0xb6, 0x83,
    0xd0, 0x04, 0xa5, 0x17, 0x3a, 0xbe, 0x05, 0x04, 0x21, 0xd6, 0x8a, 0x75, 0xe1,
    0x8e, 0x07, 0x04, 0xde, 0xa3, 0xfa, 0xde, 0x98, 0x1f, 0x74, 0x83, 0x0c, 0xe8,
    0xd3, 0xa7, 0x1f, 0xf3, 0xd7, 0x10, 0x03, 0x2a, 0x59, 0x00, 0x33, 0x07, 0x2c,
    0x15, 0x92, 0x41, 0x60, 0xdb, 0xa3, 0xc8, 0x99, 0x4f, 0x34, 0x5a, 0x6a, 0x6b,
    0x06, 0xd9, 0x73, 0xaa, 0x7b, 0x35, 0xab, 0xa9, 0xdc, 0xf8, 0x6b, 0xd2, 0x54,
    0x2b, 0x5b, 0x9f, 0x8f, 0x59, 0xeb, 0x1c, 0x41, 0x95, 0xc8, 0x8c, 0x0a, 0x1e,
    0xb6, 0x61, 0xd8, 0x3d, 0x22, 0xc1, 0x8b, 0xb4, 0x38, 0x7f, 0xed, 0x9d, 0x08,
    0x97, 0x23, 0x57, 0xdd, 0x5a, 0xa0, 0xba, 0x29, 0x7a, 0xe9, 0xb9, 0xac, 0x25,
    0xbc, 0x85, 0xfa, 0xca, 0x77, 0x9b, 0x84, 0x1b, 0xd2, 0xb0, 0xb5, 0x8b, 0x51,
    0xfe, 0xfb, 0xbc, 0xa5, 0x67, 0xe5, 0x3a, 0x06, 0xa9, 0xde, 0x6a, 0xa8, 0x66,
    0x55, 0x97, 0xc1, 0x1d, 0x59, 0x04, 0xfd, 0x35, 0x4e, 0x92, 0xbd, 0xfa, 0xee,
    0x11, 0xc2, 0xdd, 0x27, 0x59, 0xc6, 0x03, 0xcb, 0x2d, 0xf4, 0x33, 0x03, 0x8f,
    0x8d, 0x37, 0x2f, 0x0e, 0x05, 0xbf, 0xcb, 0x86, 0x16, 0x21, 0x01, 0x63, 0x59,
    0x29, 0xc8, 0x24, 0x1e, 0x9e, 0x32, 0xe3, 0xb1, 0x90, 0x58, 0x1d, 0x96, 0x96,
    0xe5, 0xd4, 0xb7, 0xd0, 0x53, 0x91, 0x70, 0x1f, 0xec, 0x33, 0xe2, 0x4d, 0x16,
    0x4f, 0x1c, 0x88, 0x79, 0xf7, 0xa4, 0xd7, 0x24, 0xe3, 0x13, 0x71, 0x45, 0x2d,
    0xbb, 0xda, 0x95, 0xc4, 0x12, 0xec, 0x3e, 0x53, 0xcb, 0x63, 0x5b, 0xb8, 0x32,
    0xc3, 0xe6, 0x17, 0xbc, 0x40, 0x11, 0xb1, 0x69, 0x06, 0xaf, 0x69, 0xb9, 0x41,
    0x9c, 0x08, 0xe0, 0x70, 0x26, 0xb9, 0xd5, 0xea, 0x45, 0x53, 0x77, 0x38, 0x11,
    0x68, 0x59, 0x0d, 0x0a, 0xc8, 0x89, 0x8c, 0x8b, 0x2d, 0xa7, 0x68, 0x9f, 0x4d,
    0xb5, 0xbb, 0x19, 0xca, 0xf4, 0xa9, 0xff, 0x0c, 0xdb, 0x9e, 0x4f, 0x70, 0x0e,
    0x9f, 0x2c, 0x62, 0x44, 0xce, 0xa5, 0x43, 0x34, 0xc1, 0x32, 0xb1, 0xd0, 0x8d,
    0xe5, 0x40, 0xcb, 0x93, 0x2b, 0x3e, 0xd1, 0x8a, 0xac, 0x4d, 0x47, 0xfb, 0x72,
    0x22, 0x6d, 0xf2, 0xcf, 0xce, 0xba, 0xa5, 0x3b, 0x91, 0xe9, 0xf2, 0x19, 0xb5,
    0x39, 0xfc, 0x7d, 0x8c, 0x39, 0x02, 0x65, 0x87, 0x38, 0x79, 0x21, 0xc2, 0xb6,
    0xff, 0x4f, 0x55, 0xa4, 0xaa, 0x2a, 0xc6, 0x96, 0xec, 0xc2, 0xe2, 0xee, 0x96,
    0x79, 0x42, 0x13, 0x59, 0x86, 0xc9, 0xb3, 0x9e, 0x14, 0x7b, 0x88, 0xe9, 0xbe,
    0x3d, 0x59, 0x4f, 0x8b, 0x38, 0x09, 0xb4, 0x9b, 0x87, 0x00, 0xe5, 0x40, 0x84,
    0x1d, 0xcb, 0xd6, 0x24, 0x29, 0x3f, 0xe2, 0xff, 0x69, 0x02, 0x47, 0xc9, 0x6a,
    0x2b, 0x1b, 0x61, 0x10, 0x63, 0xb8, 0x8f, 0xcf, 0x7e, 0x1c, 0x54, 0x68, 0x72,
    0xa1, 0x69, 0xdb, 0x77, 0x31, 0x6c, 0x62, 0x9c, 0xea, 0xe4, 0x5d, 0xeb, 0xbd,
    0x84, 0xfb, 0xbe, 0xc2, 0x26, 0xac, 0x04, 0xb3, 0xfa, 0x0b, 0x5d, 0x93, 0xeb,
    0xe8, 0xb4, 0x65, 0x47, 0x1b, 0x20, 0xf6, 0xac, 0x55, 0x96, 0x47, 0x9d, 0x01,
    0xe5, 0x96, 0x64, 0x46, 0xc6, 0x78, 0xad, 0xef, 0x1e, 0x46, 0x51, 0xdd, 0x71,
    0x7a, 0x05, 0x63, 0x40, 0xbf, 0x69, 0xa6, 0x87, 0x39, 0x70, 0x26, 0x5f, 0xdf,
    0x54, 0x55, 0xd4, 0x9a, 0x8c, 0x0a, 0x97, 0xb3, 0xce, 0x97, 0xe1, 0x63, 0x67,
    0xd8, 0x01, 0x79, 0x02, 0x49, 0xca, 0x17, 0x69, 0x61, 0xb2, 0x65, 0x42, 0xf5,
    0x78, 0x46, 0x51, 0x7b, 0xb1, 0x9b, 0xcd, 0xe9, 0xa8, 0x36, 0x48, 0x8f, 0x12,
    0xfa, 0x4a, 0xee, 0xe5, 0x96, 0x1e, 0xf2, 0x08, 0xdd, 0x03, 0x3c, 0x00, 0x69,
    0x41, 0x1b, 0x58, 0x7c, 0xd7, 0x16, 0x86, 0x9d, 0x98, 0x15, 0xa6, 0xbe, 0xa4,
    0x54, 0x07, 0xe3, 0x02, 0x59, 0xc3, 0x82, 0x7f, 0x51, 0x2b, 0xe3, 0x3c, 0x5a,
    0x90, 0xa2, 0x57, 0xdb, 0x47, 0xd7, 0x55, 0xc9, 0x50, 0xba, 0x09, 0xe2, 0xfe,
    0x8c, 0x3b, 0x87, 0x2d, 0x1c, 0xf6, 0xed, 0x65, 0xaa, 0xa3, 0x02, 0xbb, 0x15,
    0x15, 0x1e, 0x5b, 0xb1, 0x26, 0xec, 0xc1, 0x6f, 0x93, 0xdf, 0xa2, 0x70, 0x39,
    0xf0, 0x53, 0x41, 0x41, 0x04, 0xe3, 0xd2, 0xaf, 0x7c, 0x59, 0x2e, 0x65, 0x1c,
    0xb6, 0x01, 0x5d, 0x09, 0x5d, 0x61, 0xd3, 0x91, 0xbc, 0xf9, 0x74, 0x0a, 0xc8,
    0xf4, 0xc1, 0x8b, 0x32, 0x89, 0x44, 0xf3, 0x2a, 0xfc, 0x46, 0x0b, 0x6e, 0x69,
    0xd4, 0x08, 0x21, 0xfe, 0x20, 0x22, 0xb1, 0xef, 0x11, 0x55, 0x48, 0xb4, 0x5b,
    0x58, 0x9b, 0x33, 0x0e, 0xe0, 0xcf, 0x46, 0x9a, 0x08, 0x09, 0xc8, 0xcc, 0xe4,
    0x9b, 0xd8, 0x8d, 0x36, 0x16, 0xb9, 0x43, 0xfb, 0x8f, 0x5d, 0x30, 0xcf, 0xe4,
    0xd4, 0x9b, 0x74, 0xeb, 0x53, 0x77, 0x23, 0x3f, 0x08, 0x11, 0x4a, 0x7f, 0x82,
    0x13, 0xe1, 0xb1, 0x1b, 0x8f, 0xf8, 0xbf, 0x57, 0xda, 0x6f, 0xc4, 0x63, 0x87,
    0x98, 0x4e, 0x3f, 0x29, 0x1b, 0x09, 0x84, 0x3b, 0x6f, 0x93, 0xca, 0x60, 0x8e,
    0x34, 0x32, 0xc7, 0xc9, 0x4b, 0xc7, 0xec, 0xc3, 0x89, 0xc1, 0x8d, 0xae, 0x8f,
    0xc2, 0x41, 0xf4, 0x7d, 0x4c, 0x6a, 0x60, 0x14, 0x48, 0x25, 0x54, 0x5d, 0x77,
    0x29, 0xf3, 0xd8, 0x4e, 0xf0, 0x44, 0xd0, 0xef, 0xa7, 0x77, 0x24, 0xcc, 0x39,
    0xbb, 0x73, 0x64, 0xc9, 0x7c, 0xc3, 0x35, 0xc2, 0x4f, 0x8a, 0xb0, 0xc4, 0x20,
    0x38, 0x42, 0xdd, 0x19, 0xea, 0x11, 0x82, 0xa4, 0x05, 0x4e, 0x02, 0x01, 0x76,
    0x6a, 0xa7, 0x8f, 0xc8, 0xaa, 0xb2, 0x70, 0x3c, 0x52, 0x26, 0xb9, 0x8f, 0x39,
    0x9a, 0xc1, 0x1e, 0x34, 0xc9, 0x4a, 0x25, 0x82, 0x0d, 0x5d, 0xc1, 0xa3, 0xa8,
    0xfa, 0xdd, 0x92, 0xa0, 0xf0, 0xad, 0xc6, 0x0c, 0x4f, 0x32, 0xc2, 0xf5, 0x4f,
    0xab, 0x86, 0xd3, 0xcd, 0x72, 0xfb, 0xc1, 0xb8, 0x51, 0x0c, 0xab, 0x1f, 0x62,
    0x4d, 0xc4, 0x47, 0xe4, 0xa8, 0x7f, 0x2f, 0x0e, 0x38, 0x45, 0x8a, 0x9b, 0x12,
    0xd7, 0x4e, 0x84, 0x08, 0x12, 0x4a, 0x57, 0x29, 0x89, 0xce, 0x28, 0xb4, 0x28,
    0xf3, 0x60, 0x58, 0xd6, 0x4e, 0xf3, 0x5d, 0x7f, 0xe4, 0x64, 0x15, 0x05, 0xad,
    0x34, 0x9e, 0x81, 0xb7, 0xd4, 0xd6, 0x8f, 0xee, 0x2e, 0x98, 0x00, 0x50, 0xf2,
    0x87, 0x8a, 0x3b, 0xbf, 0xeb, 0x0d, 0x21, 0x56, 0x74, 0xba, 0xfa, 0x42, 0x51,
    0xe5, 0x97, 0x1c, 0x86, 0x7f, 0xa8, 0xe1, 0x93, 0x90, 0x7a, 0x71, 0xeb, 0x1e,
    0x53, 0x31, 0x94, 0xbd, 0x16, 0xae, 0xc7, 0xfb, 0x97, 0x5b, 0x56, 0xd6, 0xb4,
    0xb6, 0x62, 0xce, 0x81, 0x33, 0xf1, 0x62, 0x07, 0x7a, 0x32, 0xcd, 0xa3, 0x34,
    0x52, 0x72, 0xf1, 0x70, 0xce, 0x4d, 0x77, 0xff, 0x16, 0x4b, 0xff, 0x12, 0x67,
    0xac, 0x7a, 0x01, 0xc9, 0xa8, 0x79, 0x84, 0x0b, 0x6e, 0xef, 0x14, 0x37, 0xa1,
    0x25, 0xf6, 0x6a, 0xaf, 0xc6, 0xcc, 0x88, 0x31, 0xe5, 0xfc, 0xe5, 0x90, 0x18,
    0xa0, 0x5d, 0xde, 0xe7, 0xca, 0x82, 0x33, 0x29, 0x86, 0x65, 0x4a, 0xd5, 0xec,
    0x58, 0x32, 0xa5, 0x4d, 0x0b, 0x62, 0x41, 0x5f, 0x80, 0xec, 0xd6, 0xaf, 0x6e,
    0x78, 0xe8, 0x30, 0xc8, 0x14, 0xc0, 0x91, 0xe0, 0xed, 0x5f, 0xce, 0x22, 0x05,
    0x6a, 0x78, 0x9b, 0xa9, 0xbd, 0x55, 0x07, 0x98, 0x40, 0x12, 0x3b, 0x96, 0x81,
    0x07, 0x0c, 0x45, 0x7e, 0x53, 0x39, 0x35, 0x1d, 0x33, 0xe2, 0x1d, 0xab, 0xa6,
    0xbf, 0xc9, 0xdd, 0x80, 0xbd, 0x1e, 0x5d, 0xfc, 0x4a, 0x6e, 0x20, 0x33, 0xe2,
    0x9b, 0x86, 0x7f, 0x30, 0x27, 0xe9, 0xf4, 0xab, 0x4f, 0x33, 0x09, 0x8d, 0x44,
    0x6a, 0x2e, 0xa3, 0xea, 0xa1, 0xa6, 0x0c, 0xac, 0x53, 0x8b, 0xc0, 0x7e, 0x37,
    0x21, 0x54, 0x16, 0x98, 0xa5, 0xfb, 0xd4, 0x18, 0x38, 0x64, 0xbf, 0x3d, 0xd9,
    0x63, 0x88, 0x15, 0x1d, 0xb5, 0xa0, 0xa2, 0xa4, 0x23, 0x28, 0x58, 0x5e, 0xfd,
    0x8b, 0x6c, 0x0e, 0xc0, 0x27, 0x90, 0x1b, 0x34, 0x1e, 0x6b, 0xfd, 0x5e, 0xfd,
    0x0f, 0x50, 0x64, 0xc0, 0x08, 0x6f, 0x1a, 0xa3, 0x46, 0x70, 0xbe, 0xff, 0x1d,
    0x18, 0x73, 0x32, 0x5c, 0xd1, 0xee, 0xcb, 0x51, 0x51, 0xc3, 0xfc, 0x6d, 0xea,
    0x42, 0xef, 0x8d, 0x07, 0xe7, 0x0b, 0xc6, 0x0b, 0xe5, 0x3a, 0x27, 0xaa, 0xc1,
    0xec, 0x50, 0x54, 0x1f, 0x17, 0xdd, 0x31, 0xa1, 0x0b, 0xc1, 0xfa, 0x8b, 0xf9,
    0x73, 0xab, 0x4a, 0x64, 0x71, 0xe9, 0x11, 0xf4, 0xa5, 0x2d, 0x3a, 0x5b, 0x4d,
    0xa3, 0x21, 0x56, 0x7b, 0x2c, 0xf6, 0xf7, 0xa2, 0x4e, 0x92, 0x65, 0x1c, 0x7f,
    0x18, 0xc9, 0xc6, 0x5f, 0x5e, 0xfe, 0x26, 0x73, 0xa7, 0x63, 0xd7, 0xef, 0x74,
    0xeb, 0xab, 0x71, 0x44, 0x2a, 0x54, 0x4d, 0xb3, 0xf0, 0x80, 0x0d, 0x18, 0x31,
    0x66, 0x62, 0x1b, 0x81, 0xb7, 0x4f, 0xd5, 0xa3, 0x62, 0x7b, 0x0d, 0xf7, 0x4d,
    0x87, 0x59, 0xab, 0x7e, 0x7d, 0x29, 0xd9, 0x87, 0x4a, 0xcb, 0xdf, 0xf8, 0x4f,
    0x06, 0x91, 0x22, 0xac, 0x5d, 0x90, 0x1d, 0xe7, 0x91, 0x80, 0x67, 0x43, 0x78,
    0x50, 0xe6, 0x9f, 0xbf, 0xd5, 0xab, 0xf6, 0x10, 0x86, 0x3d, 0xc5, 0xc1, 0xbe,
    0x71, 0x5f, 0x13, 0xf0, 0x10, 0x8a, 0x7a, 0x09, 0xe1, 0xc5, 0xb7, 0x30, 0xa5,
    0xe8, 0x8e, 0xbe, 0x58, 0x74, 0x0c, 0xfe, 0x8d, 0x62, 0xf3, 0x3e, 0xe9, 0x33,
    0x82, 0xbe, 0x2a, 0xe7, 0xed, 0xbf, 0x77, 0x53, 0x91, 0xf0, 0x93, 0x34, 0xb4,
    0xdf, 0xed, 0x75, 0x85, 0xcf, 0xe9, 0x4f, 0xdb, 0x98, 0x54, 0x1b, 0x4d, 0xfb,
    0x44, 0x02, 0xce, 0x10, 0x9e, 0xa7, 0x2e, 0x38, 0x03, 0x57, 0xb8, 0x41, 0xd8,
    0xf1, 0xcf, 0x73, 0x75, 0xa7, 0xba, 0x11, 0x4f, 0x07, 0x70, 0x60, 0xc4, 0xe1,
    0xa9, 0xbb, 0xda, 0x0e, 0xd7, 0x69, 0x41, 0x02, 0xdf, 0xa1, 0x60, 0xe2, 0x04,
    0x94, 0xa3, 0xa0, 0xc3, 0x4e, 0xea, 0xb1, 0x88, 0x11, 0x6a, 0x03, 0x90, 0xe3,
    0x67, 0x7b, 0x0d, 0xa6, 0x8d, 0x43, 0xa5, 0x94, 0x4d, 0x5b, 0x4a, 0x97, 0x59,
    0x71, 0xbd, 0xe3, 0xad, 0xfb, 0x7a, 0x7b, 0xf0, 0x50, 0xd1, 0x4e, 0x4e, 0x6a,
    0xe8, 0xba, 0x55, 0x18, 0xc2, 0xd2, 0x8a, 0x6b, 0x52, 0xfb, 0x14, 0x4a, 0xa3,
    0x3e, 0x70, 0xf9, 0xb7, 0x39, 0xe7, 0x45, 0x7b, 0xb2, 0x17, 0x5b, 0x8f, 0x3d,
    0x91, 0xfe, 0x04, 0x8c, 0x9e, 0xbc, 0x22, 0x30, 0x1c, 0x14, 0x62, 0x11, 0x4e,
    0xf7, 0x86, 0xbc, 0xf4, 0xa1, 0x18, 0xa1, 0x6e, 0xeb, 0xce, 0x67, 0xf0, 0x9f,
    0x75, 0xf8, 0x10, 0x22, 0xe2, 0x95, 0x4a, 0xb9, 0xa8, 0x29, 0x8c, 0x94, 0x73,
    0xfa, 0x8f, 0xa9, 0x84, 0xac, 0xb3, 0xd9, 0xa2, 0x0c, 0x29, 0xc6, 0x31, 0xf5,
    0x93, 0x5c, 0xd4, 0x72, 0x53, 0x19, 0x10, 0x9d, 0x6f, 0xcf, 0x83, 0xc3, 0x41,
    0xf0, 0xc4, 0x04, 0x44, 0x69, 0x36, 0x41, 0x1d, 0xbb, 0x9c, 0x3c, 0x70, 0xa9,
    0x8c, 0xff, 0x4a, 0x80, 0x20, 0x8e, 0x17, 0x1e, 0x37, 0x65, 0x53, 0x42, 0x1a,
    0x95, 0x4f, 0xc0, 0x1c, 0xb0, 0x60, 0xf6, 0x98, 0xe0, 0x91, 0x41, 0xcd, 0xb9,
    0x12, 0x0a, 0xf3, 0x32, 0x2f, 0xac, 0x47, 0x0b, 0xb8, 0xdd, 0x62, 0xb5, 0xd8,
    0xad, 0xf2, 0x0a, 0x39, 0x1b, 0xd7, 0xfa, 0x4b, 0x2a, 0xae, 0xfb, 0x8f, 0x6a,
    0x35, 0x9c, 0x5e, 0xeb, 0xea, 0xe8, 0xd8, 0x58, 0x81, 0x20, 0x5d, 0x6c, 0x60,
    0x7a, 0x76, 0xce, 0xe5, 0x32, 0xfe, 0xae, 0xd5, 0xfe, 0x5f, 0x4d, 0xc1, 0x1e,
    0x7c, 0x96, 0xd9, 0x60, 0x5b, 0x35, 0x1a, 0x7a, 0xe2, 0x4c, 0xd0, 0x26, 0xc2,
    0xa7, 0x91, 0xb0, 0x96, 0x34, 0x08, 0xba, 0xe9, 0x63, 0xf8, 0xd9, 0xea, 0x55,
    0xdf, 0x37, 0x3d, 0x0a, 0x03, 0x83, 0x97, 0x9a, 0xc2, 0x70, 0x3f, 0xfc, 0xfd,
    0x54, 0x0e, 0x07, 0x98, 0x85, 0x98, 0x45, 0xbe, 0xdb, 0xeb, 0xc5, 0xa0, 0x8a,
    0x86, 0x37, 0xa0, 0x60, 0xea, 0x73, 0xdf, 0xbf, 0x71, 0x83, 0x63, 0xb5, 0xe1,
    0xd1, 0xb1, 0x80, 0xda, 0xd3, 0xd3, 0x08, 0x71, 0x3b, 0xcf, 0x75, 0x79, 0xb7,
    0x26, 0xc5, 0xa9, 0xf3, 0xce, 0x94, 0x38, 0xca, 0x03, 0x49, 0xe7, 0xd2, 0xa3,
    0x84, 0x8a, 0x94, 0xde, 0xf1, 0xd4, 0xb5, 0xc0, 0xa7, 0x38, 0xe2, 0x99, 0xa3,
    0x9a, 0xd1, 0xec, 0xb9, 0x82, 0x7d, 0x9b, 0xe1, 0xd3, 0xf0, 0xa5, 0xa8, 0xa7,
    0x40, 0xed, 0xdd, 0x10, 0x41, 0x9d, 0x2f, 0xc6, 0x92, 0x3e, 0x80, 0xc2, 0x93,
    0xed, 0x92, 0x96, 0xba, 0x98, 0xc8, 0x0c, 0x36, 0x5d, 0x7d, 0x83, 0xc0, 0xde,
    0x72, 0x03, 0xd0, 0x34, 0xf6, 0x93, 0x18, 0x8c, 0xc4, 0x93, 0x09, 0xa1, 0x52,
    0xb3, 0x4a, 0xb9, 0xa5, 0xac, 0xe4, 0xb3, 0xa5, 0x3c, 0x6b, 0x95, 0x77, 0x7a,
    0xb0, 0x9c, 0xe0, 0xc3, 0x79, 0xfd, 0x59, 0xec, 0xce, 0x5d, 0x62, 0xf3, 0x43,
    0xdf, 0x9b, 0x12, 0x32, 0x64, 0x10, 0x6b, 0x90, 0xef, 0x59, 0xb3, 0xe3, 0x12,
    0x1e, 0x5a, 0x2b, 0xaf, 0xa9, 0x37, 0x76, 0xce, 0x18, 0x5a, 0xbc, 0xff, 0x93,
    0x25, 0x70, 0xc8, 0x4d, 0x12, 0x53, 0xe0, 0x43, 0xb0, 0x7c, 0x25, 0x36, 0x3d,
    0xb6, 0x3c, 0x4a, 0xa5, 0x27, 0x80, 0x87, 0x3f, 0x7c, 0xb9, 0xa0, 0x3e, 0x49,
    0x73, 0xf7, 0x38, 0x16, 0xb6, 0xde, 0x33, 0xaf, 0x85, 0x8a, 0x7d, 0xf3, 0xb2,
    0x02, 0xbe, 0x31, 0x84, 0x10, 0x2a, 0x36, 0xc1, 0x98, 0x64, 0xfc, 0xf3, 0xa6,
    0xbd, 0x36, 0x5a, 0x52, 0x0d, 0x41, 0x49, 0xe6, 0x00, 0x83, 0xc3, 0xc1, 0xa1,
    0x3f, 0x91, 0x9d, 0x10, 0x63, 0x24, 0xd2, 0xcb, 0x8b, 0x65, 0xc5, 0xdc, 0x29,
    0x91, 0x30, 0x94, 0xbb, 0x85, 0xce, 0x5c, 0x7a, 0xba, 0x57, 0x24, 0x64, 0x81,
    0x4d, 0x8d, 0x95, 0x3c, 0xd2, 0x28, 0xc4, 0x02, 0x97, 0xd8, 0x6a, 0x19, 0xa7,
    0xf1, 0xb8, 0x5c, 0x89, 0x6c, 0x5a, 0x0c, 0xfc, 0xb9, 0x72, 0x1f, 0x81, 0xdf,
    0x82, 0xa2, 0x3c, 0x07, 0xa8, 0x57, 0x95, 0x4a, 0xe4, 0xbe, 0xa1, 0x04, 0xd1,
    0x23, 0xb2, 0x53, 0xca, 0x3a, 0xa7, 0x38, 0xde, 0xf0, 0x1e, 0xc4, 0x94, 0xba,
    0x68, 0x4f, 0xd0, 0x0d, 0x1f, 0xad, 0x7b, 0x24, 0x0c, 0xc4, 0x11, 0xbf, 0xc2,
    0x77, 0x27, 0x48, 0x57, 0x53, 0x14, 0xbb, 0xc0, 0xbb, 0x0f, 0x1e, 0xa1, 0xcf,
    0x05, 0xf0, 0xb7, 0xc4, 0x8b, 0xab, 0xa8, 0x43, 0x11, 0xfc, 0x29, 0x9a, 0x89,
    0xf4, 0xe7, 0x87, 0x57, 0x76, 0x85, 0x00, 0x31, 0x5f, 0xa7, 0xcc, 0x83, 0x3e,
    0x15, 0xa0, 0xf0, 0x83, 0xf5, 0xd0, 0x80, 0x08, 0xa2, 0xd2, 0x41, 0x4f, 0xb4,
    0xdd, 0x8c, 0xbe, 0x00, 0xb2, 0x29, 0x8b, 0x63, 0xf8, 0x9b, 0x23, 0x36, 0x03,
    0xf2, 0xf2, 0x8a, 0x24, 0x95, 0x4e, 0x96, 0x4f, 0x98, 0xd8, 0x3b, 0x28, 0x9e,
    0xe7, 0xd9, 0xe1, 0x9e, 0x8c, 0x02, 0x06, 0x14, 0xa3, 0xc0, 0x89, 0xc5, 0x34,
    0x26, 0xe6, 0x1f, 0x40, 0xd7, 0x56, 0x5a, 0xae, 0xa8, 0x9c, 0x54, 0xd9, 0x52,
    0x63, 0x67, 0x9a, 0x36, 0x93, 0x80, 0xa8, 0x09, 0xdd, 0x5a, 0x2a, 0xa7, 0xee,
    0x74, 0x26, 0xd5, 0x5d, 0x3e, 0xd7, 0x86, 0x53, 0x57, 0x45, 0x96, 0xaf, 0x26,
    0xf7, 0x3c, 0x74, 0x32, 0x90, 0x84, 0x96, 0x2b, 0x43, 0x8a, 0x10, 0xda, 0x40,
    0x9f, 0xb2, 0x03, 0x97, 0x1b, 0x6e, 0x78, 0xaf, 0xc4, 0x11, 0xce, 0x4e, 0xfe,
    0x96, 0x1d, 0xc7, 0xb4, 0x94, 0xb9, 0x52, 0xf7, 0x77, 0xb0, 0x09, 0x80, 0xd6,
    0x11, 0x98, 0xd5, 0x76, 0xae, 0xeb, 0x9c, 0x35, 0xa9, 0x3a, 0xf4, 0x25, 0x7e,
    0xe3, 0xb8, 0x06, 0x89, 0x43, 0x30, 0x2d, 0xdd, 0x7d, 0x19, 0xed, 0x9e, 0xfe,
    0xaf, 0x98, 0xf0, 0x2e, 0x8b, 0xa4, 0xba, 0xf5, 0x6b, 0x85, 0x41, 0xdc, 0x2c,
    0xbd, 0x2c, 0xb5, 0x89, 0x80, 0x42, 0xcf, 0xf6, 0x1b, 0x6f, 0x4a, 0x67, 0x14,
    0x43, 0x11, 0x20, 0xa2, 0x1e, 0xeb, 0x14, 0xfe, 0x03, 0x7b, 0x49, 0x31, 0x53,
    0x73, 0xe6, 0x8c, 0x2e, 0xdf, 0x68, 0x43, 0xac, 0xc6, 0x6d, 0x97, 0xbc, 0xe0,
    0x42, 0x0f, 0x0a, 0x14, 0x82, 0xce, 0x01, 0x05, 0xf0, 0x9c, 0x87, 0xd5, 0x1e,
    0xeb, 0xbb, 0xb1, 0xa2, 0xda, 0x74, 0x13, 0xe7, 0x30, 0x52, 0xad, 0x0b, 0x8c,
    0x04, 0xc8, 0x1d, 0xf1, 0x3c, 0xd5, 0xdc, 0x27, 0x38, 0xbe, 0xf8, 0xfe, 0x92,
    0x24, 0x4c, 0x96, 0xf8, 0x57, 0x9c, 0xa7, 0x02, 0x21, 0x73, 0xbf, 0xc5, 0xc2,
    0x34, 0xf3, 0xc0, 0x14, 0x4f, 0xcb, 0x64, 0x5f, 0x6e, 0x90, 0x1b, 0x56, 0x9a,
    0x67, 0xd6, 0xe6, 0xee, 0x2e, 0x64, 0x6d, 0x4a, 0x29, 0x61, 0x44, 0xb7, 0xa2,
    0x43, 0xf3, 0x68, 0x40, 0x24, 0x51, 0xaf, 0xb7, 0x03, 0x79, 0xf6, 0x03, 0xa0,
    0xce, 0x07, 0xb0, 0x54, 0x45, 0xbd, 0xfb, 0x0d, 0xf6, 0xdc, 0x45, 0x67, 0x41,
    0x95, 0xa3, 0xb9, 0x9c, 0x73, 0xe4, 0x31, 0x57, 0x67, 0x56, 0x87, 0x52, 0x9d,
    0x1a, 0x84, 0xc7, 0xb1, 0xe1, 0x67, 0xf5, 0xac, 0xe6, 0xca, 0x07, 0x4c, 0x82,
    0x93, 0x55, 0xdd, 0xed, 0x75, 0xb0, 0xec, 0x0c, 0xd4, 0x44, 0xed, 0xa0, 0x34,
    0xbb, 0x5e, 0xe2, 0x62, 0xd9, 0x57, 0xa3, 0x96, 0xc2, 0xc1, 0x2a, 0x90, 0x3b,
    0x96, 0x5e, 0xd8, 0x2b, 0xfb, 0x76, 0xc3, 0x3b, 0x14, 0xd3, 0xbf, 0xea, 0xb5,
    0xc7, 0xb0, 0x90, 0x35, 0xe9, 0xe1, 0xd4, 0x3d, 0x34, 0xd3, 0xec, 0x02, 0xdb,
    0xdd, 0x4e, 0x78, 0xfb, 0x3e, 0xd8, 0x12, 0xc3, 0x5d, 0x19, 0xda, 0x1d, 0x41,
    0xe0, 0xea, 0xd7, 0xed, 0x6c, 0x0f, 0xdc, 0xed, 0xc2, 0x03, 0x06, 0x3c, 0x33,
    0xa3, 0xb5, 0xc1, 0x6a, 0x25, 0x98, 0x9f, 0x40, 0x37, 0xcd, 0x6d, 0x6a, 0x31,
    0xa5, 0x00, 0xa2, 0x58, 0x09, 0x1d, 0x0c, 0x2e, 0x38, 0xf2, 0x0e, 0xbf, 0x50,
    0x1a, 0x72, 0xb3, 0x96, 0x61, 0xd8, 0xb5, 0x7b, 0x60, 0x41, 0x14, 0x47, 0xe8,
    0x57, 0xab, 0xbd, 0x08, 0x21, 0xc6, 0x76, 0x04, 0xbf, 0xf2, 0x88, 0xab, 0x7c,
    0xf2, 0x5d, 0x40, 0xd9, 0x11, 0x08, 0x1b, 0x75, 0x0b, 0x6f, 0x7b, 0x88, 0xe3,
    0xd8, 0xb0, 0xb5, 0x9a, 0xa6, 0xdb, 0x54, 0x7f, 0x0f, 0x0e, 0x6e, 0x51, 0x5c,
    0xe6, 0xa4, 0x93, 0x46, 0x5b, 0x7e, 0x2b, 0x8d, 0x47, 0x03, 0x3a, 0x33, 0xf2,
    0xcb, 0x93, 0xeb, 0xe5, 0xaa, 0xa8, 0xba, 0xab, 0x14, 0x2f, 0xdd, 0xbc, 0xf0,
    0xee, 0x10, 0x75, 0x8a, 0x1a, 0x07, 0xfd, 0xca, 0x0e, 0x44, 0x1c, 0xb3, 0xc1,
    0xb8, 0x7f, 0xf7, 0x65, 0xf9, 0x6d, 0x5e, 0x26, 0xd5, 0xd1, 0x6c, 0x80, 0x8d,
    0xb3, 0x86, 0x54, 0xbf, 0xab, 0xe6, 0x2f, 0x46, 0x1e, 0x5b, 0x17, 0xc3, 0x5b,
    0x02, 0xb5, 0xf5, 0x2c, 0xba, 0xda, 0x96, 0x50, 0xe2, 0xa5, 0x0a, 0x02, 0x69,
    0x24, 0x56, 0xb1, 0x21, 0xd8, 0xb2, 0xe9, 0x28, 0xea, 0x5a, 0x1f, 0xfd, 0xda,
    0x53, 0x38, 0x1e, 0xc9, 0x52, 0xf9, 0xc6, 0xec, 0xf2, 0xe4, 0x1d, 0xfa, 0xfa,
    0x62, 0xdc, 0x01, 0x60, 0x37, 0xe9, 0xe5, 0x77, 0x2a, 0xa3, 0xaa, 0xc6, 0xad,
    0x0f, 0x78, 0xc9, 0xf9, 0xa7, 0xb5, 0x88, 0x85, 0x5d, 0xfd, 0x92, 0x83, 0x84,
    0xf1, 0x67, 0x86, 0x92, 0x02, 0x61, 0x09, 0xdb, 0x8a, 0xb9, 0x3a, 0x96, 0x72,
    0x11, 0xab, 0xd0, 0x5e, 0x12, 0x90, 0xb8, 0xdb, 0x00, 0x3d, 0xb7, 0xc7, 0x19,
    0xec, 0xe5, 0xe7, 0x17, 0x7b, 0x1f, 0x65, 0x22, 0xd8, 0xab, 0xfc, 0x35, 0x41,
    0xd4, 0xb1, 0xab, 0x60, 0xf1, 0xdd, 0xb6, 0x9c, 0xd8, 0xd5, 0x63, 0xec, 0xeb,
    0xfb, 0x8a, 0x1c, 0x9a, 0x20, 0x6b, 0xf6, 0x86, 0xe5, 0xf9, 0xdd, 0xeb, 0xea,
    0x0e, 0xf9, 0xd9, 0x78, 0x2a, 0xc8, 0x7a, 0xdd, 0x2a, 0xe0, 0x69, 0xb7, 0xbf,
    0xd0, 0x1e, 0x30, 0xa8, 0x00, 0x9d, 0xab, 0x3a, 0x06, 0x35, 0xcb, 0xd0, 0x4a,
    0x21, 0x30, 0x50, 0x3c, 0xe3, 0x9f, 0xed, 0x03, 0xa6, 0x28, 0x24, 0x00, 0xe5,
    0x92, 0xcc, 0x85, 0x0b, 0x49, 0xc6, 0x7a, 0x2d, 0xf5, 0xdc, 0x82, 0x81, 0x47,
    0x99, 0x2c, 0xbc, 0x18, 0xe5, 0x9a, 0xad, 0xab, 0x05, 0x16, 0xb8, 0x87, 0x95,
    0x25, 0xbb, 0x02, 0xe1, 0xea, 0x96, 0xa5, 0x3f, 0xf3, 0x18, 0x00, 0x70, 0x66,
    0x97, 0x74, 0xb1, 0x62, 0x27, 0x77, 0x34, 0x60, 0x0e, 0xec, 0x35, 0x51, 0x74,
    0x55, 0xe6, 0x35, 0x54, 0x40, 0x54, 0x60, 0x52, 0x6d, 0xf6, 0xa4, 0xe3, 0x84,
    0x1c, 0x24, 0xb1, 0x2e, 0x59, 0x61, 0x4e, 0xc3, 0xe8, 0x95, 0xc1, 0x6e, 0xca,
    0x6e, 0x45, 0x7d, 0xa3, 0xaf, 0x8a, 0xea, 0x2f, 0x2f, 0x1b, 0x40, 0x37, 0x06,
    0x8c, 0xea, 0x13, 0x4c, 0x14, 0x96, 0x96, 0x5e, 0x56, 0x07, 0x4c, 0x5e, 0x09,
    0x64, 0x73, 0xc6, 0xf8, 0xca, 0xd1, 0xca, 0x43, 0x54, 0x89, 0x2b, 0x23, 0x1f,
    0x33, 0xa0, 0x50, 0x1a, 0x9d, 0xdd, 0x0a, 0xa5, 0x7b, 0xc7, 0xb9, 0xec, 0x96,
    0x76, 0xfe, 0x8c, 0x6d, 0xec, 0x23, 0xff, 0x9a, 0x9a, 0xf9, 0xd3, 0x0d, 0x55,
    0xcf, 0x05, 0xff, 0xc0, 0x22, 0x16, 0x35, 0x0c, 0xe2, 0x5f, 0x28, 0x79, 0xcb,
    0xd0, 0xa4, 0x74, 0xf9, 0x8d, 0x07, 0xc3, 0xa7, 0x6b, 0x4d, 0xf6, 0x0d, 0x7c,
    0x55, 0xad, 0x9d, 0xa2, 0x50, 0xf8, 0x3e, 0x1c, 0x13, 0xe2, 0x50, 0x76, 0x7f,
    0x43, 0xd8, 0x7d, 0x4c, 0xf4, 0x4d, 0x00, 0x06, 0x71, 0x9d, 0xf5, 0xf1, 0x1d,
    0x87, 0xd3, 0x40, 0xcb, 0xc1, 0x3a, 0xb7, 0x7a, 0x99, 0x39, 0x04, 0xc8, 0x4d,
    0x04, 0xda, 0x6f, 0x0a, 0xeb, 0xa6, 0xab, 0x85, 0x2a, 0x15, 0x62, 0x21, 0xfd,
    0xed, 0xe3, 0x1c, 0x9c, 0x2d, 0xe9, 0xef, 0x72, 0x07, 0x6c, 0xd3, 0x08, 0xc5,
    0x04, 0xbe, 0x29, 0x84, 0xf5, 0xa9, 0x77, 0xc5, 0x64, 0x25, 0x00, 0x80, 0x57,
    0x50, 0x47, 0x49, 0x01, 0x33, 0x7e, 0x84, 0xa5, 0xf7, 0xd7, 0xa6, 0xe0, 0xc7,
    0x7c, 0x84, 0xf9, 0xbe, 0xf0, 0x13, 0x8d, 0x8c, 0xfd, 0xa0, 0xac, 0x10, 0x4d,
    0x83, 0x09, 0x8a, 0x49, 0xe5, 0x7b, 0xb8, 0xbd, 0x08, 0x6f, 0x69, 0xc6, 0x30,
    0x7c, 0xfd, 0x65, 0xf8, 0x14, 0x64, 0x86, 0x2b, 0x57, 0x3c, 0xa6, 0xc3, 0x17,
    0x0f, 0xa7, 0x82, 0xd9, 0x8d, 0xb8, 0x62, 0xe0, 0xc7, 0xf3, 0x52, 0x50, 0x83,
    0x5f, 0xd0, 0x0d, 0x58, 0x16, 0x97, 0x6b, 0x26, 0x8d, 0x25, 0x14, 0x43, 0xa1,
    0x0a, 0x97, 0x56, 0x53, 0x9f, 0xce, 0x88, 0xcb, 0xdf, 0x4c, 0xfd, 0xa9, 0x3e,
    0x2a, 0x71, 0xce, 0xea, 0x08, 0x88, 0xcc, 0x03, 0x0a, 0xf3, 0xba, 0xa4, 0xda,
    0xe3, 0x6d, 0x13, 0xdb, 0xd1, 0x46, 0x01, 0x2c, 0xa6, 0x4b, 0x68, 0xb3, 0x45,
    0x2f, 0x5b, 0xaf, 0x80, 0x56, 0xe7, 0xcb, 0xc7, 0x09, 0xd6, 0xc6, 0x9a, 0x29,
    0x54, 0xea, 0x26, 0x5b, 0x13, 0x4e, 0xab, 0x09, 0xe1, 0xeb, 0x6e, 0xe7, 0x4f,
    0x19, 0x02, 0x55, 0xd0, 0xe2, 0x86, 0xbb, 0xfe, 0x90, 0x4a, 0x54, 0xce, 0xd7,
    0xb5, 0x61, 0xcd, 0xf9, 0x6a, 0x28, 0xa7, 0xbf, 0x3e, 0x10, 0x56, 0xe5, 0x3b,
    0x13, 0x3c, 0x0f, 0x5a, 0x12, 0x2f, 0xf3, 0xda, 0x96, 0x2d, 0x17, 0xdf, 0x29,
    0x21, 0x39, 0xfc, 0x47, 0x79, 0x89, 0x72, 0x8c, 0x43, 0xd4, 0x21, 0x06, 0xf8,
    0x2a, 0x3c, 0x81, 0x1d, 0x59, 0xe6, 0xa8, 0x9b, 0x13, 0xf7, 0x97, 0x6b, 0x9e,
    0x73, 0xf3, 0x3a, 0x95, 0xa0, 0x86, 0x26, 0x2b, 0xd7, 0xe6, 0x4f, 0xd8, 0x58,
    0xba, 0xdb, 0x10, 0x6b, 0x23, 0xbc, 0x9e, 0x3d, 0x33, 0xa2, 0x5b, 0xd6, 0x21,
    0xb1, 0x06, 0xc8, 0x84, 0x90, 0x89, 0xa7, 0xeb, 0x7d, 0x2a, 0x7f, 0xcf, 0x9c,
    0x73, 0xe0, 0xe2, 0xa5, 0xd6, 0x18, 0xb3, 0xda, 0xb7, 0xd1, 0x64, 0xa8, 0x68,
    0x87, 0x74, 0xc9, 0x75, 0x59, 0x15, 0xd2, 0x05, 0x7f, 0xcf, 0x81, 0xa3, 0x7f,
    0x9e, 0x52, 0xc2, 0x24, 0xc4, 0xd3, 0x4a, 0xc3, 0x8f, 0xc5, 0x45, 0x13, 0x99,
    0x18, 0x2e, 0xa4, 0xb6, 0x0b, 0x6b, 0x78, 0x49, 0xa1, 0x6a, 0x9c, 0x63, 0xb0,
    0x5b, 0xb5, 0x0f, 0x85, 0x25, 0x5b, 0x46, 0x8e, 0xaf, 0x2e, 0x2a, 0x81, 0xdf,
    0xec, 0x17, 0x15, 0xbe, 0xba, 0x29, 0xc4, 0x62, 0x6e, 0x10, 0xde, 0xfc, 0x64,
    0x26, 0xe2, 0xb2, 0x0b, 0x07, 0x88, 0x21, 0x72, 0x9b, 0x5f, 0x52, 0x56, 0x47,
    0xec, 0x28, 0x91, 0xdc, 0xe6, 0x6a, 0xd7, 0xda, 0xae, 0x90, 0x4a, 0xa0, 0x40,
    0xfb, 0xe6, 0xd7, 0x98, 0x89, 0x52, 0x0f, 0x5b, 0x8d, 0x82, 0xb3, 0x91, 0xfd,
    0x3c, 0x74, 0xda, 0x4d, 0x9d, 0xe3, 0xc4, 0xbd, 0xf9, 0x45, 0xeb, 0x13, 0x17,
    0xd3, 0x81, 0x0d, 0x9d, 0x82, 0xec, 0xd9, 0x77, 0x4e, 0x2f, 0xa0, 0x12, 0x60,
    0xfd, 0x3b
};
const std::array<std::array<uint8_t, 32>, TEST_VEC_LEN> poly256_from_8_poly256_output = {{
    { 0xc5, 0x6b, 0x31, 0x1c, 0x31, 0x3e, 0xe2, 0xd4, 0x90, 0x00, 0xd2, 0x98,
      0xbc, 0x53, 0x2e, 0x66, 0x3c, 0x81, 0x70, 0x97, 0x4b, 0xa2, 0x02, 0x28, 0x96,
      0x62, 0xc0, 0x32, 0x23, 0x7a, 0x00, 0x5c },
    { 0xe7, 0x32, 0x85, 0x0e, 0x17, 0x7e, 0x5f, 0x2d, 0xd3, 0xe8, 0x76, 0x5c,
      0xcd, 0x91, 0xa2, 0x54, 0x38, 0xc3, 0xc6, 0xb8, 0x41, 0xe0, 0xab, 0x2e, 0x3d,
      0xa0, 0xdc, 0x64, 0x8d, 0x9f, 0xac, 0xa9 },
    { 0x2f, 0x7d, 0x52, 0xef, 0xcc, 0xba, 0x23, 0x0f, 0xe9, 0x25, 0x54, 0xd1,
      0xc3, 0x0b, 0xb9, 0xfb, 0xaa, 0xa4, 0x67, 0x2f, 0x47, 0x4b, 0x8c, 0x56, 0x14,
      0x1b, 0xdc, 0x6a, 0x80, 0x11, 0x5d, 0x44 },
    { 0xe9, 0xfc, 0x66, 0x22, 0xde, 0x0e, 0xa2, 0xce, 0x12, 0xa2, 0x45, 0x65,
      0x00, 0xb9, 0xba, 0x4f, 0x0c, 0x7d, 0x33, 0x4b, 0xf9, 0x0f, 0xec, 0xad, 0xbc,
      0x40, 0xb3, 0xe3, 0x65, 0x68, 0x06, 0xb8 },
    { 0x4c, 0xd5, 0x3e, 0xbb, 0xba, 0x19, 0x36, 0xa2, 0xa4, 0x87, 0xe7, 0x6f,
      0x9c, 0x0f, 0x63, 0x64, 0xf8, 0x85, 0x3e, 0x8c, 0x24, 0x0e, 0xf1, 0xc7, 0x3b,
      0x2a, 0xcf, 0x71, 0x8c, 0x87, 0x73, 0x17 },
    { 0x41, 0x6f, 0x36, 0x3f, 0xbe, 0x43, 0x57, 0x64, 0x63, 0xfc, 0x46, 0xd9,
      0xb4, 0x96, 0x6e, 0x38, 0x54, 0xf4, 0x9c, 0xa1, 0xab, 0x95, 0x2a, 0x17, 0x45,
      0xf7, 0x42, 0xc7, 0x63, 0xda, 0xb7, 0xbf },
    { 0x26, 0x86, 0x17, 0x2c, 0x97, 0x62, 0xac, 0x6d, 0x24, 0x91, 0x73, 0x4b,
      0xa5, 0xb5, 0xdc, 0xfa, 0x29, 0x3d, 0x26, 0x02, 0x1e, 0x47, 0xe9, 0xb8, 0x6a,
      0xa0, 0x4a, 0xc2, 0xa2, 0x6f, 0xc8, 0x3e },
    { 0x03, 0x3b, 0xfa, 0x4f, 0x5a, 0x09, 0xf7, 0x30, 0xc4, 0x03, 0x23, 0x4e,
      0x6e, 0x8b, 0x9b, 0x9c, 0x71, 0x83, 0x90, 0x43, 0x59, 0x9c, 0x42, 0x00, 0x29,
      0xc2, 0x45, 0x21, 0x6c, 0xe8, 0xf5, 0x4d },
    { 0xb2, 0xb2, 0x27, 0x8e, 0x50, 0xf4, 0xe1, 0x13, 0xb0, 0xb3, 0x02, 0xe3,
      0xba, 0x43, 0x55, 0x6a, 0xaa, 0xce, 0xfd, 0x60, 0x25, 0x6e, 0x85, 0xa4, 0x9f,
      0xe9, 0x23, 0xc9, 0x56, 0x2d, 0x27, 0x50 },
    { 0x5a, 0x3b, 0x19, 0x42, 0x29, 0x7c, 0x69, 0x59, 0x45, 0x7c, 0x4e, 0xf5,
      0xed, 0x75, 0x33, 0x15, 0x2e, 0xce, 0xcb, 0x46, 0xe3, 0x96, 0x7e, 0x9b, 0xfc,
      0xb0, 0x95, 0xf3, 0xb2, 0x09, 0xef, 0xa6 },
    { 0xa9, 0x4b, 0x59, 0xd7, 0xa9, 0xd9, 0x85, 0xff, 0x3f, 0x13, 0x71, 0x3a,
      0x01, 0xd2, 0xa4, 0x3f, 0xfc, 0x40, 0x0c, 0x3f, 0x23, 0xc1, 0xe0, 0x6a, 0x1e,
      0xd6, 0xbe, 0x88, 0x2b, 0xb0, 0xab, 0xfd },
    { 0x2a, 0x03, 0x15, 0x8b, 0x4c, 0x1f, 0x52, 0x2a, 0x2e, 0x5b, 0x50, 0xe3,
      0xfe, 0x45, 0x29, 0xb5, 0x2d, 0xa9, 0xa4, 0x69, 0xb2, 0xd5, 0x33, 0x83, 0x43,
      0x7a, 0x70, 0x82, 0x33, 0x33, 0xb1, 0xb5 },
    { 0x58, 0x44, 0x6e, 0xea, 0x14, 0x46, 0x71, 0x5b, 0x50, 0xf9, 0x1b, 0x4c,
      0xc4, 0x07, 0x05, 0x2d, 0xda, 0x27, 0x1a, 0x4e, 0x00, 0x71, 0x12, 0x0e, 0x88,
      0xa1, 0xe8, 0x1b, 0x48, 0x69, 0xb6, 0xcd },
    { 0x64, 0xdc, 0x97, 0x53, 0xd9, 0x23, 0x6c, 0x90, 0x7f, 0xe1, 0x98, 0xf0,
      0x05, 0x67, 0x0f, 0xb9, 0xa6, 0xb2, 0x9a, 0xed, 0x06, 0x07, 0xa8, 0xf3, 0x06,
      0xad, 0x18, 0x3c, 0xce, 0xd7, 0x22, 0x2d },
    { 0x78, 0x27, 0x25, 0xcc, 0x42, 0x8d, 0xce, 0xa2, 0x01, 0x30, 0x53, 0x7c,
      0xd8, 0x01, 0xc6, 0x33, 0x15, 0x93, 0x8b, 0x80, 0x63, 0x4d, 0xaf, 0x28, 0x3a,
      0x18, 0x5f, 0xfe, 0x67, 0x44, 0xa7, 0x5f },
    { 0xaf, 0x21, 0x0e, 0xe2, 0x9d, 0xaf, 0x9b, 0xec, 0xcd, 0x55, 0xd1, 0x75,
      0x5c, 0x60, 0x79, 0x15, 0x82, 0x14, 0x72, 0x50, 0xdb, 0x1c, 0xe2, 0x81, 0xba,
      0xb2, 0xc1, 0x02, 0x20, 0xa9, 0xd3, 0xc9 },
}};

// clang-format on

TEST_CASE("poly64 load and store", "[polynomial]")
{
    std::array<uint8_t, 8 * POLY_VEC_LEN> tmp = {0};
    for (size_t offset = 0; offset < enc_poly64_vec_xs.size(); offset += 8 * POLY_VEC_LEN)
    {
        poly64 a = poly64::load(enc_poly64_vec_xs.data() + offset);
        a.store(tmp.data());
        REQUIRE(memcmp(tmp.data(), enc_poly64_vec_xs.data() + offset, 8 * POLY_VEC_LEN) == 0);
    }
}

TEST_CASE("poly64 eq", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly64_vec_xs.size(); offset += 8 * POLY_VEC_LEN)
    {
        poly64 a = poly64::load(enc_poly64_vec_xs.data() + offset);
        poly64 b = poly64::load(enc_poly64_vec_ys.data() + offset);
        REQUIRE_POLYVEC_EQ(a, a);
        REQUIRE_POLYVEC_EQ(b, b);
        REQUIRE_POLYVEC_NEQ(a, b);
        REQUIRE_POLYVEC_NEQ(b, a);
    }
}

TEST_CASE("poly64 add", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly64_vec_xs.size(); offset += 8 * POLY_VEC_LEN)
    {
        poly64 a = poly64::load(enc_poly64_vec_xs.data() + offset);
        poly64 b = poly64::load(enc_poly64_vec_ys.data() + offset);
        poly64 sum = poly64::load(enc_poly64_vec_sums.data() + offset);
        REQUIRE_POLYVEC_EQ(a + b, sum);
        REQUIRE_POLYVEC_EQ(b + a, sum);
    }
}

TEST_CASE("poly64 mul", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly64_vec_xs.size(); offset += 8 * POLY_VEC_LEN)
    {
        poly64 a = poly64::load(enc_poly64_vec_xs.data() + offset);
        poly64 b = poly64::load(enc_poly64_vec_ys.data() + offset);
        poly128 unreduced_product =
            poly128::load(enc_poly64_vec_unreduced_products.data() + 2 * offset);
        REQUIRE_POLYVEC_EQ(a * b, unreduced_product);
        REQUIRE_POLYVEC_EQ(b * a, unreduced_product);
    }
}

TEST_CASE("poly64 mul/reduce", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly64_vec_xs.size(); offset += 8 * POLY_VEC_LEN)
    {
        poly64 a = poly64::load(enc_poly64_vec_xs.data() + offset);
        poly64 b = poly64::load(enc_poly64_vec_ys.data() + offset);
        poly64 product = poly64::load(enc_poly64_vec_products.data() + offset);
        REQUIRE_POLYVEC_EQ((a * b).reduce_to<64>(), product);
        REQUIRE_POLYVEC_EQ((b * a).reduce_to<64>(), product);
    }
}

TEST_CASE("poly128 load and store", "[polynomial]")
{
    std::array<uint8_t, 16 * POLY_VEC_LEN> tmp = {0};
    for (size_t offset = 0; offset < enc_poly128_vec_xs.size(); offset += 16 * POLY_VEC_LEN)
    {
        poly128 a = poly128::load(enc_poly128_vec_xs.data() + offset);
        a.store(tmp.data());
        REQUIRE(memcmp(tmp.data(), enc_poly128_vec_xs.data() + offset, 16 * POLY_VEC_LEN) == 0);
    }
}

TEST_CASE("poly128 eq", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly128_vec_xs.size(); offset += 16 * POLY_VEC_LEN)
    {
        poly128 a = poly128::load(enc_poly128_vec_xs.data() + offset);
        poly128 b = poly128::load(enc_poly128_vec_ys.data() + offset);
        REQUIRE_POLYVEC_EQ(a, a);
        REQUIRE_POLYVEC_EQ(b, b);
        REQUIRE_POLYVEC_NEQ(a, b);
        REQUIRE_POLYVEC_NEQ(b, a);
    }
}

TEST_CASE("poly128 add", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly128_vec_xs.size(); offset += 16 * POLY_VEC_LEN)
    {
        poly128 a = poly128::load(enc_poly128_vec_xs.data() + offset);
        poly128 b = poly128::load(enc_poly128_vec_ys.data() + offset);
        poly128 sum = poly128::load(enc_poly128_vec_sums.data() + offset);
        REQUIRE_POLYVEC_EQ(a + b, sum);
        REQUIRE_POLYVEC_EQ(b + a, sum);
    }
}

TEST_CASE("poly128 mul", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly128_vec_xs.size(); offset += 16 * POLY_VEC_LEN)
    {
        poly128 a = poly128::load(enc_poly128_vec_xs.data() + offset);
        poly128 b = poly128::load(enc_poly128_vec_ys.data() + offset);
        poly256 unreduced_product =
            poly256::load(enc_poly128_vec_unreduced_products.data() + 2 * offset);
        REQUIRE_POLYVEC_EQ(a * b, unreduced_product);
        REQUIRE_POLYVEC_EQ(b * a, unreduced_product);
    }
}

TEST_CASE("poly128 mul/reduce", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly128_vec_xs.size(); offset += 16 * POLY_VEC_LEN)
    {
        poly128 a = poly128::load(enc_poly128_vec_xs.data() + offset);
        poly128 b = poly128::load(enc_poly128_vec_ys.data() + offset);
        poly128 product = poly128::load(enc_poly128_vec_products.data() + offset);
        REQUIRE_POLYVEC_EQ((a * b).reduce_to<128>(), product);
        REQUIRE_POLYVEC_EQ((b * a).reduce_to<128>(), product);
    }
}

TEST_CASE("poly192 load and store", "[polynomial]")
{
    std::array<uint8_t, 24 * POLY_VEC_LEN> tmp = {0};
    for (size_t offset = 0; offset < enc_poly192_vec_xs.size(); offset += 24 * POLY_VEC_LEN)
    {
        poly192 a = poly192::load(enc_poly192_vec_xs.data() + offset);
        a.store(tmp.data());
        REQUIRE(memcmp(tmp.data(), enc_poly192_vec_xs.data() + offset, 24 * POLY_VEC_LEN) == 0);
    }
}

TEST_CASE("poly192 eq", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly192_vec_xs.size(); offset += 24 * POLY_VEC_LEN)
    {
        poly192 a = poly192::load(enc_poly192_vec_xs.data() + offset);
        poly192 b = poly192::load(enc_poly192_vec_ys.data() + offset);
        REQUIRE_POLYVEC_EQ(a, a);
        REQUIRE_POLYVEC_EQ(b, b);
        REQUIRE_POLYVEC_NEQ(a, b);
        REQUIRE_POLYVEC_NEQ(b, a);
    }
}

TEST_CASE("poly192 add", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly192_vec_xs.size(); offset += 24 * POLY_VEC_LEN)
    {
        poly192 a = poly192::load(enc_poly192_vec_xs.data() + offset);
        poly192 b = poly192::load(enc_poly192_vec_ys.data() + offset);
        poly192 sum = poly192::load(enc_poly192_vec_sums.data() + offset);
        REQUIRE_POLYVEC_EQ((a + b), sum);
        REQUIRE_POLYVEC_EQ((b + a), sum);
    }
}

TEST_CASE("poly192 mul", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly192_vec_xs.size(); offset += 24 * POLY_VEC_LEN)
    {
        poly192 a = poly192::load(enc_poly192_vec_xs.data() + offset);
        poly192 b = poly192::load(enc_poly192_vec_ys.data() + offset);
        poly384 unreduced_product =
            poly384::load(enc_poly192_vec_unreduced_products.data() + 2 * offset);
        REQUIRE_POLYVEC_EQ((a * b), unreduced_product);
        REQUIRE_POLYVEC_EQ((b * a), unreduced_product);
    }
}

TEST_CASE("poly192 mul/reduce", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly192_vec_xs.size(); offset += 24 * POLY_VEC_LEN)
    {
        poly192 a = poly192::load(enc_poly192_vec_xs.data() + offset);
        poly192 b = poly192::load(enc_poly192_vec_ys.data() + offset);
        poly192 product = poly192::load(enc_poly192_vec_products.data() + offset);
        REQUIRE_POLYVEC_EQ((a * b).reduce_to<192>(), product);
        REQUIRE_POLYVEC_EQ((b * a).reduce_to<192>(), product);
    }
}

TEST_CASE("poly256 load and store", "[polynomial]")
{
    std::array<uint8_t, 32 * POLY_VEC_LEN> tmp = {0};
    for (size_t offset = 0; offset < enc_poly256_vec_xs.size(); offset += 32 * POLY_VEC_LEN)
    {
        poly256 a = poly256::load(enc_poly256_vec_xs.data() + offset);
        a.store(tmp.data());
        REQUIRE(memcmp(tmp.data(), enc_poly256_vec_xs.data() + offset, 32 * POLY_VEC_LEN) == 0);
    }
}

TEST_CASE("poly256 eq", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly256_vec_xs.size(); offset += 32 * POLY_VEC_LEN)
    {
        poly256 a = poly256::load(enc_poly256_vec_xs.data() + offset);
        poly256 b = poly256::load(enc_poly256_vec_ys.data() + offset);
        REQUIRE_POLYVEC_EQ(a, a);
        REQUIRE_POLYVEC_EQ(b, b);
        REQUIRE_POLYVEC_NEQ(a, b);
        REQUIRE_POLYVEC_NEQ(b, a);
    }
}

TEST_CASE("poly256 add", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly256_vec_xs.size(); offset += 32 * POLY_VEC_LEN)
    {
        poly256 a = poly256::load(enc_poly256_vec_xs.data() + offset);
        poly256 b = poly256::load(enc_poly256_vec_ys.data() + offset);
        poly256 sum = poly256::load(enc_poly256_vec_sums.data() + offset);
        REQUIRE_POLYVEC_EQ(a + b, sum);
        REQUIRE_POLYVEC_EQ(b + a, sum);
    }
}

TEST_CASE("poly256 mul", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly256_vec_xs.size(); offset += 32 * POLY_VEC_LEN)
    {
        poly256 a = poly256::load(enc_poly256_vec_xs.data() + offset);
        poly256 b = poly256::load(enc_poly256_vec_ys.data() + offset);
        poly512 unreduced_product =
            poly512::load(enc_poly256_vec_unreduced_products.data() + 2 * offset);
        REQUIRE_POLYVEC_EQ(a * b, unreduced_product);
        REQUIRE_POLYVEC_EQ(b * a, unreduced_product);
    }
}

TEST_CASE("poly256 mul/reduce", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly256_vec_xs.size(); offset += 32 * POLY_VEC_LEN)
    {
        poly256 a = poly256::load(enc_poly256_vec_xs.data() + offset);
        poly256 b = poly256::load(enc_poly256_vec_ys.data() + offset);
        poly256 product = poly256::load(enc_poly256_vec_products.data() + offset);
        REQUIRE_POLYVEC_EQ((a * b).reduce_to<256>(), product);
        REQUIRE_POLYVEC_EQ((b * a).reduce_to<256>(), product);
    }
}

TEST_CASE("poly128 from poly64", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly64_vec_xs.size(); offset += 8 * POLY_VEC_LEN)
    {
        poly64 a = poly64::load(enc_poly64_vec_xs.data() + offset);
        poly128 b = poly128::load(enc_poly64_vec_as_poly128_xs.data() + 2 * offset);
        poly128 a_128 = poly128::from(a);
        REQUIRE_POLYVEC_EQ(a_128, b);
    }
}

TEST_CASE("poly192 from poly128", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly128_vec_xs.size(); offset += 16 * POLY_VEC_LEN)
    {
        poly128 a = poly128::load(enc_poly128_vec_xs.data() + offset);
        poly192 b = poly192::load(enc_poly128_vec_as_poly192_xs.data() + (offset / 16) * 24);
        poly192 a_192 = poly192::from(a);
        REQUIRE_POLYVEC_EQ(a_192, b);
    }
}

TEST_CASE("poly256 from poly128", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly128_vec_xs.size(); offset += 16 * POLY_VEC_LEN)
    {
        poly128 a = poly128::load(enc_poly128_vec_xs.data() + offset);
        poly256 b = poly256::load(enc_poly128_vec_as_poly256_xs.data() + 2 * offset);
        poly256 a_256 = poly256::from(a);
        REQUIRE_POLYVEC_EQ(a_256, b);
    }
}

TEST_CASE("poly256 from poly192", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly192_vec_xs.size(); offset += 24 * POLY_VEC_LEN)
    {
        poly192 a = poly192::load(enc_poly192_vec_xs.data() + offset);
        poly256 b = poly256::load(enc_poly192_vec_as_poly256_xs.data() + (offset / 24) * 32);
        poly256 a_256 = poly256::from(a);
        REQUIRE_POLYVEC_EQ(a_256, b);
    }
}

TEST_CASE("poly384 from poly192", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly192_vec_xs.size(); offset += 24 * POLY_VEC_LEN)
    {
        poly192 a = poly192::load(enc_poly192_vec_xs.data() + offset);
        poly384 b = poly384::load(enc_poly192_vec_as_poly384_xs.data() + 2 * offset);
        poly384 a_384 = poly384::from(a);
        REQUIRE_POLYVEC_EQ(a_384, b);
    }
}

TEST_CASE("poly320 from poly256", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly256_vec_xs.size(); offset += 32 * POLY_VEC_LEN)
    {
        poly256 a = poly256::load(enc_poly256_vec_xs.data() + offset);
        poly320 b = poly320::load(enc_poly256_vec_as_poly320_xs.data() + (offset / 32) * 40);
        poly320 a_320 = poly320::from(a);
        REQUIRE_POLYVEC_EQ(a_320, b);
    }
}

TEST_CASE("poly512 from poly256", "[polynomial]")
{
    for (size_t offset = 0; offset < enc_poly256_vec_xs.size(); offset += 32 * POLY_VEC_LEN)
    {
        poly256 a = poly256::load(enc_poly256_vec_xs.data() + offset);
        poly512 b = poly512::load(enc_poly256_vec_as_poly512_xs.data() + 2 * offset);
        poly512 a_512 = poly512::from(a);
        REQUIRE_POLYVEC_EQ(a_512, b);
    }
}

TEST_CASE("poly128_from_8_poly1", "[polynomial]")
{
    const auto& inputs = poly128_from_8_poly1_input;
    const auto& outputs = poly128_from_8_poly1_output;

    for (size_t index = 0; index < TEST_VEC_LEN; index += POLY_VEC_LEN)
    {
        poly1 bits[8];
        for (size_t bit = 0; bit < 8; ++bit)
            bits[bit] = poly1::load_offset8(&inputs[index], bit);

        poly128 combined = poly128::from_8_poly1(bits);
        std::array<std::array<uint8_t, 16>, POLY_VEC_LEN> combinedPacked;
        combined.store(combinedPacked[0].data());

        for (size_t k = 0; k < POLY_VEC_LEN; ++k)
            CHECK(combinedPacked[k] == outputs[index + k]);
    }
}

TEST_CASE("poly192_from_8_poly1", "[polynomial]")
{
    const auto& inputs = poly192_from_8_poly1_input;
    const auto& outputs = poly192_from_8_poly1_output;

    for (size_t index = 0; index < TEST_VEC_LEN; index += POLY_VEC_LEN)
    {
        poly1 bits[8];
        for (size_t bit = 0; bit < 8; ++bit)
            bits[bit] = poly1::load_offset8(&inputs[index], bit);

        poly192 combined = poly192::from_8_poly1(bits);
        std::array<std::array<uint8_t, 24>, POLY_VEC_LEN> combinedPacked;
        combined.store(combinedPacked[0].data());

        for (size_t k = 0; k < POLY_VEC_LEN; ++k)
            CHECK(combinedPacked[k] == outputs[index + k]);
    }
}

TEST_CASE("poly256_from_8_poly1", "[polynomial]")
{
    const auto& inputs = poly256_from_8_poly1_input;
    const auto& outputs = poly256_from_8_poly1_output;

    for (size_t index = 0; index < TEST_VEC_LEN; index += POLY_VEC_LEN)
    {
        poly1 bits[8];
        for (size_t bit = 0; bit < 8; ++bit)
            bits[bit] = poly1::load_offset8(&inputs[index], bit);

        poly256 combined = poly256::from_8_poly1(bits);
        std::array<std::array<uint8_t, 32>, POLY_VEC_LEN> combinedPacked;
        combined.store(combinedPacked[0].data());

        for (size_t k = 0; k < POLY_VEC_LEN; ++k)
            CHECK(combinedPacked[k] == outputs[index + k]);
    }
}

TEST_CASE("poly128_from_8_poly128", "[polynomial]")
{
    const auto& inputs = poly128_from_8_poly128_input;
    const auto& outputs = poly128_from_8_poly128_output;

    for (size_t index = 0; index < TEST_VEC_LEN; index += POLY_VEC_LEN)
    {
        poly128 polys[8];
        for (size_t bit = 0; bit < 8; ++bit)
            polys[bit] = poly128::load(inputs.data() + (index * 8 + bit) * 16);

        poly128 combined = poly128::from_8_self(polys);
        std::array<std::array<uint8_t, 16>, POLY_VEC_LEN> combinedPacked;
        combined.store(combinedPacked[0].data());

        for (size_t k = 0; k < POLY_VEC_LEN; ++k)
            CHECK(combinedPacked[k] == outputs[index + k]);
    }
}

TEST_CASE("poly192_from_8_poly192", "[polynomial]")
{
    const auto& inputs = poly192_from_8_poly192_input;
    const auto& outputs = poly192_from_8_poly192_output;

    for (size_t index = 0; index < TEST_VEC_LEN; index += POLY_VEC_LEN)
    {
        poly192 polys[8];
        for (size_t bit = 0; bit < 8; ++bit)
            polys[bit] = poly192::load(inputs.data() + (index * 8 + bit) * 24);

        poly192 combined = poly192::from_8_self(polys);
        std::array<std::array<uint8_t, 24>, POLY_VEC_LEN> combinedPacked;
        combined.store(combinedPacked[0].data());

        for (size_t k = 0; k < POLY_VEC_LEN; ++k)
            CHECK(combinedPacked[k] == outputs[index + k]);
    }
}

TEST_CASE("poly256_from_8_poly256", "[polynomial]")
{
    const auto& inputs = poly256_from_8_poly256_input;
    const auto& outputs = poly256_from_8_poly256_output;

    for (size_t index = 0; index < TEST_VEC_LEN; index += POLY_VEC_LEN)
    {
        poly256 polys[8];
        for (size_t bit = 0; bit < 8; ++bit)
            polys[bit] = poly256::load(inputs.data() + (index * 8 + bit) * 32);

        poly256 combined = poly256::from_8_self(polys);
        std::array<std::array<uint8_t, 32>, POLY_VEC_LEN> combinedPacked;
        combined.store(combinedPacked[0].data());

        for (size_t k = 0; k < POLY_VEC_LEN; ++k)
            CHECK(combinedPacked[k] == outputs[index + k]);
    }
}
